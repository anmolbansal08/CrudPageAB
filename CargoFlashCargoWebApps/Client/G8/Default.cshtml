@using CargoFlash.Cargo.WebUI.Master
@using CargoFlash.Cargo.WebUI.Stock
@using CargoFlash.Cargo.WebUI.Rate
@using CargoFlash.Cargo.WebUI.Schedule
@using CargoFlash.Cargo.WebUI.Accounts
@using CargoFlash.Cargo.WebUI.Shipment
@using CargoFlash.Cargo.WebUI.ULD
@using CargoFlash.Cargo.WebUI.SpaceControl
@using CargoFlash.Cargo.WebUI.Permissions
@using CargoFlash.SoftwareFactory.WebUI.Adapters
@using CargoFlash.Cargo.WebUI.Irregularity
@using CargoFlash.Cargo.WebUI.Roster
@using CargoFlash.Cargo.WebUI.Warehouse
@using CargoFlash.Cargo.WebUI.Inventory
@using CargoFlash.Cargo.WebUI.Import
@using CargoFlash.Cargo.WebUI.Tariff
@using CargoFlash.Cargo.WebUI.Mail
@using CargoFlash.Cargo.WebUI.EDI
@using CargoFlash.Cargo.WebUI.Report
@using CargoFlash.Cargo.WebUI.Tools
@using CargoFlash.Cargo.WebUI.AgentBuildUp;
@using CargoFlash.Cargo.WebUI.CRA;
@{var NewTerminalName = "";}
@{

    if (Session["UserDetail"] != null)
    {
        if (((CargoFlash.Cargo.Model.UserLogin)(System.Web.HttpContext.Current.Session["UserDetail"])).DefaultTerminalSNo != ((CargoFlash.Cargo.Model.UserLogin)(System.Web.HttpContext.Current.Session["UserDetail"])).TerminalSNo
            && !((CargoFlash.Cargo.Model.UserLogin)(System.Web.HttpContext.Current.Session["UserDetail"])).IsLogin
            && ((CargoFlash.Cargo.Model.UserLogin)(System.Web.HttpContext.Current.Session["UserDetail"])).DefaultTerminalSNo > 0)
        {
            NewTerminalName = ((CargoFlash.Cargo.Model.UserLogin)(System.Web.HttpContext.Current.Session["UserDetail"])).NewTerminalName;

            CargoFlash.Cargo.DataService.Common.CommonService CS = new CargoFlash.Cargo.DataService.Common.CommonService();
            string loginPage = CS.GetSystemSetting("LoginPage");

            @*<script type="text/javascript">
                    $(document).ready(function () {
                        jQuery.alerts.okButton = 'CONTINUE';
                        jQuery.alerts.cancelButton = 'LOGOUT';
                        jConfirm("Your current Terminal is @NewTerminalName which is not your default terminal. Do you wish to CONTINUE OR LOGOUT ??", '', function (r) {
                            if (r != true) {
                                window.location = "./Account/@loginPage?islogout=true";
                            }
                        });
                    });

                </script>*@  HttpContext.Current.Session["MsgKey"] = null;
    ((CargoFlash.Cargo.Model.UserLogin)(System.Web.HttpContext.Current.Session["UserDetail"])).IsLogin = true;
}

            @Html.Hidden("hdnLo");

        // if (Convert.ToBoolean(((CargoFlash.Cargo.Model.UserLogin)(System.Web.HttpContext.Current.Session["UserDetail"])).IsLogin) == false)
        @*if (((CargoFlash.Cargo.Model.UserLogin)(System.Web.HttpContext.Current.Session["UserDetail"])).NewTerminalSNo != 0 && Convert.ToBoolean(((CargoFlash.Cargo.Model.UserLogin)(System.Web.HttpContext.Current.Session["UserDetail"])).IsLogin) == false)
            {

                CargoFlash.Cargo.DataService.LoginService ls = new CargoFlash.Cargo.DataService.LoginService();

                <script type="text/javascript">
                        $(document).ready(function () {
                    jQuery.alerts.okButton = 'CONTINUE';
                    jQuery.alerts.cancelButton = 'LOGOUT';
                    jConfirm("Your current Terminal is @NewTerminalName which is not your default terminal. Do you wish to CONTINUE OR LOGOUT ??", '', function (r) {
                        if (r != true) {
                            window.location = "./Account/Login.cshtml";
                        }
                    });
                });

                </script>
                HttpContext.Current.Session["MsgKey"] = null;
                ((CargoFlash.Cargo.Model.UserLogin)(System.Web.HttpContext.Current.Session["UserDetail"])).IsLogin = true;
            }*@

    }

    if (Session["UserDetail"] == null)
    {
        CargoFlash.Cargo.DataService.Common.CommonService CS = new CargoFlash.Cargo.DataService.Common.CommonService();
        string loginPage = CS.GetSystemSetting("LoginPage");
        System.Web.HttpContext.Current.Response.Redirect("~/Account/" + loginPage);
        return;
    }
    Page.MenuItem = "";
    Layout = "~/_MenuLayout.cshtml";
    var pageContent = "";
    System.Text.StringBuilder myCurrentFrom = new System.Text.StringBuilder();
    HtmlFormAdapter htmlForm = new HtmlFormAdapter();
    htmlForm.PagePostPack = IsPost;
    var showMessage = "";



    if (Request.QueryString["Module"] != null)
    {
        if (Request.QueryString["Apps"] != null)
        {
            string module = Request.QueryString["Module"].ToUpper().ToString();
            try
            {
                CargoFlash.Cargo.DataService.LoginService ls = new CargoFlash.Cargo.DataService.LoginService();

                CargoFlash.Cargo.Model.PageAccessLogModel p = new CargoFlash.Cargo.Model.PageAccessLogModel();
                p.UserSNo = ((CargoFlash.Cargo.Model.UserLogin)(System.Web.HttpContext.Current.Session["UserDetail"])).UserSNo;
                p.UserID = ((CargoFlash.Cargo.Model.UserLogin)(System.Web.HttpContext.Current.Session["UserDetail"])).UserName;
                p.CityCode = ((CargoFlash.Cargo.Model.UserLogin)(System.Web.HttpContext.Current.Session["UserDetail"])).CityCode;
                p.Module = Request.QueryString["Module"].ToUpper().ToString();
                p.AppName = Request.QueryString["Apps"].ToUpper().ToString();
                p.FormAction = Request.QueryString["FormAction"].ToUpper().ToString();
                //string ipAddress = System.Web.HttpContext.Current.Request.ServerVariables["HTTP_FORWARDED_FOR"];
                string ipAddress = System.Web.HttpContext.Current.Request.UserHostAddress;
                if (!string.IsNullOrEmpty(ipAddress))
                {
                    string[] forwardedIps = ipAddress.Split(new char[] { ',' }, StringSplitOptions.RemoveEmptyEntries);
                    ipAddress = forwardedIps[forwardedIps.Length - 1];
                }
                else
                {
                    ipAddress = System.Web.HttpContext.Current.Request.ServerVariables["REMOTE_ADDR"];
                }
                p.IPAddress = ipAddress;
                p.HostName = Dns.GetHostName();
                p.Browser = HttpContext.Current.Request.Browser.Type;
                p.URL = Request.Url.OriginalString;

                ls.SetPageAccessLog(p);
            }
            catch (Exception ex)
            {
                showMessage = ex.Message;
                module = "";

            }

            switch (module)
            {
                case "MASTER"://MANAGE as since all are in the manage list
                              /*as it will also reflect in  the admin xml*/
                    switch (Request.QueryString["Apps"].ToUpper().ToString())
                    {
                        case "LOGINCOLORCODE":

                            LoginColorCodeManagementWebUI LoginColorCodeManagementWebUI = new LoginColorCodeManagementWebUI();
                            LoginColorCodeManagementWebUI.MyPageName = "Default.cshtml";
                            LoginColorCodeManagementWebUI.FormAction = Request.QueryString["FormAction"];
                            pageContent = LoginColorCodeManagementWebUI.CreateWebForm(myCurrentFrom).ToString();

                            if (IsPost)
                            {
                                LoginColorCodeManagementWebUI.FormAction = Request.Form["Operation"].ToString().ToUpper().Trim();
                                LoginColorCodeManagementWebUI.DoPostBack();
                                showMessage = LoginColorCodeManagementWebUI.ErrorMessage;
                            }

                            break;
                        case "EXCHANGERATECONFIGURATION":

                            ExchangeRateConfigurationManagementWebUI ExchangeRateConfigurationManagementWebUI = new ExchangeRateConfigurationManagementWebUI();
                            ExchangeRateConfigurationManagementWebUI.MyPageName = "Default.cshtml";
                            ExchangeRateConfigurationManagementWebUI.FormAction = Request.QueryString["FormAction"];
                            pageContent = ExchangeRateConfigurationManagementWebUI.CreateWebForm(myCurrentFrom).ToString();

                            if (IsPost)
                            {
                                ExchangeRateConfigurationManagementWebUI.FormAction = Request.Form["Operation"].ToString().ToUpper().Trim();
                                ExchangeRateConfigurationManagementWebUI.DoPostBack();
                                showMessage = ExchangeRateConfigurationManagementWebUI.ErrorMessage;
                            }

                            break;
                        case "BTL":

                            BTLManagementWebUI BTLManagementWebUI = new BTLManagementWebUI();
                            BTLManagementWebUI.MyPageName = "Default.cshtml";
                            BTLManagementWebUI.FormAction = Request.QueryString["FormAction"];
                            pageContent = BTLManagementWebUI.CreateWebForm(myCurrentFrom).ToString();

                            if (IsPost)
                            {
                                BTLManagementWebUI.FormAction = Request.Form["Operation"].ToString().ToUpper().Trim();
                                BTLManagementWebUI.DoPostBack();
                                showMessage = BTLManagementWebUI.ErrorMessage;
                            }

                            break;

                        case "AIRLINEHUB":

                            AirlineHubManagementWebUI AirlineHubManagementWebUI = new AirlineHubManagementWebUI();
                            AirlineHubManagementWebUI.MyPageName = "Default.cshtml";
                            AirlineHubManagementWebUI.FormAction = Request.QueryString["FormAction"];
                            pageContent = AirlineHubManagementWebUI.CreateWebForm(myCurrentFrom).ToString();

                            if (IsPost)
                            {
                                AirlineHubManagementWebUI.FormAction = Request.Form["Operation"].ToString().ToUpper().Trim();
                                AirlineHubManagementWebUI.DoPostBack();
                                showMessage = AirlineHubManagementWebUI.ErrorMessage;
                            }

                            break;
                        case "AIRLINE":

                            AirlineManagementWebUI airlineManagementWebUI = new AirlineManagementWebUI();
                            airlineManagementWebUI.MyPageName = "Default.cshtml";
                            airlineManagementWebUI.FormAction = Request.QueryString["FormAction"];
                            pageContent = airlineManagementWebUI.CreateWebForm(myCurrentFrom).ToString();

                            if (IsPost)
                            {
                                airlineManagementWebUI.FormAction = Request.Form["Operation"].ToString().ToUpper().Trim();
                                airlineManagementWebUI.DoPostBack();
                                showMessage = airlineManagementWebUI.ErrorMessage;
                            }

                            break;

                        case "CHECKLISTTYPE":

                            CheckListTypeManagementWebUI checkListTypeManagementWebUI = new CheckListTypeManagementWebUI();
                            checkListTypeManagementWebUI.MyPageName = "Default.cshtml";
                            checkListTypeManagementWebUI.FormAction = Request.QueryString["FormAction"];
                            pageContent = checkListTypeManagementWebUI.CreateWebForm(myCurrentFrom).ToString();

                            if (IsPost)
                            {
                                checkListTypeManagementWebUI.FormAction = Request.Form["Operation"].ToString().ToUpper().Trim();
                                checkListTypeManagementWebUI.DoPostBack();
                                showMessage = checkListTypeManagementWebUI.ErrorMessage;
                            }

                            break;


                        case "AIRLINECHECKLIST":

                            AirlineCheckListManagementWebUI airlinechecklistManagementWebUI = new AirlineCheckListManagementWebUI();
                            airlinechecklistManagementWebUI.MyPageName = "Default.cshtml";
                            airlinechecklistManagementWebUI.FormAction = Request.QueryString["FormAction"];
                            pageContent = airlinechecklistManagementWebUI.CreateWebForm(myCurrentFrom).ToString();

                            if (IsPost)
                            {
                                airlinechecklistManagementWebUI.FormAction = Request.Form["Operation"].ToString().ToUpper().Trim();
                                airlinechecklistManagementWebUI.DoPostBack();
                                showMessage = airlinechecklistManagementWebUI.ErrorMessage;
                            }

                            break;
                        case "TERMINAL":
                            TerminalManagementWebUI terminalManagementWebUI = new TerminalManagementWebUI();
                            terminalManagementWebUI.MyPageName = "Default.cshtml";
                            terminalManagementWebUI.FormAction = Request.QueryString["FormAction"];
                            pageContent = terminalManagementWebUI.CreateWebForm(myCurrentFrom).ToString();

                            if (IsPost)
                            {
                                terminalManagementWebUI.FormAction = Request.Form["Operation"].ToString().ToUpper().Trim();
                                terminalManagementWebUI.DoPostBack();
                                showMessage = terminalManagementWebUI.ErrorMessage;
                            }

                            break;

                        case "WEIGHINGSCALE":
                            WeighingScaleWebUI WeighingScaleWebUI = new WeighingScaleWebUI();
                            WeighingScaleWebUI.MyPageName = "Default.cshtml";
                            WeighingScaleWebUI.FormAction = Request.QueryString["FormAction"];
                            pageContent = WeighingScaleWebUI.CreateWebForm(myCurrentFrom).ToString();

                            if (IsPost)
                            {
                                WeighingScaleWebUI.FormAction = Request.Form["Operation"].ToString().ToUpper().Trim();
                                WeighingScaleWebUI.DoPostBack();
                                showMessage = WeighingScaleWebUI.ErrorMessage;
                            }

                            break;





                        case "REGISTRYCONTROL":
                            RegistryControlManagementWebUI registrycontrolManagementWebUI = new RegistryControlManagementWebUI();
                            registrycontrolManagementWebUI.MyPageName = "Default.cshtml";
                            registrycontrolManagementWebUI.FormAction = Request.QueryString["FormAction"];
                            pageContent = registrycontrolManagementWebUI.CreateWebForm(myCurrentFrom).ToString();

                            if (IsPost)
                            {
                                registrycontrolManagementWebUI.FormAction = Request.Form["Operation"].ToString().ToUpper().Trim();
                                registrycontrolManagementWebUI.DoPostBack();
                                showMessage = registrycontrolManagementWebUI.ErrorMessage;
                            }

                            break;
                        case "TASKAREA":
                            TaskAreaManagementWebUI taskareaManagementWebUI = new TaskAreaManagementWebUI();
                            taskareaManagementWebUI.MyPageName = "Default.cshtml";
                            taskareaManagementWebUI.FormAction = Request.QueryString["FormAction"];
                            pageContent = taskareaManagementWebUI.CreateWebForm(myCurrentFrom).ToString();

                            if (IsPost)
                            {
                                taskareaManagementWebUI.FormAction = Request.Form["Operation"].ToString().ToUpper().Trim();
                                taskareaManagementWebUI.DoPostBack();
                                showMessage = taskareaManagementWebUI.ErrorMessage;
                            }

                            break;
                        case "COUNTRY":
                            CountryManagementWebUI countryManagementWebUI = new CountryManagementWebUI();
                            countryManagementWebUI.MyPageName = "Default.cshtml";
                            countryManagementWebUI.FormAction = Request.QueryString["FormAction"];
                            pageContent = countryManagementWebUI.CreateWebForm(myCurrentFrom).ToString();
                            if (IsPost)
                            {
                                countryManagementWebUI.FormAction = Request.Form["Operation"].ToString().ToUpper().Trim();
                                countryManagementWebUI.DoPostBack();
                                showMessage = countryManagementWebUI.ErrorMessage;
                            }

                            break;
                        case "UNLOCKEDPAGE":
                            UnLockedPageManagementWebUI unLockedPageManagementWebUI = new UnLockedPageManagementWebUI();
                            unLockedPageManagementWebUI.MyPageName = "Default.cshtml";
                            unLockedPageManagementWebUI.FormAction = Request.QueryString["FormAction"];
                            pageContent = unLockedPageManagementWebUI.CreateWebForm(myCurrentFrom).ToString();
                            if (IsPost)
                            {
                                unLockedPageManagementWebUI.FormAction = Request.Form["Operation"].ToString().ToUpper().Trim();
                                unLockedPageManagementWebUI.DoPostBack();
                                showMessage = unLockedPageManagementWebUI.ErrorMessage;
                            }

                            break;
                        case "SLA":
                            SLAManagementWebUI slaManagementWebUI = new SLAManagementWebUI();
                            slaManagementWebUI.MyPageName = "Default.cshtml";
                            slaManagementWebUI.FormAction = Request.QueryString["FormAction"];
                            pageContent = slaManagementWebUI.CreateWebForm(myCurrentFrom).ToString();
                            if (IsPost)
                            {
                                slaManagementWebUI.FormAction = Request.Form["Operation"].ToString().ToUpper().Trim();
                                slaManagementWebUI.DoPostBack();
                                showMessage = slaManagementWebUI.ErrorMessage;
                            }

                            break;
                        case "PAGECREATION":
                            PageCreationManagementWebUI pageCreationManagementWebUI = new PageCreationManagementWebUI();
                            pageCreationManagementWebUI.MyPageName = "Default.cshtml";
                            pageCreationManagementWebUI.FormAction = Request.QueryString["FormAction"];
                            pageContent = pageCreationManagementWebUI.CreateWebForm(myCurrentFrom).ToString();

                            if (IsPost)
                            {
                                pageCreationManagementWebUI.FormAction = Request.Form["Operation"].ToString().ToUpper().Trim();
                                pageCreationManagementWebUI.DoPostBack();
                                showMessage = pageCreationManagementWebUI.ErrorMessage;
                            }
                            break;
                        //case "EMPLOYEE":
                        //    EmployeeManagementWebUI employeeManagementWebUI = new EmployeeManagementWebUI();
                        //    employeeManagementWebUI.MyPageName = "Default.cshtml";
                        //    if (!IsPost)
                        //    {
                        //        employeeManagementWebUI.FormAction = Request.QueryString["FormAction"];
                        //        pageContent = employeeManagementWebUI.CreateWebForm(myCurrentFrom).ToString();
                        //    }
                        //    else
                        //    {
                        //        employeeManagementWebUI.FormAction = Request.Form["Operation"].ToString().ToUpper().Trim();
                        //        employeeManagementWebUI.DoPostBack();
                        //        showMessage = employeeManagementWebUI.ErrorMessage;
                        //    }


                        //    break;


                        case "COMMODITY":
                            CommodityManagementWebUI commodityManagementWebUI = new CommodityManagementWebUI();
                            commodityManagementWebUI.MyPageName = "Default.cshtml";
                            commodityManagementWebUI.FormAction = Request.QueryString["FormAction"];
                            pageContent = commodityManagementWebUI.CreateWebForm(myCurrentFrom).ToString();

                            if (IsPost)
                            {
                                commodityManagementWebUI.FormAction = Request.Form["Operation"].ToString().ToUpper().Trim();
                                commodityManagementWebUI.DoPostBack();
                                showMessage = commodityManagementWebUI.ErrorMessage;
                            }
                            break;
                        case "COMMODITYGROUP":
                            CommodityGroupManagementWebUI commodityGroupManagementWebUI = new CommodityGroupManagementWebUI();
                            commodityGroupManagementWebUI.MyPageName = "Default.cshtml";
                            commodityGroupManagementWebUI.FormAction = Request.QueryString["FormAction"];
                            pageContent = commodityGroupManagementWebUI.CreateWebForm(myCurrentFrom).ToString();

                            if (IsPost)
                            {
                                commodityGroupManagementWebUI.FormAction = Request.Form["Operation"].ToString().ToUpper().Trim();
                                commodityGroupManagementWebUI.DoPostBack();
                                showMessage = commodityGroupManagementWebUI.ErrorMessage;
                            }

                            break;
                        case "CHARGES":
                            ChargesManagementWebUI chargesManagementWebUI = new ChargesManagementWebUI();
                            chargesManagementWebUI.MyPageName = "Default.cshtml";
                            chargesManagementWebUI.FormAction = Request.QueryString["FormAction"];
                            pageContent = chargesManagementWebUI.CreateWebForm(myCurrentFrom).ToString();
                            if (IsPost)
                            {
                                chargesManagementWebUI.FormAction = Request.Form["Operation"].ToString().ToUpper().Trim();
                                chargesManagementWebUI.DoPostBack();
                                showMessage = chargesManagementWebUI.ErrorMessage;
                            }

                            break;

                        case "CONNECTIONTYPE":
                            ConnectionTypeManagementWebUI connectionTypeManagementWebUI = new ConnectionTypeManagementWebUI();
                            connectionTypeManagementWebUI.MyPageName = "Default.cshtml";
                            connectionTypeManagementWebUI.FormAction = Request.QueryString["FormAction"];
                            pageContent = connectionTypeManagementWebUI.CreateWebForm(myCurrentFrom).ToString();

                            if (IsPost)
                            {

                                connectionTypeManagementWebUI.FormAction = Request.Form["Operation"].ToString().ToUpper().Trim();
                                connectionTypeManagementWebUI.DoPostBack();
                                showMessage = connectionTypeManagementWebUI.ErrorMessage;
                            }
                            break;

                        case "ACCOUNTTYPE":
                            AccountTypeManagementWebUI AccountTypeManagementWebUI = new AccountTypeManagementWebUI();
                            AccountTypeManagementWebUI.MyPageName = "Default.cshtml";
                            AccountTypeManagementWebUI.FormAction = Request.QueryString["FormAction"];
                            pageContent = AccountTypeManagementWebUI.CreateWebForm(myCurrentFrom).ToString();
                            if (IsPost)
                            {

                                AccountTypeManagementWebUI.FormAction = Request.Form["Operation"].ToString().ToUpper().Trim();
                                AccountTypeManagementWebUI.DoPostBack();
                                showMessage = AccountTypeManagementWebUI.ErrorMessage;
                            }
                            break;

                        case "CITYCONNECTIONTIME":
                            CityConnectionTimeManagementWebUI CityConnectionTimeManagementWebUI = new CityConnectionTimeManagementWebUI();
                            CityConnectionTimeManagementWebUI.MyPageName = "Default.cshtml";
                            CityConnectionTimeManagementWebUI.FormAction = Request.QueryString["FormAction"];
                            pageContent = CityConnectionTimeManagementWebUI.CreateWebForm(myCurrentFrom).ToString();

                            if (IsPost)
                            {
                                CityConnectionTimeManagementWebUI.FormAction = Request.Form["Operation"].ToString().ToUpper().Trim();
                                CityConnectionTimeManagementWebUI.DoPostBack();
                                showMessage = CityConnectionTimeManagementWebUI.ErrorMessage;
                            }
                            break;

                        case "CITYCONNECTIONTIMEPRIORITY":
                            CityConnectionTimePriorityManagementWebUI CityConnectionTimePriorityManagementWebUI = new CityConnectionTimePriorityManagementWebUI();
                            CityConnectionTimePriorityManagementWebUI.MyPageName = "Default.cshtml";
                            CityConnectionTimePriorityManagementWebUI.FormAction = Request.QueryString["FormAction"];
                            pageContent = CityConnectionTimePriorityManagementWebUI.CreateDragDropList(myCurrentFrom).ToString();

                            if (IsPost)
                            {
                                CityConnectionTimePriorityManagementWebUI.FormAction = Request.Form["Operation"].ToString().ToUpper().Trim();
                                CityConnectionTimePriorityManagementWebUI.DoPostBack();
                                showMessage = CityConnectionTimePriorityManagementWebUI.ErrorMessage;
                            }
                            break;
                        case "RATEPRIORITYMASTER":
                            RatePriorityMasterManagementWebUI RatePriorityMasterManagementWebUI = new RatePriorityMasterManagementWebUI();
                            RatePriorityMasterManagementWebUI.MyPageName = "Default.cshtml";
                            RatePriorityMasterManagementWebUI.FormAction = Request.QueryString["FormAction"];
                            pageContent = RatePriorityMasterManagementWebUI.CreateDragDropList(myCurrentFrom).ToString();

                            if (IsPost)
                            {
                                RatePriorityMasterManagementWebUI.FormAction = Request.Form["Operation"].ToString().ToUpper().Trim();
                                RatePriorityMasterManagementWebUI.DoPostBack();
                                showMessage = RatePriorityMasterManagementWebUI.ErrorMessage;
                            }
                            break;

                        case "ZONE":
                            ZoneManagementWebUI ZoneManagementWebUI = new ZoneManagementWebUI();
                            ZoneManagementWebUI.MyPageName = "Default.cshtml";
                            ZoneManagementWebUI.FormAction = Request.QueryString["FormAction"];
                            pageContent = ZoneManagementWebUI.CreateWebForm(myCurrentFrom).ToString();
                            if (IsPost)
                            {
                                ZoneManagementWebUI.FormAction = Request.Form["Operation"].ToString().ToUpper().Trim();
                                ZoneManagementWebUI.DoPostBack();
                                showMessage = ZoneManagementWebUI.ErrorMessage;
                            }
                            break;

                        case "AIRLINETIMEZONE":
                            AirlineTimeZoneManagementWebUI AirlinetimezoneManagementWebUI = new AirlineTimeZoneManagementWebUI();
                            AirlinetimezoneManagementWebUI.MyPageName = "Default.cshtml";
                            AirlinetimezoneManagementWebUI.FormAction = Request.QueryString["FormAction"];
                            pageContent = AirlinetimezoneManagementWebUI.CreateWebForm(myCurrentFrom).ToString();
                            if (IsPost)
                            {
                                AirlinetimezoneManagementWebUI.FormAction = Request.Form["Operation"].ToString().ToUpper().Trim();
                                AirlinetimezoneManagementWebUI.DoPostBack();
                                showMessage = AirlinetimezoneManagementWebUI.ErrorMessage;
                            }
                            break;

                        case "TIMEZONE":
                            TimeZoneManagementWebUI timezoneManagementWebUI = new TimeZoneManagementWebUI();
                            timezoneManagementWebUI.MyPageName = "Default.cshtml";
                            timezoneManagementWebUI.FormAction = Request.QueryString["FormAction"];
                            pageContent = timezoneManagementWebUI.CreateWebForm(myCurrentFrom).ToString();
                            if (IsPost)
                            {
                                timezoneManagementWebUI.FormAction = Request.Form["Operation"].ToString().ToUpper().Trim();
                                timezoneManagementWebUI.DoPostBack();
                                showMessage = timezoneManagementWebUI.ErrorMessage;
                            }
                            break;

                        case "CITY":
                            CityManagementWebUI CityManagementWebUI = new CityManagementWebUI();
                            CityManagementWebUI.MyPageName = "Default.cshtml";
                            CityManagementWebUI.FormAction = Request.QueryString["FormAction"];
                            pageContent = CityManagementWebUI.CreateWebForm(myCurrentFrom).ToString();
                            if (IsPost)
                            {
                                CityManagementWebUI.FormAction = Request.Form["Operation"].ToString().ToUpper().Trim();
                                CityManagementWebUI.DoPostBack();
                                showMessage = CityManagementWebUI.ErrorMessage;
                            }
                            break;

                        case "EDOX":
                            EDoxManagementWebUI EDoxManagementWebUI = new EDoxManagementWebUI();
                            EDoxManagementWebUI.MyPageName = "Default.cshtml";
                            EDoxManagementWebUI.FormAction = Request.QueryString["FormAction"];
                            pageContent = EDoxManagementWebUI.CreateWebForm(myCurrentFrom).ToString();
                            if (IsPost)
                            {
                                EDoxManagementWebUI.FormAction = Request.Form["Operation"].ToString().ToUpper().Trim();
                                EDoxManagementWebUI.DoPostBack();
                                showMessage = EDoxManagementWebUI.ErrorMessage;
                            }
                            break;

                        case "HOLDTYPE":
                            HoldTypeManagementWebUI HTypeManagementWebUI = new HoldTypeManagementWebUI();
                            HTypeManagementWebUI.MyPageName = "Default.cshtml";
                            HTypeManagementWebUI.FormAction = Request.QueryString["FormAction"];
                            pageContent = HTypeManagementWebUI.CreateWebForm(myCurrentFrom).ToString();
                            if (IsPost)
                            {
                                HTypeManagementWebUI.FormAction = Request.Form["Operation"].ToString().ToUpper().Trim();
                                HTypeManagementWebUI.DoPostBack();
                                showMessage = HTypeManagementWebUI.ErrorMessage;
                            }
                            break;

                        case "FOCTYPE":
                            FocTypeManagementWebUI FTypeManagementWebUI = new FocTypeManagementWebUI();
                            FTypeManagementWebUI.MyPageName = "Default.cshtml";
                            FTypeManagementWebUI.FormAction = Request.QueryString["FormAction"];
                            pageContent = FTypeManagementWebUI.CreateWebForm(myCurrentFrom).ToString();
                            if (IsPost)
                            {
                                FTypeManagementWebUI.FormAction = Request.Form["Operation"].ToString().ToUpper().Trim();
                                FTypeManagementWebUI.DoPostBack();
                                showMessage = FTypeManagementWebUI.ErrorMessage;
                            }
                            break;

                        case "XRAYMACHINE":
                            XRayMachineManagementWebUI XRMachineManagementWebUI = new XRayMachineManagementWebUI();
                            XRMachineManagementWebUI.MyPageName = "Default.cshtml";
                            XRMachineManagementWebUI.FormAction = Request.QueryString["FormAction"];
                            pageContent = XRMachineManagementWebUI.CreateWebForm(myCurrentFrom).ToString();
                            if (IsPost)
                            {
                                XRMachineManagementWebUI.FormAction = Request.Form["Operation"].ToString().ToUpper().Trim();
                                XRMachineManagementWebUI.DoPostBack();
                                showMessage = XRMachineManagementWebUI.ErrorMessage;
                            }
                            break;
                        case "TRUCKTYPE":
                            TruckTypeManagementWebUI TruckTypeManagementWebUI = new TruckTypeManagementWebUI();
                            TruckTypeManagementWebUI.MyPageName = "Default.cshtml";
                            TruckTypeManagementWebUI.FormAction = Request.QueryString["FormAction"];
                            pageContent = TruckTypeManagementWebUI.CreateWebForm(myCurrentFrom).ToString();
                            if (IsPost)
                            {
                                TruckTypeManagementWebUI.FormAction = Request.Form["Operation"].ToString().ToUpper().Trim();
                                TruckTypeManagementWebUI.DoPostBack();
                                showMessage = TruckTypeManagementWebUI.ErrorMessage;
                            }
                            break;


                        case "DOCUMENTMASTER":
                            DocumentMasterManagementWebUI DocumentMasterManagementWebUI = new DocumentMasterManagementWebUI();
                            DocumentMasterManagementWebUI.MyPageName = "Default.cshtml";
                            DocumentMasterManagementWebUI.FormAction = Request.QueryString["FormAction"];
                            pageContent = DocumentMasterManagementWebUI.CreateWebForm(myCurrentFrom).ToString();
                            if (IsPost)
                            {
                                DocumentMasterManagementWebUI.FormAction = Request.Form["Operation"].ToString().ToUpper().Trim();
                                DocumentMasterManagementWebUI.DoPostBack();
                                showMessage = DocumentMasterManagementWebUI.ErrorMessage;
                            }
                            break;


                        case "SPHCDOCUMENT":
                            SPHCDocumentManagementWebUI SPHCDocumentManagementWebUI = new SPHCDocumentManagementWebUI();
                            SPHCDocumentManagementWebUI.MyPageName = "Default.cshtml";
                            SPHCDocumentManagementWebUI.FormAction = Request.QueryString["FormAction"];
                            pageContent = SPHCDocumentManagementWebUI.CreateWebForm(myCurrentFrom).ToString();
                            if (IsPost)
                            {
                                SPHCDocumentManagementWebUI.FormAction = Request.Form["Operation"].ToString().ToUpper().Trim();
                                SPHCDocumentManagementWebUI.DoPostBack();
                                showMessage = SPHCDocumentManagementWebUI.ErrorMessage;
                            }
                            break;

                        case "EDIMASTER":
                            EDIMasterWebUI EDIMasterWebUI = new EDIMasterWebUI();
                            EDIMasterWebUI.MyPageName = "Default.cshtml";
                            EDIMasterWebUI.FormAction = Request.QueryString["FormAction"];
                            pageContent = EDIMasterWebUI.CreateWebForm(myCurrentFrom).ToString();
                            if (IsPost)
                            {
                                EDIMasterWebUI.FormAction = Request.Form["Operation"].ToString().ToUpper().Trim();
                                EDIMasterWebUI.DoPostBack();
                                showMessage = EDIMasterWebUI.ErrorMessage;
                            }
                            break;

                        case "AIRCRAFT":
                            AirCraftManagementWebUI AirCraftManagementWebUI = new AirCraftManagementWebUI();
                            AirCraftManagementWebUI.MyPageName = "Default.cshtml";
                            AirCraftManagementWebUI.FormAction = Request.QueryString["FormAction"];
                            pageContent = AirCraftManagementWebUI.CreateWebForm(myCurrentFrom).ToString();
                            if (IsPost)
                            {
                                AirCraftManagementWebUI.FormAction = Request.Form["Operation"].ToString().ToUpper().Trim();
                                AirCraftManagementWebUI.DoPostBack();
                                showMessage = AirCraftManagementWebUI.ErrorMessage;
                            }
                            break;

                        case "AIRCRAFTDIMENSIONMATRIX":
                            AircraftDimensionMatrixManagementWebUI AircraftDimensionMatrixManagementWebUI = new AircraftDimensionMatrixManagementWebUI();
                            AircraftDimensionMatrixManagementWebUI.MyPageName = "Default.cshtml";
                            AircraftDimensionMatrixManagementWebUI.FormAction = Request.QueryString["FormAction"];
                            pageContent = AircraftDimensionMatrixManagementWebUI.CreateWebForm(myCurrentFrom).ToString();
                            if (IsPost)
                            {
                                AircraftDimensionMatrixManagementWebUI.FormAction = Request.Form["Operation"].ToString().ToUpper().Trim();
                                AircraftDimensionMatrixManagementWebUI.DoPostBack();
                                showMessage = AircraftDimensionMatrixManagementWebUI.ErrorMessage;
                            }
                            break;

                        case "AIRCRAFTCAPACITY":
                            AirCraftCapacityManagementWebUI AirCraftCapacityManagementWebUI = new AirCraftCapacityManagementWebUI();
                            AirCraftCapacityManagementWebUI.MyPageName = "Default.cshtml";
                            AirCraftCapacityManagementWebUI.FormAction = Request.QueryString["FormAction"];
                            pageContent = AirCraftCapacityManagementWebUI.CreateWebForm(myCurrentFrom).ToString();
                            if (IsPost)
                            {
                                AirCraftCapacityManagementWebUI.FormAction = Request.Form["Operation"].ToString().ToUpper().Trim();
                                AirCraftCapacityManagementWebUI.DoPostBack();
                                showMessage = AirCraftCapacityManagementWebUI.ErrorMessage;
                            }
                            break;
                        case "AIRPORT":
                            AirportManagementWebUI airportManagementWebUI = new AirportManagementWebUI();
                            airportManagementWebUI.MyPageName = "Default.cshtml";
                            airportManagementWebUI.FormAction = Request.QueryString["FormAction"];
                            pageContent = airportManagementWebUI.CreateWebForm(myCurrentFrom).ToString();
                            if (IsPost)
                            {
                                airportManagementWebUI.FormAction = Request.Form["Operation"].ToString().ToUpper().Trim();
                                airportManagementWebUI.DoPostBack();
                                showMessage = airportManagementWebUI.ErrorMessage;
                            }
                            break;
                        case "CUSTOMERTYPE":
                            CustomerTypeManagementWebUI CustomerTypeManagementWebUI = new CustomerTypeManagementWebUI();
                            CustomerTypeManagementWebUI.MyPageName = "Default.cshtml";
                            CustomerTypeManagementWebUI.FormAction = Request.QueryString["FormAction"];
                            pageContent = CustomerTypeManagementWebUI.CreateWebForm(myCurrentFrom).ToString();
                            if (IsPost)
                            {
                                CustomerTypeManagementWebUI.FormAction = Request.Form["Operation"].ToString().ToUpper().Trim();
                                CustomerTypeManagementWebUI.DoPostBack();
                                showMessage = CustomerTypeManagementWebUI.ErrorMessage;
                            }

                            break;
                        case "CUSTOMER":
                            CustomerManagementWebUI CustomerManagementWebUI = new CustomerManagementWebUI();
                            CustomerManagementWebUI.MyPageName = "Default.cshtml";
                            CustomerManagementWebUI.FormAction = Request.QueryString["FormAction"];
                            pageContent = CustomerManagementWebUI.CreateWebForm(myCurrentFrom).ToString();
                            if (IsPost)
                            {
                                CustomerManagementWebUI.FormAction = Request.Form["Operation"].ToString().ToUpper().Trim();
                                CustomerManagementWebUI.DoPostBack();
                                showMessage = CustomerManagementWebUI.ErrorMessage;
                            }

                            break;
                        case "ACCOUNT":
                            AccountManagementWebUI AccountManagementWebUI = new AccountManagementWebUI();
                            AccountManagementWebUI.MyPageName = "Default.cshtml";
                            AccountManagementWebUI.FormAction = Request.QueryString["FormAction"];
                            pageContent = AccountManagementWebUI.CreateWebForm(myCurrentFrom).ToString();
                            if (IsPost)
                            {
                                AccountManagementWebUI.FormAction = Request.Form["Operation"].ToString().ToUpper().Trim();
                                AccountManagementWebUI.DoPostBack();
                                showMessage = AccountManagementWebUI.ErrorMessage;
                            }

                            break;

                        case "OFFICE":
                            OfficeManagementWebUI officeManagementWebUI = new OfficeManagementWebUI();
                            officeManagementWebUI.MyPageName = "Default.cshtml";
                            officeManagementWebUI.FormAction = Request.QueryString["FormAction"];
                            pageContent = officeManagementWebUI.CreateWebForm(myCurrentFrom).ToString();
                            if (IsPost)
                            {
                                officeManagementWebUI.FormAction = Request.Form["Operation"].ToString().ToUpper().Trim();
                                officeManagementWebUI.DoPostBack();
                                showMessage = officeManagementWebUI.ErrorMessage;
                            }
                            break;
                        case "OFFICETARGET":
                            OfficeTargetManagementWebUI officeTargetrManagementWebUI = new OfficeTargetManagementWebUI();
                            officeTargetrManagementWebUI.MyPageName = "Default.cshtml";
                            officeTargetrManagementWebUI.FormAction = Request.QueryString["FormAction"];
                            pageContent = officeTargetrManagementWebUI.CreateWebForm(myCurrentFrom).ToString();
                            if (IsPost)
                            {

                                officeTargetrManagementWebUI.FormAction = Request.Form["Operation"].ToString().ToUpper().Trim();
                                officeTargetrManagementWebUI.DoPostBack();
                                showMessage = officeTargetrManagementWebUI.ErrorMessage;
                            }
                            break;
                        case "PRODUCT":

                            ProductManagementWebUI ProductManagementWebUI = new ProductManagementWebUI();
                            ProductManagementWebUI.MyPageName = "Default.cshtml";
                            ProductManagementWebUI.FormAction = Request.QueryString["FormAction"];
                            pageContent = ProductManagementWebUI.CreateWebForm(myCurrentFrom).ToString();
                            if (IsPost)
                            {

                                ProductManagementWebUI.FormAction = Request.Form["Operation"].ToString().ToUpper().Trim();
                                ProductManagementWebUI.DoPostBack();
                                showMessage = ProductManagementWebUI.ErrorMessage;
                            }

                            break;

                        case "PRIORITY":
                            PriorityManagementWebUI PriorityManagementWebUI = new PriorityManagementWebUI();
                            PriorityManagementWebUI.MyPageName = "Default.cshtml";
                            PriorityManagementWebUI.FormAction = Request.QueryString["FormAction"];
                            pageContent = PriorityManagementWebUI.CreateWebForm(myCurrentFrom).ToString();
                            if (IsPost)
                            {

                                PriorityManagementWebUI.FormAction = Request.Form["Operation"].ToString().ToUpper().Trim();
                                PriorityManagementWebUI.DoPostBack();
                                showMessage = PriorityManagementWebUI.ErrorMessage;
                            }

                            break;
                        case "SPECIALHANDLINGCODE":
                            SpecialHandlingCodeManagementWebUI SpecialHandlingCodeManagementWebUI = new SpecialHandlingCodeManagementWebUI();
                            SpecialHandlingCodeManagementWebUI.MyPageName = "Default.cshtml";
                            SpecialHandlingCodeManagementWebUI.FormAction = Request.QueryString["FormAction"];
                            pageContent = SpecialHandlingCodeManagementWebUI.CreateWebForm(myCurrentFrom).ToString();
                            if (IsPost)
                            {
                                SpecialHandlingCodeManagementWebUI.FormAction = Request.Form["Operation"].ToString().ToUpper().Trim();
                                SpecialHandlingCodeManagementWebUI.DoPostBack();
                                showMessage = SpecialHandlingCodeManagementWebUI.ErrorMessage;
                            }

                            break;

                        case "FLIGHTTYPE":
                            FlightTypeManagementWebUI FlightTypeManagementWebUI = new FlightTypeManagementWebUI();
                            FlightTypeManagementWebUI.MyPageName = "Default.cshtml";
                            FlightTypeManagementWebUI.FormAction = Request.QueryString["FormAction"];
                            pageContent = FlightTypeManagementWebUI.CreateWebForm(myCurrentFrom).ToString();
                            if (IsPost)
                            {
                                FlightTypeManagementWebUI.FormAction = Request.Form["Operation"].ToString().ToUpper().Trim();
                                FlightTypeManagementWebUI.DoPostBack();
                                showMessage = FlightTypeManagementWebUI.ErrorMessage;
                            }
                            break;


                        case "SPHCCLASS":
                            SPHCClassManagementWebUI SPHCClassManagementWebUI = new SPHCClassManagementWebUI();
                            SPHCClassManagementWebUI.MyPageName = "Default.cshtml";
                            SPHCClassManagementWebUI.FormAction = Request.QueryString["FormAction"];
                            pageContent = SPHCClassManagementWebUI.CreateWebForm(myCurrentFrom).ToString();
                            if (IsPost)
                            {
                                SPHCClassManagementWebUI.FormAction = Request.Form["Operation"].ToString().ToUpper().Trim();
                                SPHCClassManagementWebUI.DoPostBack();
                                showMessage = SPHCClassManagementWebUI.ErrorMessage;
                            }

                            break;

                        case "CONTACTS":
                            ContactsManagementWebUI ContactsManagementWebUI = new ContactsManagementWebUI();
                            ContactsManagementWebUI.MyPageName = "Default.cshtml";
                            ContactsManagementWebUI.FormAction = Request.QueryString["FormAction"];
                            pageContent = ContactsManagementWebUI.CreateWebForm(myCurrentFrom).ToString();
                            if (IsPost)
                            {
                                ContactsManagementWebUI.FormAction = Request.Form["Operation"].ToString().ToUpper().Trim();
                                ContactsManagementWebUI.DoPostBack();
                                showMessage = ContactsManagementWebUI.ErrorMessage;
                            }

                            break;

                        case "CURRENCY":
                            CurrencyManagementWebUI CurrencyManagementWebUI = new CurrencyManagementWebUI();
                            CurrencyManagementWebUI.MyPageName = "Default.cshtml";
                            CurrencyManagementWebUI.FormAction = Request.QueryString["FormAction"];
                            pageContent = CurrencyManagementWebUI.CreateWebForm(myCurrentFrom).ToString();
                            if (IsPost)
                            {

                                CurrencyManagementWebUI.FormAction = Request.Form["Operation"].ToString().ToUpper().Trim();
                                CurrencyManagementWebUI.DoPostBack();
                                showMessage = CurrencyManagementWebUI.ErrorMessage;
                            }

                            break;
                        case "SLABMASTER":
                            SlabMasterManagementWebUI SlabMasterManagementWebUI = new SlabMasterManagementWebUI();
                            SlabMasterManagementWebUI.MyPageName = "Default.cshtml";
                            SlabMasterManagementWebUI.FormAction = Request.QueryString["FormAction"];
                            pageContent = SlabMasterManagementWebUI.CreateWebForm(myCurrentFrom).ToString();
                            if (IsPost)
                            {

                                SlabMasterManagementWebUI.FormAction = Request.Form["Operation"].ToString().ToUpper().Trim();
                                SlabMasterManagementWebUI.DoPostBack();
                                showMessage = SlabMasterManagementWebUI.ErrorMessage;
                            }

                            break;


                        case "ACCOUNTTARGET":
                            AccountTargetManagementWebUI AccountTargetManagementWebUI = new AccountTargetManagementWebUI();
                            AccountTargetManagementWebUI.MyPageName = "Default.cshtml";
                            AccountTargetManagementWebUI.FormAction = Request.QueryString["FormAction"];
                            pageContent = AccountTargetManagementWebUI.CreateWebForm(myCurrentFrom).ToString();
                            if (IsPost)
                            {

                                AccountTargetManagementWebUI.FormAction = Request.Form["Operation"].ToString().ToUpper().Trim();
                                AccountTargetManagementWebUI.DoPostBack();
                                showMessage = AccountTargetManagementWebUI.ErrorMessage;
                            }

                            break;

                        case "DEPARTMENT":
                            DepartmentManagementWebUI DepartmentManagementWebUI = new DepartmentManagementWebUI();
                            DepartmentManagementWebUI.MyPageName = "Default.cshtml";
                            DepartmentManagementWebUI.FormAction = Request.QueryString["FormAction"];
                            pageContent = DepartmentManagementWebUI.CreateWebForm(myCurrentFrom).ToString();
                            if (IsPost)
                            {
                                DepartmentManagementWebUI.FormAction = Request.Form["Operation"].ToString().ToUpper().Trim();
                                DepartmentManagementWebUI.DoPostBack();
                                showMessage = DepartmentManagementWebUI.ErrorMessage;
                            }

                            break;
                        case "COMMODITYDENSITYGROUP":
                            CommodityDensityGroupManagementWebUI CommodityDensityGroupManagementWebUI = new CommodityDensityGroupManagementWebUI();
                            CommodityDensityGroupManagementWebUI.MyPageName = "Default.cshtml";
                            CommodityDensityGroupManagementWebUI.FormAction = Request.QueryString["FormAction"];
                            pageContent = CommodityDensityGroupManagementWebUI.CreateWebForm(myCurrentFrom).ToString();
                            if (IsPost)
                            {
                                CommodityDensityGroupManagementWebUI.FormAction = Request.Form["Operation"].ToString().ToUpper().Trim();
                                CommodityDensityGroupManagementWebUI.DoPostBack();
                                showMessage = CommodityDensityGroupManagementWebUI.ErrorMessage;
                            }

                            break;
                        case "SPHCGROUP":
                            SPHCGroupManagementWebUI SPHCGroupManagementWebUI = new SPHCGroupManagementWebUI();
                            SPHCGroupManagementWebUI.MyPageName = "Default.cshtml";
                            SPHCGroupManagementWebUI.FormAction = Request.QueryString["FormAction"];
                            pageContent = SPHCGroupManagementWebUI.CreateWebForm(myCurrentFrom).ToString();
                            if (IsPost)
                            {
                                SPHCGroupManagementWebUI.FormAction = Request.Form["Operation"].ToString().ToUpper().Trim();
                                SPHCGroupManagementWebUI.DoPostBack();
                                showMessage = SPHCGroupManagementWebUI.ErrorMessage;
                            }

                            break;
                        case "ACCOUNTGROUP":
                            AccountGroupManagementWebUI AccountGroupManagementWebUI = new AccountGroupManagementWebUI();
                            AccountGroupManagementWebUI.MyPageName = "Default.cshtml";
                            AccountGroupManagementWebUI.FormAction = Request.QueryString["FormAction"];
                            pageContent = AccountGroupManagementWebUI.CreateWebForm(myCurrentFrom).ToString();
                            if (IsPost)
                            {
                                AccountGroupManagementWebUI.FormAction = Request.Form["Operation"].ToString().ToUpper().Trim();
                                AccountGroupManagementWebUI.DoPostBack();
                                showMessage = AccountGroupManagementWebUI.ErrorMessage;
                            }

                            break;
                        case "COMMODITYPACKAGE":
                            CommodityPackageManagementWebUI CommodityPackageManagementWebUI = new CommodityPackageManagementWebUI();
                            CommodityPackageManagementWebUI.MyPageName = "Default.cshtml";
                            CommodityPackageManagementWebUI.FormAction = Request.QueryString["FormAction"];
                            pageContent = CommodityPackageManagementWebUI.CreateWebForm(myCurrentFrom).ToString();
                            if (IsPost)
                            {
                                CommodityPackageManagementWebUI.FormAction = Request.Form["Operation"].ToString().ToUpper().Trim();
                                CommodityPackageManagementWebUI.DoPostBack();
                                showMessage = CommodityPackageManagementWebUI.ErrorMessage;
                            }

                            break;
                        case "EMBARGO":
                            EmbargoManagementWebUI EmbargoManagementWebUI = new EmbargoManagementWebUI();
                            EmbargoManagementWebUI.MyPageName = "Default.cshtml";
                            EmbargoManagementWebUI.FormAction = Request.QueryString["FormAction"];
                            pageContent = EmbargoManagementWebUI.CreateWebForm(myCurrentFrom).ToString();
                            if (IsPost)
                            {
                                EmbargoManagementWebUI.FormAction = Request.Form["Operation"].ToString().ToUpper().Trim();
                                EmbargoManagementWebUI.DoPostBack();
                                showMessage = EmbargoManagementWebUI.ErrorMessage;
                            }

                            break;

                        case "EDIINBOUNDANDOUTBOUND":
                            EdiInboundAndOutboundManagementWebUI ediInboundAndOutboundManagementWebUI = new EdiInboundAndOutboundManagementWebUI();
                            ediInboundAndOutboundManagementWebUI.MyPageName = "Default.cshtml";
                            ediInboundAndOutboundManagementWebUI.FormAction = Request.QueryString["FormAction"];
                            pageContent = ediInboundAndOutboundManagementWebUI.CreateWebForm(myCurrentFrom).ToString();
                            if (IsPost)
                            {
                                ediInboundAndOutboundManagementWebUI.FormAction = Request.Form["Operation"].ToString().ToUpper().Trim();
                                ediInboundAndOutboundManagementWebUI.DoPostBack();
                                showMessage = ediInboundAndOutboundManagementWebUI.ErrorMessage;
                            }

                            break;

                        case "TAX":
                            TaxManagementWebUI TaxManagementWebUI = new TaxManagementWebUI();
                            TaxManagementWebUI.MyPageName = "Default.cshtml";
                            TaxManagementWebUI.FormAction = Request.QueryString["FormAction"];
                            pageContent = TaxManagementWebUI.CreateWebForm(myCurrentFrom).ToString();
                            if (IsPost)
                            {
                                TaxManagementWebUI.FormAction = Request.Form["Operation"].ToString().ToUpper().Trim();
                                TaxManagementWebUI.DoPostBack();
                                showMessage = TaxManagementWebUI.ErrorMessage;
                            }

                            break;
                        case "EXCELUPLOAD":
                            ExcelUploadManagementWebUI ExcelUploadManagementWebUI = new ExcelUploadManagementWebUI();
                            ExcelUploadManagementWebUI.MyPageName = "Default.cshtml";
                            ExcelUploadManagementWebUI.FormAction = Request.QueryString["FormAction"];
                            pageContent = ExcelUploadManagementWebUI.CreateWebForm(myCurrentFrom).ToString();
                            if (IsPost)
                            {
                                ExcelUploadManagementWebUI.FormAction = Request.Form["Operation"].ToString().ToUpper().Trim();
                                ExcelUploadManagementWebUI.DoPostBack();
                                showMessage = ExcelUploadManagementWebUI.ErrorMessage;
                            }

                            break;

                        case "TEMPRATURESENSOR":
                            TempratureSensorManagementWebUI TempratureSensorManagementWebUI = new TempratureSensorManagementWebUI();
                            TempratureSensorManagementWebUI.MyPageName = "Default.cshtml";
                            TempratureSensorManagementWebUI.FormAction = Request.QueryString["FormAction"];
                            pageContent = TempratureSensorManagementWebUI.CreateWebForm(myCurrentFrom).ToString();
                            if (IsPost)
                            {
                                TempratureSensorManagementWebUI.FormAction = Request.Form["Operation"].ToString().ToUpper().Trim();
                                TempratureSensorManagementWebUI.DoPostBack();
                                showMessage = TempratureSensorManagementWebUI.ErrorMessage;
                            }

                            break;
                        case "CREDITLIMITUPDATE":

                            CreditLimitUpdateManagementWebUI CreditLimitUpdateManagementWebUI = new CreditLimitUpdateManagementWebUI();
                            CreditLimitUpdateManagementWebUI.MyPageName = "Default.cshtml";
                            CreditLimitUpdateManagementWebUI.FormAction = Request.QueryString["FormAction"];
                            pageContent = CreditLimitUpdateManagementWebUI.CreateWebForm(myCurrentFrom).ToString();
                            if (IsPost)
                            {

                                CreditLimitUpdateManagementWebUI.FormAction = Request.Form["Operation"].ToString().ToUpper().Trim();
                                CreditLimitUpdateManagementWebUI.DoPostBack();
                                showMessage = CreditLimitUpdateManagementWebUI.ErrorMessage;
                            }
                            break;

                        // industrytype by Arman Ali
                        case "INDUSTRYTYPE":

                            IndustryTypeManagementWebUI IndustryTypeManagementWebUI = new IndustryTypeManagementWebUI();
                            IndustryTypeManagementWebUI.MyPageName = "Default.cshtml";
                            IndustryTypeManagementWebUI.FormAction = Request.QueryString["FormAction"];
                            pageContent = IndustryTypeManagementWebUI.CreateWebForm(myCurrentFrom).ToString();

                            if (IsPost)
                            {
                                IndustryTypeManagementWebUI.FormAction = Request.Form["Operation"].ToString().ToUpper().Trim();
                                IndustryTypeManagementWebUI.DoPostBack();
                                showMessage = IndustryTypeManagementWebUI.ErrorMessage;
                            }

                            break;
                        //Route by Arman Ali Date 4-01-2017
                        case "ROUTE":

                            RouteManagementWebUI RouteManagementWebUI = new RouteManagementWebUI();
                            RouteManagementWebUI.MyPageName = "Default.cshtml";
                            RouteManagementWebUI.FormAction = Request.QueryString["FormAction"];
                            pageContent = RouteManagementWebUI.CreateWebForm(myCurrentFrom).ToString();

                            if (IsPost)
                            {
                                RouteManagementWebUI.FormAction = Request.Form["Operation"].ToString().ToUpper().Trim();
                                RouteManagementWebUI.DoPostBack();
                                showMessage = RouteManagementWebUI.ErrorMessage;
                            }

                            break;
                        //Distance by Arman Ali Date 12-01-2017
                        case "DISTANCE":

                            DistanceManagementWebUI DistanceManagementWebUI = new DistanceManagementWebUI();
                            DistanceManagementWebUI.MyPageName = "Default.cshtml";
                            DistanceManagementWebUI.FormAction = Request.QueryString["FormAction"];
                            pageContent = DistanceManagementWebUI.CreateWebForm(myCurrentFrom).ToString();

                            if (IsPost)
                            {
                                DistanceManagementWebUI.FormAction = Request.Form["Operation"].ToString().ToUpper().Trim();
                                DistanceManagementWebUI.DoPostBack();
                                showMessage = DistanceManagementWebUI.ErrorMessage;
                            }
                            break;
                        //RateCard by Arman Ali Date 12-01-2017
                        case "RATECARD":

                            RateCardManagementWebUI RateCardManagementWebUI = new RateCardManagementWebUI();
                            RateCardManagementWebUI.MyPageName = "Default.cshtml";
                            RateCardManagementWebUI.FormAction = Request.QueryString["FormAction"];
                            pageContent = RateCardManagementWebUI.CreateWebForm(myCurrentFrom).ToString();

                            if (IsPost)
                            {
                                RateCardManagementWebUI.FormAction = Request.Form["Operation"].ToString().ToUpper().Trim();
                                RateCardManagementWebUI.DoPostBack();
                                showMessage = RateCardManagementWebUI.ErrorMessage;
                            }

                            break;


                        //RateCard by Arman Ali Date 12-01-2017
                        case "PENALTYPARAMETERS":

                            PenaltyParametersManagementWebUI PenaltyParametersManagementWebUI = new PenaltyParametersManagementWebUI();
                            PenaltyParametersManagementWebUI.MyPageName = "Default.cshtml";
                            PenaltyParametersManagementWebUI.FormAction = Request.QueryString["FormAction"];
                            pageContent = PenaltyParametersManagementWebUI.CreateWebForm(myCurrentFrom).ToString();

                            if (IsPost)
                            {
                                PenaltyParametersManagementWebUI.FormAction = Request.Form["Operation"].ToString().ToUpper().Trim();
                                PenaltyParametersManagementWebUI.DoPostBack();
                                showMessage = PenaltyParametersManagementWebUI.ErrorMessage;
                            }

                            break;


                        //Added By Vkumar on 29 Dec 2016 Task # 17
                        case "COMMISSION":
                            CommissionManagementWebUI CommissionManagementWebUI = new CommissionManagementWebUI();
                            CommissionManagementWebUI.MyPageName = "Default.cshtml";
                            CommissionManagementWebUI.FormAction = Request.QueryString["FormAction"];
                            pageContent = CommissionManagementWebUI.CreateWebForm(myCurrentFrom).ToString();
                            if (IsPost)
                            {
                                CommissionManagementWebUI.FormAction = Request.Form["Operation"].ToString().ToUpper().Trim();
                                CommissionManagementWebUI.DoPostBack();
                                showMessage = CommissionManagementWebUI.ErrorMessage;
                            }
                            break;
                        //Added By Vkumar on 11 Jan 2016 Task # 55
                        case "REGION":
                            RegionManagementWebUI RegionManagementWebUI = new RegionManagementWebUI();
                            RegionManagementWebUI.MyPageName = "Default.cshtml";
                            RegionManagementWebUI.FormAction = Request.QueryString["FormAction"];
                            pageContent = RegionManagementWebUI.CreateWebForm(myCurrentFrom).ToString();
                            if (IsPost)
                            {
                                RegionManagementWebUI.FormAction = Request.Form["Operation"].ToString().ToUpper().Trim();
                                RegionManagementWebUI.DoPostBack();
                                showMessage = RegionManagementWebUI.ErrorMessage;
                            }
                            break;

                        //RateTypePriority By Akash Date 18-01-2017
                        case "RATETYPEPRIORITY":

                            RateTypePriorityManagementWebUI RateTypePriorityManagementWebUI = new RateTypePriorityManagementWebUI();
                            RateTypePriorityManagementWebUI.MyPageName = "Default.cshtml";
                            RateTypePriorityManagementWebUI.FormAction = Request.QueryString["FormAction"];
                            pageContent = RateTypePriorityManagementWebUI.CreateDragDropList(myCurrentFrom).ToString();

                            if (IsPost)
                            {
                                RateTypePriorityManagementWebUI.FormAction = Request.Form["Operation"].ToString().ToUpper().Trim();
                                RateTypePriorityManagementWebUI.DoPostBack();
                                showMessage = RateTypePriorityManagementWebUI.ErrorMessage;
                            }

                            break;
                        //RateTypePriority By Akash Date 18-01-2017
                        case "RATETYPE":

                            RateTypeManagementWebUI RateTypeManagementWebUI = new RateTypeManagementWebUI();
                            RateTypeManagementWebUI.MyPageName = "Default.cshtml";
                            RateTypeManagementWebUI.FormAction = Request.QueryString["FormAction"];
                            pageContent = RateTypeManagementWebUI.CreateWebForm(myCurrentFrom).ToString();

                            if (IsPost)
                            {
                                RateTypeManagementWebUI.FormAction = Request.Form["Operation"].ToString().ToUpper().Trim();
                                RateTypeManagementWebUI.DoPostBack();
                                showMessage = RateTypeManagementWebUI.ErrorMessage;
                            }

                            break;
                        //Message Test by Shahbaz Date 27-02-2017
                        case "MESSAGETEST":

                            MessageTestManagementWebUI MessageTestManagementWebUI = new MessageTestManagementWebUI();
                            MessageTestManagementWebUI.MyPageName = "Default.cshtml";
                            MessageTestManagementWebUI.FormAction = Request.QueryString["FormAction"];
                            pageContent = MessageTestManagementWebUI.CreateWebForm(myCurrentFrom).ToString();

                            if (IsPost)
                            {
                                MessageTestManagementWebUI.FormAction = Request.Form["Operation"].ToString().ToUpper().Trim();
                                MessageTestManagementWebUI.DoPostBack();
                                showMessage = MessageTestManagementWebUI.ErrorMessage;
                            }

                            break;

                        case "TRUCKMASTER":
                            TruckMasterManagementWebUI TruckMasterManagementWebUI = new TruckMasterManagementWebUI();
                            TruckMasterManagementWebUI.MyPageName = "Default.cshtml";
                            TruckMasterManagementWebUI.FormAction = Request.QueryString["FormAction"];
                            pageContent = TruckMasterManagementWebUI.CreateWebForm(myCurrentFrom).ToString();
                            if (IsPost)
                            {
                                TruckMasterManagementWebUI.FormAction = Request.Form["Operation"].ToString().ToUpper().Trim();
                                TruckMasterManagementWebUI.DoPostBack();
                                showMessage = TruckMasterManagementWebUI.ErrorMessage;
                            }
                            break;

                        case "RFSLOCATION":
                            RFSLocationManagementWebUI RFSLocationManagementWebUI = new RFSLocationManagementWebUI();
                            RFSLocationManagementWebUI.MyPageName = "Default.cshtml";
                            RFSLocationManagementWebUI.FormAction = Request.QueryString["FormAction"];
                            pageContent = RFSLocationManagementWebUI.CreateWebForm(myCurrentFrom).ToString();
                            if (IsPost)
                            {
                                RFSLocationManagementWebUI.FormAction = Request.Form["Operation"].ToString().ToUpper().Trim();
                                RFSLocationManagementWebUI.DoPostBack();
                                showMessage = RFSLocationManagementWebUI.ErrorMessage;
                            }
                            break;
                        case "DRIVERMASTER":
                            DriverMasterManagementWebUI DriverMasterManagementWebUI = new DriverMasterManagementWebUI();
                            DriverMasterManagementWebUI.MyPageName = "Default.cshtml";
                            DriverMasterManagementWebUI.FormAction = Request.QueryString["FormAction"];
                            pageContent = DriverMasterManagementWebUI.CreateWebForm(myCurrentFrom).ToString();
                            if (IsPost)
                            {
                                DriverMasterManagementWebUI.FormAction = Request.Form["Operation"].ToString().ToUpper().Trim();
                                DriverMasterManagementWebUI.DoPostBack();
                                showMessage = DriverMasterManagementWebUI.ErrorMessage;
                            }
                            break;
                    }
                    break;
                case "SCHEDULE":
                    switch (Request.QueryString["Apps"].ToUpper().ToString())
                    {
                        case "SCHEDULE":
                            ScheduleManagementWebUI scheduleManagementWebUI = new ScheduleManagementWebUI();
                            scheduleManagementWebUI.MyPageName = "Default.cshtml";
                            scheduleManagementWebUI.FormAction = Request.QueryString["FormAction"];
                            pageContent = scheduleManagementWebUI.CreateWebForm(myCurrentFrom).ToString();
                            if (IsPost)
                            {
                                scheduleManagementWebUI.FormAction = Request.Form["Operation"].ToString().ToUpper().Trim();
                                scheduleManagementWebUI.DoPostBack();
                                showMessage = scheduleManagementWebUI.ErrorMessage;
                            }

                            break;
                        case "FLIGHTOPEN":
                            FlightOpenManagementWebUI flightopenManagementWebUI = new FlightOpenManagementWebUI();
                            flightopenManagementWebUI.MyPageName = "Default.cshtml";
                            flightopenManagementWebUI.FormAction = Request.QueryString["FormAction"];
                            pageContent = flightopenManagementWebUI.CreateWebForm(myCurrentFrom).ToString();
                            if (IsPost)
                            {
                                flightopenManagementWebUI.FormAction = Request.Form["Operation"].ToString().ToUpper().Trim();
                                flightopenManagementWebUI.DoPostBack();
                                showMessage = flightopenManagementWebUI.ErrorMessage;
                            }

                            break;
                        case "VIEWEDITFLIGHT":
                            ViewEditFlightManagementWebUI vieweditflightManagementWebUI = new ViewEditFlightManagementWebUI();
                            vieweditflightManagementWebUI.MyPageName = "Default.cshtml";
                            vieweditflightManagementWebUI.FormAction = Request.QueryString["FormAction"];
                            pageContent = vieweditflightManagementWebUI.CreateWebForm(myCurrentFrom).ToString();
                            if (IsPost)
                            {
                                vieweditflightManagementWebUI.FormAction = Request.Form["Operation"].ToString().ToUpper().Trim();
                                vieweditflightManagementWebUI.DoPostBack();
                                showMessage = vieweditflightManagementWebUI.ErrorMessage;
                            }

                            break;

                        case "SSIMUPLOAD":
                            SSIMUploadManagementWebUI sSIMUploadManagementWebUI = new SSIMUploadManagementWebUI();
                            sSIMUploadManagementWebUI.MyPageName = "Default.cshtml";
                            sSIMUploadManagementWebUI.FormAction = Request.QueryString["FormAction"];
                            pageContent = sSIMUploadManagementWebUI.CreateWebForm(myCurrentFrom).ToString();
                            if (IsPost)
                            {
                                sSIMUploadManagementWebUI.FormAction = Request.Form["Operation"].ToString().ToUpper().Trim();
                                sSIMUploadManagementWebUI.DoPostBack();
                                showMessage = sSIMUploadManagementWebUI.ErrorMessage;
                            }

                            break;
                        case "SASSSIMUPLOAD":
                            SASSSIMUploadManagementWebUI sSASSIMUploadManagementWebUI = new SASSSIMUploadManagementWebUI();
                            sSASSIMUploadManagementWebUI.MyPageName = "Default.cshtml";
                            sSASSIMUploadManagementWebUI.FormAction = Request.QueryString["FormAction"];
                            pageContent = sSASSIMUploadManagementWebUI.CreateWebForm(myCurrentFrom).ToString();
                            if (IsPost)
                            {
                                sSASSIMUploadManagementWebUI.FormAction = Request.Form["Operation"].ToString().ToUpper().Trim();
                                sSASSIMUploadManagementWebUI.DoPostBack();
                                showMessage = sSASSIMUploadManagementWebUI.ErrorMessage;
                            }

                            break;

                    }
                    break;
                case "BUILDUP":
                    switch (Request.QueryString["Apps"].ToUpper().ToString())
                    {
                        case "AGENTBUILDUP":
                            AgentBuildUpManagementWebUI objMNG = new AgentBuildUpManagementWebUI();
                            objMNG.MyPageName = "Default.cshtml";
                            objMNG.FormAction = Request.QueryString["FormAction"];
                            pageContent = objMNG.CreateWebForm(myCurrentFrom).ToString();
                            if (IsPost)
                            {
                                objMNG.FormAction = Request.Form["Operation"].ToString().ToUpper().Trim();
                                objMNG.DoPostBack();
                                showMessage = objMNG.ErrorMessage;
                            }
                            break;

                        case "AGENTBUILDUPWEIGHING":
                            AgentBuildUpWeighingManagementWebUI objMNGWeighing = new AgentBuildUpWeighingManagementWebUI();
                            objMNGWeighing.MyPageName = "Default.cshtml";
                            objMNGWeighing.FormAction = Request.QueryString["FormAction"];
                            pageContent = objMNGWeighing.CreateWebForm(myCurrentFrom).ToString();
                            if (IsPost)
                            {
                                objMNGWeighing.FormAction = Request.Form["Operation"].ToString().ToUpper().Trim();
                                objMNGWeighing.DoPostBack();
                                showMessage = objMNGWeighing.ErrorMessage;
                            }
                            break;
                    }
                    break;
                case "REPORT":
                    switch (Request.QueryString["Apps"].ToUpper().ToString())
                    {

                        case "WORKORDER":
                            WorkOrderManagementWebUI WorkOrderManagementWebUI = new WorkOrderManagementWebUI();
                            WorkOrderManagementWebUI.MyPageName = "Default.cshtml";
                            WorkOrderManagementWebUI.FormAction = Request.QueryString["FormAction"];
                            pageContent = WorkOrderManagementWebUI.CreateWebForm(myCurrentFrom).ToString();
                            if (IsPost)
                            {
                                WorkOrderManagementWebUI.FormAction = Request.Form["Operation"].ToString().ToUpper().Trim();
                                WorkOrderManagementWebUI.DoPostBack();
                                showMessage = WorkOrderManagementWebUI.ErrorMessage;
                            }

                            break;
                        case "UNCLEAREDSHIPMENT":

                            UnclearedShipmentManagementWebUI UnclearedShipmentManagementWebUI = new UnclearedShipmentManagementWebUI();
                            UnclearedShipmentManagementWebUI.MyPageName = "Default.cshtml";
                            UnclearedShipmentManagementWebUI.FormAction = Request.QueryString["FormAction"];
                            pageContent = UnclearedShipmentManagementWebUI.CreateWebForm(myCurrentFrom).ToString();
                            if (IsPost)
                            {
                                UnclearedShipmentManagementWebUI.FormAction = Request.Form["Operation"].ToString().ToUpper().Trim();
                                UnclearedShipmentManagementWebUI.DoPostBack();
                                showMessage = UnclearedShipmentManagementWebUI.ErrorMessage;
                            }

                            break;
                        case "DELIVERYPENDING":

                            DeliveryPendingManagementWebUI DeliveryPendingManagementWebUI = new DeliveryPendingManagementWebUI();
                            DeliveryPendingManagementWebUI.MyPageName = "Default.cshtml";
                            DeliveryPendingManagementWebUI.FormAction = Request.QueryString["FormAction"];
                            pageContent = DeliveryPendingManagementWebUI.CreateWebForm(myCurrentFrom).ToString();
                            if (IsPost)
                            {
                                DeliveryPendingManagementWebUI.FormAction = Request.Form["Operation"].ToString().ToUpper().Trim();
                                DeliveryPendingManagementWebUI.DoPostBack();
                                showMessage = DeliveryPendingManagementWebUI.ErrorMessage;
                            }

                            break;
                        case "BALANCESTOCK":
                            BalanceStockManagementWebUI BalanceStockManagementWebUI = new BalanceStockManagementWebUI();
                            BalanceStockManagementWebUI.MyPageName = "Default.cshtml";
                            BalanceStockManagementWebUI.FormAction = Request.QueryString["FormAction"];
                            pageContent = BalanceStockManagementWebUI.CreateWebForm(myCurrentFrom).ToString();
                            if (IsPost)
                            {
                                BalanceStockManagementWebUI.FormAction = Request.Form["Operation"].ToString().ToUpper().Trim();
                                BalanceStockManagementWebUI.DoPostBack();
                                showMessage = BalanceStockManagementWebUI.ErrorMessage;
                            }

                            break;
                        case "COMMONEXPORTIMPORTREPORT":
                            CommonExportImportReportManagementWebUI CommonExportImportReportManagementWebUI = new CommonExportImportReportManagementWebUI();
                            CommonExportImportReportManagementWebUI.MyPageName = "Default.cshtml";
                            CommonExportImportReportManagementWebUI.FormAction = Request.QueryString["FormAction"];
                            pageContent = CommonExportImportReportManagementWebUI.CreateWebForm(myCurrentFrom).ToString();
                            if (IsPost)
                            {
                                CommonExportImportReportManagementWebUI.FormAction = Request.Form["Operation"].ToString().ToUpper().Trim();
                                CommonExportImportReportManagementWebUI.DoPostBack();
                                showMessage = CommonExportImportReportManagementWebUI.ErrorMessage;
                            }

                            break;
                        case "ULDINVENTORYD":

                            ULDInventoryDManagementWebUI ULDInventoryManagementWebUI = new ULDInventoryDManagementWebUI();
                            ULDInventoryManagementWebUI.MyPageName = "Default.cshtml";
                            ULDInventoryManagementWebUI.FormAction = Request.QueryString["FormAction"];
                            pageContent = ULDInventoryManagementWebUI.CreateWebForm(myCurrentFrom).ToString();
                            if (IsPost)
                            {
                                ULDInventoryManagementWebUI.FormAction = Request.Form["Operation"].ToString().ToUpper().Trim();
                                ULDInventoryManagementWebUI.DoPostBack();
                                showMessage = ULDInventoryManagementWebUI.ErrorMessage;
                            }

                            break;
                        case "CONSUME":
                            ConsumeManagementWebUI ConsumeManagementWebUI = new ConsumeManagementWebUI();
                            ConsumeManagementWebUI.MyPageName = "Default.cshtml";
                            ConsumeManagementWebUI.FormAction = Request.QueryString["FormAction"];
                            pageContent = ConsumeManagementWebUI.CreateWebForm(myCurrentFrom).ToString();
                            if (IsPost)
                            {
                                ConsumeManagementWebUI.FormAction = Request.Form["Operation"].ToString().ToUpper().Trim();
                                ConsumeManagementWebUI.DoPostBack();
                                showMessage = ConsumeManagementWebUI.ErrorMessage;
                            }

                            break;

                        case "ULDOUT":
                            ULDOutManagementWebUI ULDOutManagementWebUI = new ULDOutManagementWebUI();
                            ULDOutManagementWebUI.MyPageName = "Default.cshtml";
                            ULDOutManagementWebUI.FormAction = Request.QueryString["FormAction"];
                            pageContent = ULDOutManagementWebUI.CreateWebForm(myCurrentFrom).ToString();
                            if (IsPost)
                            {
                                ULDOutManagementWebUI.FormAction = Request.Form["Operation"].ToString().ToUpper().Trim();
                                ULDOutManagementWebUI.DoPostBack();
                                showMessage = ULDOutManagementWebUI.ErrorMessage;
                            }

                            break;




                        case "EXPORTIMPORT":


                            ExportImportManagementWebUI ExportImportManagementWebUI = new ExportImportManagementWebUI();
                            ExportImportManagementWebUI.MyPageName = "Default.cshtml";
                            ExportImportManagementWebUI.FormAction = Request.QueryString["FormAction"];
                            pageContent = ExportImportManagementWebUI.CreateWebForm(myCurrentFrom).ToString();
                            if (IsPost)
                            {
                                ExportImportManagementWebUI.FormAction = Request.Form["Operation"].ToString().ToUpper().Trim();
                                ExportImportManagementWebUI.DoPostBack();
                                showMessage = ExportImportManagementWebUI.ErrorMessage;
                            }

                            break;

                        case "UWSPENDING":
                            UWSPendingManagementWebUI UWSPendingManagementWebUI = new UWSPendingManagementWebUI();
                            UWSPendingManagementWebUI.MyPageName = "Default.cshtml";
                            UWSPendingManagementWebUI.FormAction = Request.QueryString["FormAction"];
                            pageContent = UWSPendingManagementWebUI.CreateWebForm(myCurrentFrom).ToString();
                            if (IsPost)
                            {
                                UWSPendingManagementWebUI.FormAction = Request.Form["Operation"].ToString().ToUpper().Trim();
                                UWSPendingManagementWebUI.DoPostBack();
                                showMessage = UWSPendingManagementWebUI.ErrorMessage;
                            }

                            break;


                        case "EXPORTDEPARTURE":
                            ExportDepartureManagementWebUI ExportDepartureManagementWebUI = new ExportDepartureManagementWebUI();
                            ExportDepartureManagementWebUI.MyPageName = "Default.cshtml";
                            ExportDepartureManagementWebUI.FormAction = Request.QueryString["FormAction"];
                            pageContent = ExportDepartureManagementWebUI.CreateWebForm(myCurrentFrom).ToString();
                            if (IsPost)
                            {
                                ExportDepartureManagementWebUI.FormAction = Request.Form["Operation"].ToString().ToUpper().Trim();
                                ExportDepartureManagementWebUI.DoPostBack();
                                showMessage = ExportDepartureManagementWebUI.ErrorMessage;
                            }

                            break;
                        case "PETTY":
                            PettyManagementWebUI PettyManagementWebUI = new PettyManagementWebUI();
                            PettyManagementWebUI.MyPageName = "Default.cshtml";
                            PettyManagementWebUI.FormAction = Request.QueryString["FormAction"];
                            pageContent = PettyManagementWebUI.CreateWebForm(myCurrentFrom).ToString();
                            if (IsPost)
                            {
                                PettyManagementWebUI.FormAction = Request.Form["Operation"].ToString().ToUpper().Trim();
                                PettyManagementWebUI.DoPostBack();
                                showMessage = PettyManagementWebUI.ErrorMessage;
                            }

                            break;


                        case "MOVEMENTREGISTER":
                            MovementRegisterManagementWebUI MovementRegisterManagementWebUI = new MovementRegisterManagementWebUI();
                            MovementRegisterManagementWebUI.MyPageName = "Default.cshtml";
                            MovementRegisterManagementWebUI.FormAction = Request.QueryString["FormAction"];
                            pageContent = MovementRegisterManagementWebUI.CreateWebForm(myCurrentFrom).ToString();
                            if (IsPost)
                            {
                                MovementRegisterManagementWebUI.FormAction = Request.Form["Operation"].ToString().ToUpper().Trim();
                                MovementRegisterManagementWebUI.DoPostBack();
                                showMessage = MovementRegisterManagementWebUI.ErrorMessage;
                            }

                            break;

                        case "IMPORTSTATUS":
                            ImportStatusManagementWebUI ImportStatusManagementWebUI = new ImportStatusManagementWebUI();
                            ImportStatusManagementWebUI.MyPageName = "Default.cshtml";
                            ImportStatusManagementWebUI.FormAction = Request.QueryString["FormAction"];
                            pageContent = ImportStatusManagementWebUI.CreateWebForm(myCurrentFrom).ToString();
                            if (IsPost)
                            {
                                ImportStatusManagementWebUI.FormAction = Request.Form["Operation"].ToString().ToUpper().Trim();
                                ImportStatusManagementWebUI.DoPostBack();
                                showMessage = ImportStatusManagementWebUI.ErrorMessage;
                            }

                            break;


                        case "CREDITLIMIT":
                            CreditLimitManagementWebUI CreditLimitManagementWebUI = new CreditLimitManagementWebUI();
                            CreditLimitManagementWebUI.MyPageName = "Default.cshtml";
                            CreditLimitManagementWebUI.FormAction = Request.QueryString["FormAction"];
                            pageContent = CreditLimitManagementWebUI.CreateWebForm(myCurrentFrom).ToString();
                            if (IsPost)
                            {
                                CreditLimitManagementWebUI.FormAction = Request.Form["Operation"].ToString().ToUpper().Trim();
                                CreditLimitManagementWebUI.DoPostBack();
                                showMessage = CreditLimitManagementWebUI.ErrorMessage;
                            }

                            break;

                        case "CREDITLIMITTRANSACTIONREPORT":
                            CreditLimitTransactionReportManagementWebUI CreditLimitTransactionReportManagementWebUI = new CreditLimitTransactionReportManagementWebUI();
                            CreditLimitTransactionReportManagementWebUI.MyPageName = "Default.cshtml";
                            CreditLimitTransactionReportManagementWebUI.FormAction = Request.QueryString["FormAction"];
                            pageContent = CreditLimitTransactionReportManagementWebUI.CreateWebForm(myCurrentFrom).ToString();
                            if (IsPost)
                            {
                                CreditLimitTransactionReportManagementWebUI.FormAction = Request.Form["Operation"].ToString().ToUpper().Trim();
                                CreditLimitTransactionReportManagementWebUI.DoPostBack();
                                showMessage = CreditLimitTransactionReportManagementWebUI.ErrorMessage;
                            }

                            break;

                        case "SEAAIR":


                            SeaAirManagementWebUI SeaAirManagementWebUI = new SeaAirManagementWebUI();
                            SeaAirManagementWebUI.MyPageName = "Default.cshtml";
                            SeaAirManagementWebUI.FormAction = Request.QueryString["FormAction"];
                            pageContent = SeaAirManagementWebUI.CreateWebForm(myCurrentFrom).ToString();
                            if (IsPost)
                            {
                                SeaAirManagementWebUI.FormAction = Request.Form["Operation"].ToString().ToUpper().Trim();
                                SeaAirManagementWebUI.DoPostBack();
                                showMessage = SeaAirManagementWebUI.ErrorMessage;
                            }

                            break;
                        case "CARGORANKING":
                            CargoRankingManagementWebUI CargoRankingManagementWebUI = new CargoRankingManagementWebUI();
                            CargoRankingManagementWebUI.MyPageName = "Default.cshtml";
                            CargoRankingManagementWebUI.FormAction = Request.QueryString["FormAction"];
                            pageContent = CargoRankingManagementWebUI.CreateWebForm(myCurrentFrom).ToString();
                            if (IsPost)
                            {
                                CargoRankingManagementWebUI.FormAction = Request.Form["Operation"].ToString().ToUpper().Trim();
                                CargoRankingManagementWebUI.DoPostBack();
                                showMessage = CargoRankingManagementWebUI.ErrorMessage;
                            }

                            break;

                        case "EXPORTCSR":
                            ExportCSRManagementWebUI ExportCSRManagementWebUI = new ExportCSRManagementWebUI();
                            ExportCSRManagementWebUI.MyPageName = "Default.cshtml";
                            ExportCSRManagementWebUI.FormAction = Request.QueryString["FormAction"];
                            pageContent = ExportCSRManagementWebUI.CreateWebForm(myCurrentFrom).ToString();
                            if (IsPost)
                            {
                                ExportCSRManagementWebUI.FormAction = Request.Form["Operation"].ToString().ToUpper().Trim();
                                ExportCSRManagementWebUI.DoPostBack();
                                showMessage = ExportCSRManagementWebUI.ErrorMessage;
                            }

                            break;
                        case "IMPORTCSR":
                            ImportCSRManagementWebUI ImportCSRManagementWebUI = new ImportCSRManagementWebUI();
                            ImportCSRManagementWebUI.MyPageName = "Default.cshtml";
                            ImportCSRManagementWebUI.FormAction = Request.QueryString["FormAction"];
                            pageContent = ImportCSRManagementWebUI.CreateWebForm(myCurrentFrom).ToString();
                            if (IsPost)
                            {
                                ImportCSRManagementWebUI.FormAction = Request.Form["Operation"].ToString().ToUpper().Trim();
                                ImportCSRManagementWebUI.DoPostBack();
                                showMessage = ImportCSRManagementWebUI.ErrorMessage;
                            }

                            break;

                        case "CARGORANKINGEI":
                            CargoRankingEIManagementWebUI CargoRankingEIManagementWebUI = new CargoRankingEIManagementWebUI();
                            CargoRankingEIManagementWebUI.MyPageName = "Default.cshtml";
                            CargoRankingEIManagementWebUI.FormAction = Request.QueryString["FormAction"];
                            pageContent = CargoRankingEIManagementWebUI.CreateWebForm(myCurrentFrom).ToString();
                            if (IsPost)
                            {
                                CargoRankingEIManagementWebUI.FormAction = Request.Form["Operation"].ToString().ToUpper().Trim();
                                CargoRankingEIManagementWebUI.DoPostBack();
                                showMessage = CargoRankingEIManagementWebUI.ErrorMessage;
                            }

                            break;


                        case "CONSIGNEESUMMARY":
                            ConsigneeSummaryManagementWebUI ConsigneeSummaryManagementWebUI = new ConsigneeSummaryManagementWebUI();
                            ConsigneeSummaryManagementWebUI.MyPageName = "Default.cshtml";
                            ConsigneeSummaryManagementWebUI.FormAction = Request.QueryString["FormAction"];
                            pageContent = ConsigneeSummaryManagementWebUI.CreateWebForm(myCurrentFrom).ToString();
                            if (IsPost)
                            {
                                ConsigneeSummaryManagementWebUI.FormAction = Request.Form["Operation"].ToString().ToUpper().Trim();
                                ConsigneeSummaryManagementWebUI.DoPostBack();
                                showMessage = ConsigneeSummaryManagementWebUI.ErrorMessage;
                            }

                            break;


                        case "TARIFFHISTORY":
                            TariffHistoryManagementWebUI TariffHistoryManagementWebUI = new TariffHistoryManagementWebUI();
                            TariffHistoryManagementWebUI.MyPageName = "Default.cshtml";
                            TariffHistoryManagementWebUI.FormAction = Request.QueryString["FormAction"];
                            pageContent = TariffHistoryManagementWebUI.CreateWebForm(myCurrentFrom).ToString();
                            if (IsPost)
                            {
                                TariffHistoryManagementWebUI.FormAction = Request.Form["Operation"].ToString().ToUpper().Trim();
                                TariffHistoryManagementWebUI.DoPostBack();
                                showMessage = TariffHistoryManagementWebUI.ErrorMessage;
                            }

                            break;
                        case "HANDEDOVER":
                            HandedOverManagementWebUI HandedOverManagementWebUI = new HandedOverManagementWebUI();
                            HandedOverManagementWebUI.MyPageName = "Default.cshtml";
                            HandedOverManagementWebUI.FormAction = Request.QueryString["FormAction"];
                            pageContent = HandedOverManagementWebUI.CreateWebForm(myCurrentFrom).ToString();
                            if (IsPost)
                            {
                                HandedOverManagementWebUI.FormAction = Request.Form["Operation"].ToString().ToUpper().Trim();
                                HandedOverManagementWebUI.DoPostBack();
                                showMessage = HandedOverManagementWebUI.ErrorMessage;
                            }

                            break;


                        case "FLIGHTSTATUS":
                            FlightStatusManagementWebUI FlightStatusManagementWebUI = new FlightStatusManagementWebUI();
                            FlightStatusManagementWebUI.MyPageName = "Default.cshtml";
                            FlightStatusManagementWebUI.FormAction = Request.QueryString["FormAction"];
                            pageContent = FlightStatusManagementWebUI.CreateWebForm(myCurrentFrom).ToString();
                            if (IsPost)
                            {
                                FlightStatusManagementWebUI.FormAction = Request.Form["Operation"].ToString().ToUpper().Trim();
                                FlightStatusManagementWebUI.DoPostBack();
                                showMessage = FlightStatusManagementWebUI.ErrorMessage;
                            }

                            break;

                        case "IMPORTCARGO":
                            ImportCargoManagementWebUI ImportCargoManagementWebUI = new ImportCargoManagementWebUI();
                            ImportCargoManagementWebUI.MyPageName = "Default.cshtml";
                            ImportCargoManagementWebUI.FormAction = Request.QueryString["FormAction"];
                            pageContent = ImportCargoManagementWebUI.CreateWebForm(myCurrentFrom).ToString();
                            if (IsPost)
                            {
                                ImportCargoManagementWebUI.FormAction = Request.Form["Operation"].ToString().ToUpper().Trim();
                                ImportCargoManagementWebUI.DoPostBack();
                                showMessage = ImportCargoManagementWebUI.ErrorMessage;
                            }

                            break;

                        case "ULDHISTORY":
                            ULDHistoryManagementWebUI ULDHistoryManagementWebUI = new ULDHistoryManagementWebUI();
                            ULDHistoryManagementWebUI.MyPageName = "Default.cshtml";
                            ULDHistoryManagementWebUI.FormAction = Request.QueryString["FormAction"];
                            pageContent = ULDHistoryManagementWebUI.CreateWebForm(myCurrentFrom).ToString();
                            if (IsPost)
                            {
                                ULDHistoryManagementWebUI.FormAction = Request.Form["Operation"].ToString().ToUpper().Trim();
                                ULDHistoryManagementWebUI.DoPostBack();
                                showMessage = ULDHistoryManagementWebUI.ErrorMessage;
                            }

                            break;

                        case "ULDMOVEMENTHISTORY":
                            ULDMovementHistoryManagementWebUI uLDMovementHistoryManagementWebUI = new ULDMovementHistoryManagementWebUI();
                            uLDMovementHistoryManagementWebUI.MyPageName = "Default.cshtml";
                            uLDMovementHistoryManagementWebUI.FormAction = Request.QueryString["FormAction"];
                            pageContent = uLDMovementHistoryManagementWebUI.CreateWebForm(myCurrentFrom).ToString();
                            if (IsPost)
                            {
                                uLDMovementHistoryManagementWebUI.FormAction = Request.Form["Operation"].ToString().ToUpper().Trim();
                                uLDMovementHistoryManagementWebUI.DoPostBack();
                                showMessage = uLDMovementHistoryManagementWebUI.ErrorMessage;
                            }

                            break;

                        case "CARGOAIRLINEVOLUME":


                            CargoAirlineVolumeManagementWebUI CargoAirlineVolumeManagementWebUI = new CargoAirlineVolumeManagementWebUI();
                            CargoAirlineVolumeManagementWebUI.MyPageName = "Default.cshtml";
                            CargoAirlineVolumeManagementWebUI.FormAction = Request.QueryString["FormAction"];
                            pageContent = CargoAirlineVolumeManagementWebUI.CreateWebForm(myCurrentFrom).ToString();
                            if (IsPost)
                            {
                                CargoAirlineVolumeManagementWebUI.FormAction = Request.Form["Operation"].ToString().ToUpper().Trim();
                                CargoAirlineVolumeManagementWebUI.DoPostBack();
                                showMessage = CargoAirlineVolumeManagementWebUI.ErrorMessage;
                            }

                            break;


                        case "HANDLING":


                            HandlingManagementWebUI HandlingManagementWebUI = new HandlingManagementWebUI();
                            HandlingManagementWebUI.MyPageName = "Default.cshtml";
                            HandlingManagementWebUI.FormAction = Request.QueryString["FormAction"];
                            pageContent = HandlingManagementWebUI.CreateWebForm(myCurrentFrom).ToString();
                            if (IsPost)
                            {
                                HandlingManagementWebUI.FormAction = Request.Form["Operation"].ToString().ToUpper().Trim();
                                HandlingManagementWebUI.DoPostBack();
                                showMessage = HandlingManagementWebUI.ErrorMessage;
                            }

                            break;
                        case "ESS":


                            ESSManagementWebUI ESSManagementWebUI = new ESSManagementWebUI();
                            ESSManagementWebUI.MyPageName = "Default.cshtml";
                            ESSManagementWebUI.FormAction = Request.QueryString["FormAction"];
                            pageContent = ESSManagementWebUI.CreateWebForm(myCurrentFrom).ToString();
                            if (IsPost)
                            {
                                ESSManagementWebUI.FormAction = Request.Form["Operation"].ToString().ToUpper().Trim();
                                ESSManagementWebUI.DoPostBack();
                                showMessage = ESSManagementWebUI.ErrorMessage;
                            }

                            break;
                        case "DAILYFINALDELIVERYREPORT":


                            DailyFinalDeliveryReportManagementWebUI DailyFinalDeliveryReportManagementWebUI = new DailyFinalDeliveryReportManagementWebUI();
                            DailyFinalDeliveryReportManagementWebUI.MyPageName = "Default.cshtml";
                            DailyFinalDeliveryReportManagementWebUI.FormAction = Request.QueryString["FormAction"];
                            pageContent = DailyFinalDeliveryReportManagementWebUI.CreateWebForm(myCurrentFrom).ToString();
                            if (IsPost)
                            {
                                DailyFinalDeliveryReportManagementWebUI.FormAction = Request.Form["Operation"].ToString().ToUpper().Trim();
                                DailyFinalDeliveryReportManagementWebUI.DoPostBack();
                                showMessage = DailyFinalDeliveryReportManagementWebUI.ErrorMessage;
                            }

                            break;
                        case "ESS_DAILYREPORT":


                            ESS_DailyReportManagementWebUI ESS_DailyReportManagementWebUI = new ESS_DailyReportManagementWebUI();
                            ESS_DailyReportManagementWebUI.MyPageName = "Default.cshtml";
                            ESS_DailyReportManagementWebUI.FormAction = Request.QueryString["FormAction"];
                            pageContent = ESS_DailyReportManagementWebUI.CreateWebForm(myCurrentFrom).ToString();
                            if (IsPost)
                            {
                                ESS_DailyReportManagementWebUI.FormAction = Request.Form["Operation"].ToString().ToUpper().Trim();
                                ESS_DailyReportManagementWebUI.DoPostBack();
                                showMessage = ESS_DailyReportManagementWebUI.ErrorMessage;
                            }

                            break;
                        case "BUILTUPREPORT":


                            BuiltupreportManagementWebUI BuiltupreportManagementWebUI = new BuiltupreportManagementWebUI();
                            BuiltupreportManagementWebUI.MyPageName = "Default.cshtml";
                            BuiltupreportManagementWebUI.FormAction = Request.QueryString["FormAction"];
                            pageContent = BuiltupreportManagementWebUI.CreateWebForm(myCurrentFrom).ToString();
                            if (IsPost)
                            {
                                BuiltupreportManagementWebUI.FormAction = Request.Form["Operation"].ToString().ToUpper().Trim();
                                BuiltupreportManagementWebUI.DoPostBack();
                                showMessage = BuiltupreportManagementWebUI.ErrorMessage;
                            }

                            break;
                    }
                    break;
                case "TARIFF":
                    switch (Request.QueryString["Apps"].ToUpper().ToString())
                    {
                        case "ROUNDOFFCURRENCY":
                            RoundOffCurrencyManagementWebUI rCurrencyManagementWebUI = new RoundOffCurrencyManagementWebUI();
                            rCurrencyManagementWebUI.MyPageName = "Default.cshtml";
                            rCurrencyManagementWebUI.FormAction = Request.QueryString["FormAction"];
                            pageContent = rCurrencyManagementWebUI.CreateWebForm(myCurrentFrom).ToString();
                            if (IsPost)
                            {
                                rCurrencyManagementWebUI.FormAction = Request.Form["Operation"].ToString().ToUpper().Trim();
                                rCurrencyManagementWebUI.DoPostBack();
                                showMessage = rCurrencyManagementWebUI.ErrorMessage;
                            }

                            break;
                        case "BASISOFCHARGE":
                            BasisOfChargeManagementWebUI basisOfChargeManagementWebUI = new BasisOfChargeManagementWebUI();
                            basisOfChargeManagementWebUI.MyPageName = "Default.cshtml";
                            basisOfChargeManagementWebUI.FormAction = Request.QueryString["FormAction"];
                            pageContent = basisOfChargeManagementWebUI.CreateWebForm(myCurrentFrom).ToString();
                            if (IsPost)
                            {
                                basisOfChargeManagementWebUI.FormAction = Request.Form["Operation"].ToString().ToUpper().Trim();
                                basisOfChargeManagementWebUI.DoPostBack();
                                showMessage = basisOfChargeManagementWebUI.ErrorMessage;
                            }

                            break;
                        case "MANAGETARIFF":
                            ManageTariffManagementWebUI manageTariffManagementWebUI = new ManageTariffManagementWebUI();
                            manageTariffManagementWebUI.MyPageName = "Default.cshtml";
                            manageTariffManagementWebUI.FormAction = Request.QueryString["FormAction"];
                            pageContent = manageTariffManagementWebUI.CreateWebForm(myCurrentFrom).ToString();
                            if (IsPost)
                            {
                                manageTariffManagementWebUI.FormAction = Request.Form["Operation"].ToString().ToUpper().Trim();
                                manageTariffManagementWebUI.DoPostBack();
                                showMessage = manageTariffManagementWebUI.ErrorMessage;
                            }
                            break;

                        case "TARIFFSEARCH":
                            TariffSearchManagementWebUI TariffSearchManagementWebUI = new TariffSearchManagementWebUI();
                            TariffSearchManagementWebUI.MyPageName = "Default.cshtml";
                            TariffSearchManagementWebUI.FormAction = Request.QueryString["FormAction"];
                            pageContent = TariffSearchManagementWebUI.CreateWebForm(myCurrentFrom).ToString();
                            if (IsPost)
                            {
                                TariffSearchManagementWebUI.FormAction = Request.Form["Operation"].ToString().ToUpper().Trim();
                                TariffSearchManagementWebUI.DoPostBack();
                                showMessage = TariffSearchManagementWebUI.ErrorMessage;
                            }
                            break;


                        case "HANDLINGCHARGES":
                            HandlingChargesManagementWebUI HandlingChargesManagementWebUI = new HandlingChargesManagementWebUI();
                            HandlingChargesManagementWebUI.MyPageName = "Default.cshtml";
                            HandlingChargesManagementWebUI.FormAction = Request.QueryString["FormAction"];
                            pageContent = HandlingChargesManagementWebUI.CreateWebForm(myCurrentFrom).ToString();
                            if (IsPost)
                            {

                                HandlingChargesManagementWebUI.FormAction = Request.Form["Operation"].ToString().ToUpper().Trim();
                                HandlingChargesManagementWebUI.DoPostBack();
                                showMessage = HandlingChargesManagementWebUI.ErrorMessage;
                            }

                            break;
                        case "HOLIDAYLIST":
                            HolidayListManagementWebUI holidayListManagementWebUI = new HolidayListManagementWebUI();
                            holidayListManagementWebUI.MyPageName = "Default.cshtml";
                            holidayListManagementWebUI.FormAction = Request.QueryString["FormAction"];
                            pageContent = holidayListManagementWebUI.CreateWebForm(myCurrentFrom).ToString();
                            if (IsPost)
                            {

                                holidayListManagementWebUI.FormAction = Request.Form["Operation"].ToString().ToUpper().Trim();
                                holidayListManagementWebUI.DoPostBack();
                                showMessage = holidayListManagementWebUI.ErrorMessage;
                            }

                            break;

                        case "ESSCHARGES":
                            ESSChargesManagementWebUI ESSChargesManagementWebUI = new ESSChargesManagementWebUI();
                            ESSChargesManagementWebUI.MyPageName = "Default.cshtml";
                            ESSChargesManagementWebUI.FormAction = Request.QueryString["FormAction"];
                            pageContent = ESSChargesManagementWebUI.CreateWebForm(myCurrentFrom).ToString();
                            if (IsPost)
                            {
                                ESSChargesManagementWebUI.FormAction = Request.Form["Operation"].ToString().ToUpper().Trim();
                                ESSChargesManagementWebUI.DoPostBack();
                                showMessage = ESSChargesManagementWebUI.ErrorMessage;
                            }

                            break;
                    }
                    break;
                case "SHIPMENT":

                    switch (Request.QueryString["Apps"].ToUpper().ToString())
                    {
                        case "RETURNTOSHIPPER":
                            ReturntoShipperManagementWebUI returntoShipperManagementWebUI = new ReturntoShipperManagementWebUI();
                            returntoShipperManagementWebUI.MyPageName = "Default.cshtml";
                            returntoShipperManagementWebUI.FormAction = Request.QueryString["FormAction"];
                            pageContent = returntoShipperManagementWebUI.CreateWebForm(myCurrentFrom).ToString();
                            if (IsPost)
                            {
                                returntoShipperManagementWebUI.FormAction = Request.Form["Operation"].ToString().ToUpper().Trim();
                                returntoShipperManagementWebUI.DoPostBack();
                                showMessage = returntoShipperManagementWebUI.ErrorMessage;
                            }

                            break;
                        case "AMENDFLIGHTSTATUS":
                            AmendFlightStatusManagementWebUI amendflightstatusManagementWebUI = new AmendFlightStatusManagementWebUI();
                            amendflightstatusManagementWebUI.MyPageName = "Default.cshtml";
                            amendflightstatusManagementWebUI.FormAction = Request.QueryString["FormAction"];
                            pageContent = amendflightstatusManagementWebUI.CreateWebForm(myCurrentFrom).ToString();
                            if (IsPost)
                            {
                                amendflightstatusManagementWebUI.FormAction = Request.Form["Operation"].ToString().ToUpper().Trim();
                                amendflightstatusManagementWebUI.DoPostBack();
                                showMessage = amendflightstatusManagementWebUI.ErrorMessage;
                            }

                            break;

                        case "GROUPBOOKING":
                            AmendFlightStatusManagementWebUI amendflightstatusManagementWebUI1 = new AmendFlightStatusManagementWebUI();
                            amendflightstatusManagementWebUI1.MyPageName = "Default.cshtml";
                            amendflightstatusManagementWebUI1.FormAction = Request.QueryString["FormAction"];
                            pageContent = amendflightstatusManagementWebUI1.CreateWebForm(myCurrentFrom).ToString();
                            if (IsPost)
                            {
                                amendflightstatusManagementWebUI1.FormAction = Request.Form["Operation"].ToString().ToUpper().Trim();
                                amendflightstatusManagementWebUI1.DoPostBack();
                                showMessage = amendflightstatusManagementWebUI1.ErrorMessage;
                            }

                            break;

                        case "BOOKING":
                            BookingManagementWebUI bookingManagementWebUI = new BookingManagementWebUI();
                            bookingManagementWebUI.MyPageName = "Default.cshtml";
                            bookingManagementWebUI.FormAction = Request.QueryString["FormAction"];
                            pageContent = bookingManagementWebUI.CreateWebForm(myCurrentFrom).ToString();
                            if (IsPost)
                            {

                                bookingManagementWebUI.FormAction = Request.Form["Operation"].ToString().ToUpper().Trim();
                                bookingManagementWebUI.DoPostBack();
                                showMessage = bookingManagementWebUI.ErrorMessage;
                            }

                            break;

                        case "XRAYEXEMPTION":
                            XrayExemptionManagementWebUI XrayExemptionManagementWebUI = new XrayExemptionManagementWebUI();
                            XrayExemptionManagementWebUI.MyPageName = "Default.cshtml";
                            XrayExemptionManagementWebUI.FormAction = Request.QueryString["FormAction"];
                            pageContent = XrayExemptionManagementWebUI.CreateWebForm(myCurrentFrom).ToString();
                            if (IsPost)
                            {

                                XrayExemptionManagementWebUI.FormAction = Request.Form["Operation"].ToString().ToUpper().Trim();
                                XrayExemptionManagementWebUI.DoPostBack();
                                showMessage = XrayExemptionManagementWebUI.ErrorMessage;
                            }

                            break;
                        //case "SLINFO":
                        //    SLInfoManagementWebUI SLInfoManagementWebUI = new SLInfoManagementWebUI();
                        //    SLInfoManagementWebUI.MyPageName = "Default.cshtml";
                        //    if (!IsPost)
                        //    {
                        //        SLInfoManagementWebUI.FormAction = Request.QueryString["FormAction"];
                        //        pageContent = SLInfoManagementWebUI.CreateWebForm(myCurrentFrom).ToString();
                        //    }
                        //    else
                        //    {
                        //        SLInfoManagementWebUI.FormAction = Request.Form["Operation"].ToString().ToUpper().Trim();
                        //        SLInfoManagementWebUI.DoPostBack();
                        //        showMessage = SLInfoManagementWebUI.ErrorMessage;
                        //    }
                        //    break;
                        case "ULDBREAKDOWN":
                            ULDBreakdownManagementWebUI ULDBreakdownManagementWebUI = new ULDBreakdownManagementWebUI();
                            ULDBreakdownManagementWebUI.MyPageName = "Default.cshtml";
                            ULDBreakdownManagementWebUI.FormAction = Request.QueryString["FormAction"];
                            pageContent = ULDBreakdownManagementWebUI.CreateWebForm(myCurrentFrom).ToString();
                            if (IsPost)
                            {
                                ULDBreakdownManagementWebUI.FormAction = Request.Form["Operation"].ToString().ToUpper().Trim();
                                ULDBreakdownManagementWebUI.DoPostBack();
                                showMessage = ULDBreakdownManagementWebUI.ErrorMessage;
                            }
                            break;
                        case "FLIGHTTRANSFER":
                            FlightTransferManagementWebUI flighttransferManagementWebUI = new FlightTransferManagementWebUI();
                            flighttransferManagementWebUI.MyPageName = "Default.cshtml";
                            flighttransferManagementWebUI.FormAction = Request.QueryString["FormAction"];
                            pageContent = flighttransferManagementWebUI.CreateWebForm(myCurrentFrom).ToString();
                            if (IsPost)
                            {

                                flighttransferManagementWebUI.FormAction = Request.Form["Operation"].ToString().ToUpper().Trim();
                                flighttransferManagementWebUI.DoPostBack();
                                showMessage = flighttransferManagementWebUI.ErrorMessage;
                            }

                            break;

                        case "CCA":
                            CCAManagementWebUI CCAManagementWebUI = new CCAManagementWebUI();
                            CCAManagementWebUI.MyPageName = "Default.cshtml";
                            CCAManagementWebUI.FormAction = Request.QueryString["FormAction"];
                            pageContent = CCAManagementWebUI.CreateWebForm(myCurrentFrom).ToString();
                            if (IsPost)
                            {

                                CCAManagementWebUI.FormAction = Request.Form["Operation"].ToString().ToUpper().Trim();
                                CCAManagementWebUI.DoPostBack();
                                showMessage = CCAManagementWebUI.ErrorMessage;
                            }

                            break;

                        case "AWBSWAPPING":
                            AWBSwappingManagementWebUI AWBSwappingManagementWebUI = new AWBSwappingManagementWebUI();
                            AWBSwappingManagementWebUI.MyPageName = "Default.cshtml";
                            AWBSwappingManagementWebUI.FormAction = Request.QueryString["FormAction"];
                            pageContent = AWBSwappingManagementWebUI.CreateWebForm(myCurrentFrom).ToString();
                            if (IsPost)
                            {

                                AWBSwappingManagementWebUI.FormAction = Request.Form["Operation"].ToString().ToUpper().Trim();
                                AWBSwappingManagementWebUI.DoPostBack();
                                showMessage = AWBSwappingManagementWebUI.ErrorMessage;
                            }
                            break;

                        case "UNKBOOKING":
                            UNKBookingManagementWebUI UNKBookingManagementWebUI = new UNKBookingManagementWebUI();
                            UNKBookingManagementWebUI.MyPageName = "Default.cshtml";
                            UNKBookingManagementWebUI.FormAction = Request.QueryString["FormAction"];
                            pageContent = UNKBookingManagementWebUI.CreateWebForm(myCurrentFrom).ToString();
                            if (IsPost)
                            {

                                UNKBookingManagementWebUI.FormAction = Request.Form["Operation"].ToString().ToUpper().Trim();
                                UNKBookingManagementWebUI.DoPostBack();
                                showMessage = UNKBookingManagementWebUI.ErrorMessage;
                            }

                            break;
                        //case "READYTOUNLOADING":
                        //    BookingManagementWebUI bookingManagementWebUI = new BookingManagementWebUI();
                        //    bookingManagementWebUI.MyPageName = "Default.cshtml";
                        //    bookingManagementWebUI.FormAction = Request.QueryString["FormAction"];
                        //    pageContent = bookingManagementWebUI.CreateWebForm(myCurrentFrom).ToString();
                        //    if (IsPost)
                        //    {
                        //        bookingManagementWebUI.FormAction = Request.Form["Operation"].ToString().ToUpper().Trim();
                        //        bookingManagementWebUI.DoPostBack();
                        //        showMessage = bookingManagementWebUI.ErrorMessage;
                        //    }
                        //    break;


                        case "WALKINGRATE":
                            WalkingRateManagementWebUI WalkingRateManagementWebUI = new WalkingRateManagementWebUI();
                            WalkingRateManagementWebUI.MyPageName = "Default.cshtml";
                            WalkingRateManagementWebUI.FormAction = Request.QueryString["FormAction"];
                            pageContent = WalkingRateManagementWebUI.CreateWebForm(myCurrentFrom).ToString();
                            if (IsPost)
                            {

                                WalkingRateManagementWebUI.FormAction = Request.Form["Operation"].ToString().ToUpper().Trim();
                                WalkingRateManagementWebUI.DoPostBack();
                                showMessage = WalkingRateManagementWebUI.ErrorMessage;
                            }

                            break;
                        case "BACKLOGCARGO":
                            BackLogCargoManagementWebUI BackLogCargoManagementWebUI = new BackLogCargoManagementWebUI();
                            BackLogCargoManagementWebUI.MyPageName = "Default.cshtml";
                            BackLogCargoManagementWebUI.FormAction = Request.QueryString["FormAction"];
                            pageContent = BackLogCargoManagementWebUI.CreateWebForm(myCurrentFrom).ToString();
                            if (IsPost)
                            {

                                BackLogCargoManagementWebUI.FormAction = Request.Form["Operation"].ToString().ToUpper().Trim();
                                BackLogCargoManagementWebUI.DoPostBack();
                                showMessage = BackLogCargoManagementWebUI.ErrorMessage;
                            }

                            break;
                        case "ASSIGNTEAM":
                            AssignTeamManagementWebUI AssignTeamManagementWebUI = new AssignTeamManagementWebUI();
                            AssignTeamManagementWebUI.MyPageName = "Default.cshtml";
                            AssignTeamManagementWebUI.FormAction = Request.QueryString["FormAction"];
                            pageContent = AssignTeamManagementWebUI.CreateWebForm(myCurrentFrom).ToString();
                            if (IsPost)
                            {

                                AssignTeamManagementWebUI.FormAction = Request.Form["Operation"].ToString().ToUpper().Trim();
                                AssignTeamManagementWebUI.DoPostBack();
                                showMessage = AssignTeamManagementWebUI.ErrorMessage;
                            }

                            break;
                        case "PAYMENT":
                            PaymentManagementWebUI PaymentManagementWebUI = new PaymentManagementWebUI();
                            PaymentManagementWebUI.MyPageName = "Default.cshtml";
                            PaymentManagementWebUI.FormAction = Request.QueryString["FormAction"];
                            pageContent = PaymentManagementWebUI.CreateWebForm(myCurrentFrom).ToString();
                            if (IsPost)
                            {

                                PaymentManagementWebUI.FormAction = Request.Form["Operation"].ToString().ToUpper().Trim();
                                PaymentManagementWebUI.DoPostBack();
                                showMessage = PaymentManagementWebUI.ErrorMessage;
                            }

                            break;
                        case "TRACKING":
                            TrackingManagementWebUI TrackingManagementWebUI = new TrackingManagementWebUI();
                            TrackingManagementWebUI.MyPageName = "Default.cshtml";
                            TrackingManagementWebUI.FormAction = Request.QueryString["FormAction"];
                            pageContent = TrackingManagementWebUI.CreateWebForm(myCurrentFrom).ToString();
                            if (IsPost)
                            {

                                TrackingManagementWebUI.FormAction = Request.Form["Operation"].ToString().ToUpper().Trim();
                                TrackingManagementWebUI.DoPostBack();
                                showMessage = TrackingManagementWebUI.ErrorMessage;
                            }

                            break;

                        case "UWSPRINT":
                            UWSPrintManagementWebUI UWSPrintManagementWebUI = new UWSPrintManagementWebUI();
                            UWSPrintManagementWebUI.MyPageName = "Default.cshtml";
                            UWSPrintManagementWebUI.FormAction = Request.QueryString["FormAction"];
                            pageContent = UWSPrintManagementWebUI.CreateWebForm(myCurrentFrom).ToString();
                            if (IsPost)
                            {

                                UWSPrintManagementWebUI.FormAction = Request.Form["Operation"].ToString().ToUpper().Trim();
                                UWSPrintManagementWebUI.DoPostBack();
                                showMessage = UWSPrintManagementWebUI.ErrorMessage;
                            }

                            break;

                        case "UCM":
                            UCMManagementWebUI uCMManagementWebUI = new UCMManagementWebUI();
                            uCMManagementWebUI.MyPageName = "Default.cshtml";
                            uCMManagementWebUI.FormAction = Request.QueryString["FormAction"];
                            pageContent = uCMManagementWebUI.CreateWebForm(myCurrentFrom).ToString();
                            if (IsPost)
                            {

                                uCMManagementWebUI.FormAction = Request.Form["Operation"].ToString().ToUpper().Trim();
                                uCMManagementWebUI.DoPostBack();
                                showMessage = uCMManagementWebUI.ErrorMessage;
                            }

                            break;
                        case "UCMINOUTALERT":
                            UCMInOutAlertManagementWebUI UCMInOutAlertManagementWebUI = new UCMInOutAlertManagementWebUI();
                            UCMInOutAlertManagementWebUI.MyPageName = "Default.cshtml";
                            UCMInOutAlertManagementWebUI.FormAction = Request.QueryString["FormAction"];
                            pageContent = UCMInOutAlertManagementWebUI.CreateWebForm(myCurrentFrom).ToString();
                            if (IsPost)
                            {
                                UCMInOutAlertManagementWebUI.FormAction = Request.Form["Operation"].ToString().ToUpper().Trim();
                                UCMInOutAlertManagementWebUI.DoPostBack();
                                showMessage = UCMInOutAlertManagementWebUI.ErrorMessage;
                            }
                            break;
                        //Added for UCMDiscrepancyReport-30th Aug 2017 by Anuradha//
                        case "UCMDISCREPANCYREPORT":
                            UCMDiscrepancyReportManagementWebUI UCMDiscrepancyReportManagementWebUI = new UCMDiscrepancyReportManagementWebUI();
                            UCMDiscrepancyReportManagementWebUI.MyPageName = "Default.cshtml";
                            UCMDiscrepancyReportManagementWebUI.FormAction = Request.QueryString["FormAction"];
                            pageContent = UCMDiscrepancyReportManagementWebUI.CreateWebForm(myCurrentFrom).ToString();
                            if (IsPost)
                            {
                                UCMDiscrepancyReportManagementWebUI.FormAction = Request.Form["Operation"].ToString().ToUpper().Trim();
                                UCMDiscrepancyReportManagementWebUI.DoPostBack();
                                showMessage = UCMDiscrepancyReportManagementWebUI.ErrorMessage;
                            }

                            break;
                        ////Added for UCMDiscrepancyReport-30th Aug 2017 by Anuradha//
                        case "RUSHHANDLINGAPPROVAL":
                            RushHandlingApprovalManagementWebUI RushHandlingApprovalManagementWebUI = new RushHandlingApprovalManagementWebUI();
                            RushHandlingApprovalManagementWebUI.MyPageName = "Default.cshtml";
                            RushHandlingApprovalManagementWebUI.FormAction = Request.QueryString["FormAction"];
                            pageContent = RushHandlingApprovalManagementWebUI.CreateWebForm(myCurrentFrom).ToString();
                            if (IsPost)
                            {
                                RushHandlingApprovalManagementWebUI.FormAction = Request.Form["Operation"].ToString().ToUpper().Trim();
                                RushHandlingApprovalManagementWebUI.DoPostBack();
                                showMessage = RushHandlingApprovalManagementWebUI.ErrorMessage;
                            }

                            break;

                        ////Added for UCMDiscrepancyReport-30th Aug 2017 by Anuradha//
                        case "MARINEINSURANCE":
                            MarineInsuranceManagementWebUI MarineInsuranceManagementWebUI = new MarineInsuranceManagementWebUI();

                            MarineInsuranceManagementWebUI.MyPageName = "Default.cshtml";
                            MarineInsuranceManagementWebUI.FormAction = Request.QueryString["FormAction"];
                            pageContent = MarineInsuranceManagementWebUI.CreateWebForm(myCurrentFrom).ToString();
                            if (IsPost)
                            {
                                MarineInsuranceManagementWebUI.FormAction = Request.Form["Operation"].ToString().ToUpper().Trim();
                                MarineInsuranceManagementWebUI.DoPostBack();
                                showMessage = MarineInsuranceManagementWebUI.ErrorMessage;
                            }

                            break;
                    }
                    break;
                case "RATE":
                    switch (Request.QueryString["Apps"].ToUpper().ToString())
                    {
                        case "RATE":
                            RateManagementWebUI RateManagementWebUI = new RateManagementWebUI();
                            RateManagementWebUI.MyPageName = "Default.cshtml";
                            RateManagementWebUI.FormAction = Request.QueryString["FormAction"];
                            pageContent = RateManagementWebUI.CreateWebForm(myCurrentFrom).ToString();
                            if (IsPost)
                            {
                                RateManagementWebUI.FormAction = Request.Form["Operation"].ToString().ToUpper().Trim();
                                RateManagementWebUI.DoPostBack();
                                showMessage = RateManagementWebUI.ErrorMessage;
                            }

                            break;

                        case "RATEHEAVYWEIGHTSURCHARGE":
                            RateHeavyWeightSurchargeManagementWebUI RateHeavyWeightSurchargeManagementWebUI = new RateHeavyWeightSurchargeManagementWebUI();
                            RateHeavyWeightSurchargeManagementWebUI.MyPageName = "Default.cshtml";
                            RateHeavyWeightSurchargeManagementWebUI.FormAction = Request.QueryString["FormAction"];
                            pageContent = RateHeavyWeightSurchargeManagementWebUI.CreateWebForm(myCurrentFrom).ToString();
                            if (IsPost)
                            {

                                RateHeavyWeightSurchargeManagementWebUI.FormAction = Request.Form["Operation"].ToString().ToUpper().Trim();
                                RateHeavyWeightSurchargeManagementWebUI.DoPostBack();
                                showMessage = RateHeavyWeightSurchargeManagementWebUI.ErrorMessage;
                            }

                            break;


                        case "DUECARRIER":
                            DueCarrierManagementWebUI DueCarrierManagementWebUI = new DueCarrierManagementWebUI();
                            DueCarrierManagementWebUI.MyPageName = "Default.cshtml";
                            DueCarrierManagementWebUI.FormAction = Request.QueryString["FormAction"];
                            pageContent = DueCarrierManagementWebUI.CreateWebForm(myCurrentFrom).ToString();
                            if (IsPost)
                            {

                                DueCarrierManagementWebUI.FormAction = Request.Form["Operation"].ToString().ToUpper().Trim();
                                DueCarrierManagementWebUI.DoPostBack();
                                showMessage = DueCarrierManagementWebUI.ErrorMessage;
                            }

                            break;
                        case "RATESERVICETYPE":
                            RateServiceTypeManagementWebUI RateServiceTypeManagementWebUI = new RateServiceTypeManagementWebUI();
                            RateServiceTypeManagementWebUI.MyPageName = "Default.cshtml";
                            RateServiceTypeManagementWebUI.FormAction = Request.QueryString["FormAction"];
                            pageContent = RateServiceTypeManagementWebUI.CreateWebForm(myCurrentFrom).ToString();
                            if (IsPost)
                            {

                                RateServiceTypeManagementWebUI.FormAction = Request.Form["Operation"].ToString().ToUpper().Trim();
                                RateServiceTypeManagementWebUI.DoPostBack();
                                showMessage = RateServiceTypeManagementWebUI.ErrorMessage;
                            }

                            break;
                        case "RATESURCHARGESPHC":
                            RateSurchargeSPHCManagementWebUI RateSurchargeSPHCManagementWebUI = new RateSurchargeSPHCManagementWebUI();
                            RateSurchargeSPHCManagementWebUI.MyPageName = "Default.cshtml";
                            RateSurchargeSPHCManagementWebUI.FormAction = Request.QueryString["FormAction"];
                            pageContent = RateSurchargeSPHCManagementWebUI.CreateWebForm(myCurrentFrom).ToString();
                            if (IsPost)
                            {

                                RateSurchargeSPHCManagementWebUI.FormAction = Request.Form["Operation"].ToString().ToUpper().Trim();
                                RateSurchargeSPHCManagementWebUI.DoPostBack();
                                showMessage = RateSurchargeSPHCManagementWebUI.ErrorMessage;
                            }

                            break;

                        case "RATESURCHARGECOMMODITY":
                            RateSurchargeCommodityManagementWebUI RateSurchargeCommodityManagementWebUI = new RateSurchargeCommodityManagementWebUI();
                            RateSurchargeCommodityManagementWebUI.MyPageName = "Default.cshtml";

                            RateSurchargeCommodityManagementWebUI.FormAction = Request.QueryString["FormAction"];
                            pageContent = RateSurchargeCommodityManagementWebUI.CreateWebForm(myCurrentFrom).ToString();
                            if (IsPost)
                            {

                                RateSurchargeCommodityManagementWebUI.FormAction = Request.Form["Operation"].ToString().ToUpper().Trim();
                                RateSurchargeCommodityManagementWebUI.DoPostBack();
                                showMessage = RateSurchargeCommodityManagementWebUI.ErrorMessage;
                            }
                            break;
                        case "RATEAIRLINEMASTER":
                            RateAirlineMasterManagementWebUI RateAirlineMasterManagementWebUI = new RateAirlineMasterManagementWebUI();
                            RateAirlineMasterManagementWebUI.MyPageName = "Default.cshtml";
                            RateAirlineMasterManagementWebUI.FormAction = Request.QueryString["FormAction"];
                            pageContent = RateAirlineMasterManagementWebUI.CreateWebForm(myCurrentFrom).ToString();
                            if (IsPost)
                            {

                                RateAirlineMasterManagementWebUI.FormAction = Request.Form["Operation"].ToString().ToUpper().Trim();
                                RateAirlineMasterManagementWebUI.DoPostBack();
                                showMessage = RateAirlineMasterManagementWebUI.ErrorMessage;
                            }
                            break;


                        case "RATEEXCHANGEDUECARRIER":
                            RateExchangeDueCarrierManagementWebUI RateExchangeDueCarrierManagementWebUI = new RateExchangeDueCarrierManagementWebUI();
                            RateExchangeDueCarrierManagementWebUI.MyPageName = "Default.cshtml";
                            RateExchangeDueCarrierManagementWebUI.FormAction = Request.QueryString["FormAction"];
                            pageContent = RateExchangeDueCarrierManagementWebUI.CreateWebForm(myCurrentFrom).ToString();
                            if (IsPost)
                            {

                                RateExchangeDueCarrierManagementWebUI.FormAction = Request.Form["Operation"].ToString().ToUpper().Trim();
                                RateExchangeDueCarrierManagementWebUI.DoPostBack();
                                showMessage = RateExchangeDueCarrierManagementWebUI.ErrorMessage;
                            }

                            break;

                        case "EXCHANGERATE":
                            ExchangeRateManagementWebUI ExchangeRateManagementWebUI = new ExchangeRateManagementWebUI();
                            ExchangeRateManagementWebUI.MyPageName = "Default.cshtml";
                            ExchangeRateManagementWebUI.FormAction = Request.QueryString["FormAction"];
                            pageContent = ExchangeRateManagementWebUI.CreateWebForm(myCurrentFrom).ToString();
                            if (IsPost)
                            {

                                ExchangeRateManagementWebUI.FormAction = Request.Form["Operation"].ToString().ToUpper().Trim();
                                ExchangeRateManagementWebUI.DoPostBack();
                                showMessage = ExchangeRateManagementWebUI.ErrorMessage;
                            }

                            break;


                        case "RATEGLOBALDUECARRIER":
                            RateGlobalDueCarrierManagementWebUI RateGlobalDueCarrierManagementWebUI = new RateGlobalDueCarrierManagementWebUI();
                            RateGlobalDueCarrierManagementWebUI.MyPageName = "Default.cshtml";
                            RateGlobalDueCarrierManagementWebUI.FormAction = Request.QueryString["FormAction"];
                            pageContent = RateGlobalDueCarrierManagementWebUI.CreateWebForm(myCurrentFrom).ToString();
                            if (IsPost)
                            {
                                RateGlobalDueCarrierManagementWebUI.FormAction = Request.Form["Operation"].ToString().ToUpper().Trim();
                                RateGlobalDueCarrierManagementWebUI.DoPostBack();
                                showMessage = RateGlobalDueCarrierManagementWebUI.ErrorMessage;
                            }
                            break;
                        case "RATESEARCH":
                            RateSearchManagementWebUI rateSearchManagementWebUI = new RateSearchManagementWebUI();
                            rateSearchManagementWebUI.MyPageName = "Default.cshtml";
                            rateSearchManagementWebUI.FormAction = Request.QueryString["FormAction"];
                            pageContent = rateSearchManagementWebUI.CreateWebForm(myCurrentFrom).ToString();
                            if (IsPost)
                            {
                                rateSearchManagementWebUI.FormAction = Request.Form["Operation"].ToString().ToUpper().Trim();
                                rateSearchManagementWebUI.DoPostBack();
                                showMessage = rateSearchManagementWebUI.ErrorMessage;
                            }
                            break;
                        case "RATESURCHARGE":
                            RateSurchargeManagementWebUI RateSurchargeManagementWebUI = new RateSurchargeManagementWebUI();
                            RateSurchargeManagementWebUI.MyPageName = "Default.cshtml";
                            RateSurchargeManagementWebUI.FormAction = Request.QueryString["FormAction"];
                            pageContent = RateSurchargeManagementWebUI.CreateWebForm(myCurrentFrom).ToString();
                            if (IsPost)
                            {
                                RateSurchargeManagementWebUI.FormAction = Request.Form["Operation"].ToString().ToUpper().Trim();
                                RateSurchargeManagementWebUI.DoPostBack();
                                showMessage = RateSurchargeManagementWebUI.ErrorMessage;
                            }
                            break;
                        //Added By VKumar 19 Jan 2017  Task 72
                        case "OTHERCHARGES":
                            OtherChargesManagementWebUI otherChargesManagementWebUI = new OtherChargesManagementWebUI();
                            otherChargesManagementWebUI.MyPageName = "Default.cshtml";
                            otherChargesManagementWebUI.FormAction = Request.QueryString["FormAction"];
                            pageContent = otherChargesManagementWebUI.CreateWebForm(myCurrentFrom).ToString();
                            if (IsPost)
                            {

                                otherChargesManagementWebUI.FormAction = Request.Form["Operation"].ToString().ToUpper().Trim();
                                otherChargesManagementWebUI.DoPostBack();
                                showMessage = otherChargesManagementWebUI.ErrorMessage;
                            }
                            break;
                        //Ends
                        //Added By Laxmikanta 23 Feb 2017
                        case "OTHERCHARGESHISTORY":
                            OtherChargesHistoryManagementWebUI OtherChargesHistoryManagementWebUI = new OtherChargesHistoryManagementWebUI();
                            OtherChargesHistoryManagementWebUI.MyPageName = "Default.cshtml";
                            OtherChargesHistoryManagementWebUI.FormAction = Request.QueryString["FormAction"];
                            pageContent = OtherChargesHistoryManagementWebUI.CreateWebForm(myCurrentFrom).ToString();
                            if (IsPost)
                            {
                                OtherChargesHistoryManagementWebUI.FormAction = Request.Form["Operation"].ToString().ToUpper().Trim();
                                OtherChargesHistoryManagementWebUI.DoPostBack();
                                showMessage = OtherChargesHistoryManagementWebUI.ErrorMessage;
                            }
                            break;

                        //Added By Laxmikanta 06 Mar 2017
                        case "RATEDETAILSHISTORY":
                            RateDetailsHistoryManagementWebUI RateDetailsHistoryManagementWebUI = new RateDetailsHistoryManagementWebUI();
                            RateDetailsHistoryManagementWebUI.MyPageName = "Default.cshtml";
                            RateDetailsHistoryManagementWebUI.FormAction = Request.QueryString["FormAction"];
                            pageContent = RateDetailsHistoryManagementWebUI.CreateWebForm(myCurrentFrom).ToString();
                            if (IsPost)
                            {
                                RateDetailsHistoryManagementWebUI.FormAction = Request.Form["Operation"].ToString().ToUpper().Trim();
                                RateDetailsHistoryManagementWebUI.DoPostBack();
                                showMessage = RateDetailsHistoryManagementWebUI.ErrorMessage;
                            }
                            break;
                        //ENDS

                        //Added By Vsingh 19 Jan 2017
                        case "SPOTRATE":
                            SpotRateManagementWebUI spotRateManagementWebUI = new SpotRateManagementWebUI();
                            spotRateManagementWebUI.MyPageName = "Default.cshtml";
                            spotRateManagementWebUI.FormAction = Request.QueryString["FormAction"];
                            pageContent = spotRateManagementWebUI.CreateWebForm(myCurrentFrom).ToString();
                            if (IsPost)
                            {

                                spotRateManagementWebUI.FormAction = Request.Form["Operation"].ToString().ToUpper().Trim();
                                spotRateManagementWebUI.DoPostBack();
                                showMessage = spotRateManagementWebUI.ErrorMessage;
                            }

                            break;
                        //Added By Vsingh 19 Jan 2017

                        //Added By TarunKumarSingh 25 Jan 2017
                        case "AGENTGROUP":
                            AgentGroupManagementWebUI agentGroupManagementWebUI = new AgentGroupManagementWebUI();
                            agentGroupManagementWebUI.MyPageName = "Default.cshtml";
                            agentGroupManagementWebUI.FormAction = Request.QueryString["FormAction"];
                            pageContent = agentGroupManagementWebUI.CreateWebForm(myCurrentFrom).ToString();
                            if (IsPost)
                            {

                                agentGroupManagementWebUI.FormAction = Request.Form["Operation"].ToString().ToUpper().Trim();
                                agentGroupManagementWebUI.DoPostBack();
                                showMessage = agentGroupManagementWebUI.ErrorMessage;
                            }

                            break;

                        //Added By PreetiDeep 31 Jan 2017
                        case "TAXRATE":
                            TaxRateManagementWebUI taxrateManagementWebUI = new TaxRateManagementWebUI();
                            taxrateManagementWebUI.MyPageName = "Default.cshtml";
                            taxrateManagementWebUI.FormAction = Request.QueryString["FormAction"];
                            pageContent = taxrateManagementWebUI.CreateWebForm(myCurrentFrom).ToString();
                            if (IsPost)
                            {

                                taxrateManagementWebUI.FormAction = Request.Form["Operation"].ToString().ToUpper().Trim();
                                taxrateManagementWebUI.DoPostBack();
                                showMessage = taxrateManagementWebUI.ErrorMessage;
                            }

                            break;
                        //Added By PreetiDeep 21 Feb 2017
                        case "TAXLOGS":
                            TaxLogsManagementWebUI taxlogsManagementWebUI = new TaxLogsManagementWebUI();
                            taxlogsManagementWebUI.MyPageName = "Default.cshtml";
                            taxlogsManagementWebUI.FormAction = Request.QueryString["FormAction"];
                            pageContent = taxlogsManagementWebUI.CreateWebForm(myCurrentFrom).ToString();
                            if (IsPost)
                            {

                                taxlogsManagementWebUI.FormAction = Request.Form["Operation"].ToString().ToUpper().Trim();
                                taxlogsManagementWebUI.DoPostBack();
                                showMessage = taxlogsManagementWebUI.ErrorMessage;
                            }

                            break;

                        //Added By Shahbaz Akhtar 1 Feb 2017
                        case "MANAGECLASSRATE":
                            ManageClassRateManagementWebUI taxmanageclassrateManagementWebUI = new ManageClassRateManagementWebUI();
                            taxmanageclassrateManagementWebUI.MyPageName = "Default.cshtml";
                            taxmanageclassrateManagementWebUI.FormAction = Request.QueryString["FormAction"];
                            pageContent = taxmanageclassrateManagementWebUI.CreateWebForm(myCurrentFrom).ToString();
                            if (IsPost)
                            {

                                taxmanageclassrateManagementWebUI.FormAction = Request.Form["Operation"].ToString().ToUpper().Trim();
                                taxmanageclassrateManagementWebUI.DoPostBack();
                                showMessage = taxmanageclassrateManagementWebUI.ErrorMessage;
                            }

                            break;

                        //Added By Shahbaz Akhtar 7 Feb 2017
                        case "MANAGETACTRATE":
                            ManageTactRateManagementWebUI ManageTactRateManagementWebUI = new ManageTactRateManagementWebUI();
                            ManageTactRateManagementWebUI.MyPageName = "Default.cshtml";
                            ManageTactRateManagementWebUI.FormAction = Request.QueryString["FormAction"];
                            pageContent = ManageTactRateManagementWebUI.CreateWebForm(myCurrentFrom).ToString();
                            if (IsPost)
                            {

                                ManageTactRateManagementWebUI.FormAction = Request.Form["Operation"].ToString().ToUpper().Trim();
                                ManageTactRateManagementWebUI.DoPostBack();
                                showMessage = ManageTactRateManagementWebUI.ErrorMessage;
                            }

                            break;

                        //Added By Shahbaz Akhtar 14 Jun 2017
                        case "SEARCHTACTRATE":
                            SearchTactRateManagementWebUI SearchTactRateManagementWebUI = new SearchTactRateManagementWebUI();
                            SearchTactRateManagementWebUI.MyPageName = "Default.cshtml";
                            SearchTactRateManagementWebUI.FormAction = Request.QueryString["FormAction"];
                            pageContent = SearchTactRateManagementWebUI.CreateWebForm(myCurrentFrom).ToString();
                            if (IsPost)
                            {

                                SearchTactRateManagementWebUI.FormAction = Request.Form["Operation"].ToString().ToUpper().Trim();
                                SearchTactRateManagementWebUI.DoPostBack();
                                showMessage = SearchTactRateManagementWebUI.ErrorMessage;
                            }

                            break;

                    }
                    break;

                case "STOCK":
                    switch (Request.QueryString["Apps"].ToUpper().ToString())
                    {
                        case "STOCKMANAGEMENT":
                            StockManagementWebUI StockManagementWebUI = new StockManagementWebUI();
                            StockManagementWebUI.MyPageName = "Default.cshtml";
                            StockManagementWebUI.FormAction = Request.QueryString["FormAction"];
                            pageContent = StockManagementWebUI.CreateWebForm(myCurrentFrom).ToString();
                            if (IsPost)
                            {
                                StockManagementWebUI.FormAction = Request.Form["Operation"].ToString().ToUpper().Trim();
                                StockManagementWebUI.DoPostBack();
                                showMessage = StockManagementWebUI.ErrorMessage;
                            }
                            break;

                        case "RETURNTOOFFICE":
                            ReturnToOfficeManagementWebUI ReturnToOfficeManagementWebUI = new ReturnToOfficeManagementWebUI();
                            ReturnToOfficeManagementWebUI.MyPageName = "Default.cshtml";
                            ReturnToOfficeManagementWebUI.FormAction = Request.QueryString["FormAction"];
                            pageContent = ReturnToOfficeManagementWebUI.CreateWebForm(myCurrentFrom).ToString();
                            if (IsPost)
                            {

                                ReturnToOfficeManagementWebUI.FormAction = Request.Form["Operation"].ToString().ToUpper().Trim();
                                ReturnToOfficeManagementWebUI.DoPostBack();
                                showMessage = ReturnToOfficeManagementWebUI.ErrorMessage;
                            }
                            break;

                        case "ISSUEDISTRIBUTEDSTOCKTOSUBBRANCH":
                            IssueDistributedStocktoSubBranchManagementWebUI IssueDistributedStocktoSubBranchManagementWebUI = new IssueDistributedStocktoSubBranchManagementWebUI();
                            IssueDistributedStocktoSubBranchManagementWebUI.MyPageName = "Default.cshtml";
                            IssueDistributedStocktoSubBranchManagementWebUI.FormAction = Request.QueryString["FormAction"];
                            pageContent = IssueDistributedStocktoSubBranchManagementWebUI.CreateWebForm(myCurrentFrom).ToString();
                            if (IsPost)
                            {

                                IssueDistributedStocktoSubBranchManagementWebUI.FormAction = Request.Form["Operation"].ToString().ToUpper().Trim();
                                IssueDistributedStocktoSubBranchManagementWebUI.DoPostBack();
                                showMessage = IssueDistributedStocktoSubBranchManagementWebUI.ErrorMessage;
                            }
                            break;


                        case "RETURNFROMACCOUNT":
                            ReturnFromAccountManagementWebUI ReturnFromAccountManagementWebUI = new ReturnFromAccountManagementWebUI();
                            ReturnFromAccountManagementWebUI.MyPageName = "Default.cshtml";
                            ReturnFromAccountManagementWebUI.FormAction = Request.QueryString["FormAction"];
                            pageContent = ReturnFromAccountManagementWebUI.CreateWebForm(myCurrentFrom).ToString();
                            if (IsPost)
                            {

                                ReturnFromAccountManagementWebUI.FormAction = Request.Form["Operation"].ToString().ToUpper().Trim();
                                ReturnFromAccountManagementWebUI.DoPostBack();
                                showMessage = ReturnFromAccountManagementWebUI.ErrorMessage;
                            }
                            break;
                        case "STOCKVALIDATE":
                            StockValidateManagementWebUI StockValidateManagementWebUI = new StockValidateManagementWebUI();
                            StockValidateManagementWebUI.MyPageName = "Default.cshtml";
                            StockValidateManagementWebUI.FormAction = Request.QueryString["FormAction"];
                            pageContent = StockValidateManagementWebUI.CreateWebForm(myCurrentFrom).ToString();
                            if (IsPost)
                            {

                                StockValidateManagementWebUI.FormAction = Request.Form["Operation"].ToString().ToUpper().Trim();
                                StockValidateManagementWebUI.DoPostBack();
                                showMessage = StockValidateManagementWebUI.ErrorMessage;
                            }
                            break;
                        case "STOCKAWB":
                            StockAWBManagementWebUI StockAWBManagementWebUI = new StockAWBManagementWebUI();
                            StockAWBManagementWebUI.MyPageName = "Default.cshtml";
                            StockAWBManagementWebUI.FormAction = Request.QueryString["FormAction"];
                            pageContent = StockAWBManagementWebUI.CreateWebForm(myCurrentFrom).ToString();

                            if (IsPost)
                            {

                                StockAWBManagementWebUI.FormAction = Request.Form["Operation"].ToString().ToUpper().Trim();
                                StockAWBManagementWebUI.DoPostBack();
                                showMessage = StockAWBManagementWebUI.ErrorMessage;
                            }
                            break;
                        case "AWBSTOCK":
                            AWBStockManagementWebUI AWBStockManagementWebUI = new AWBStockManagementWebUI();
                            AWBStockManagementWebUI.MyPageName = "Default.cshtml";
                            AWBStockManagementWebUI.FormAction = Request.QueryString["FormAction"];
                            pageContent = AWBStockManagementWebUI.CreateWebForm(myCurrentFrom).ToString();
                            if (IsPost)
                            {

                                AWBStockManagementWebUI.FormAction = Request.Form["Operation"].ToString().ToUpper().Trim();
                                AWBStockManagementWebUI.DoPostBack();
                                showMessage = AWBStockManagementWebUI.ErrorMessage;
                            }
                            break;
                        case "AWBLOST":
                            AWBLostManagementWebUI AWBLostManagementWebUI = new AWBLostManagementWebUI();
                            AWBLostManagementWebUI.MyPageName = "Default.cshtml";
                            AWBLostManagementWebUI.FormAction = Request.QueryString["FormAction"];
                            pageContent = AWBLostManagementWebUI.CreateWebForm(myCurrentFrom).ToString();
                            if (IsPost)
                            {

                                AWBLostManagementWebUI.FormAction = Request.Form["Operation"].ToString().ToUpper().Trim();
                                AWBLostManagementWebUI.DoPostBack();
                                showMessage = AWBLostManagementWebUI.ErrorMessage;
                            }
                            break;
                        case "AWBVOID":
                            AWBVoidManagementWebUI AWBVoidManagementWebUI = new AWBVoidManagementWebUI();
                            AWBVoidManagementWebUI.MyPageName = "Default.cshtml";
                            AWBVoidManagementWebUI.FormAction = Request.QueryString["FormAction"];
                            pageContent = AWBVoidManagementWebUI.CreateWebForm(myCurrentFrom).ToString();
                            if (IsPost)
                            {

                                AWBVoidManagementWebUI.FormAction = Request.Form["Operation"].ToString().ToUpper().Trim();
                                AWBVoidManagementWebUI.DoPostBack();
                                showMessage = AWBVoidManagementWebUI.ErrorMessage;
                            }
                            break;
                        case "AWBBLACKLISTED":
                            AWBBlacklistedManagementWebUI AWBBlacklistedManagementWebUI = new AWBBlacklistedManagementWebUI();
                            AWBBlacklistedManagementWebUI.MyPageName = "Default.cshtml";
                            AWBBlacklistedManagementWebUI.FormAction = Request.QueryString["FormAction"];
                            pageContent = AWBBlacklistedManagementWebUI.CreateWebForm(myCurrentFrom).ToString();
                            if (IsPost)
                            {

                                AWBBlacklistedManagementWebUI.FormAction = Request.Form["Operation"].ToString().ToUpper().Trim();
                                AWBBlacklistedManagementWebUI.DoPostBack();
                                showMessage = AWBBlacklistedManagementWebUI.ErrorMessage;
                            }
                            break;
                        case "AWBRESERVED":
                            AWBReservedManagementWebUI AWBReservedManagementWebUI = new AWBReservedManagementWebUI();
                            AWBReservedManagementWebUI.MyPageName = "Default.cshtml";
                            AWBReservedManagementWebUI.FormAction = Request.QueryString["FormAction"];
                            pageContent = AWBReservedManagementWebUI.CreateWebForm(myCurrentFrom).ToString();
                            if (IsPost)
                            {

                                AWBReservedManagementWebUI.FormAction = Request.Form["Operation"].ToString().ToUpper().Trim();
                                AWBReservedManagementWebUI.DoPostBack();
                                showMessage = AWBReservedManagementWebUI.ErrorMessage;
                            }
                            break;
                    }
                    break;

                case "ACCOUNTS":
                    switch (Request.QueryString["Apps"].ToUpper().ToString())
                    {
                        case "PAYMENT":
                            PaymentManagementWebUI PaymentManagementWebUI = new PaymentManagementWebUI();
                            PaymentManagementWebUI.MyPageName = "Default.cshtml";
                            PaymentManagementWebUI.FormAction = Request.QueryString["FormAction"];
                            pageContent = PaymentManagementWebUI.CreateWebForm(myCurrentFrom).ToString();
                            if (IsPost)
                            {

                                PaymentManagementWebUI.FormAction = Request.Form["Operation"].ToString().ToUpper().Trim();
                                PaymentManagementWebUI.DoPostBack();
                                showMessage = PaymentManagementWebUI.ErrorMessage;
                            }
                            break;

                        case "CREDITDEBITNOTE":
                            CreditDebitNoteManagementWebUI obj = new CreditDebitNoteManagementWebUI();
                            obj.MyPageName = "Default.cshtml";
                            obj.FormAction = Request.QueryString["FormAction"];
                            pageContent = obj.CreateWebForm(myCurrentFrom).ToString();
                            if (IsPost)
                            {

                                obj.FormAction = Request.Form["Operation"].ToString().ToUpper().Trim();
                                obj.DoPostBack();
                                showMessage = obj.ErrorMessage;
                            }

                            break;

                        //added by tarun kumar singh

                        case "TRANSACTIONHISTORY":
                            TransactionHistoryManagementWebUI TransactionHistoryManagementWebUI = new TransactionHistoryManagementWebUI();
                            TransactionHistoryManagementWebUI.MyPageName = "Default.cshtml";
                            TransactionHistoryManagementWebUI.FormAction = Request.QueryString["FormAction"];
                            pageContent = TransactionHistoryManagementWebUI.CreateWebForm(myCurrentFrom).ToString();
                            if (IsPost)
                            {

                                TransactionHistoryManagementWebUI.FormAction = Request.Form["Operation"].ToString().ToUpper().Trim();
                                TransactionHistoryManagementWebUI.DoPostBack();
                                showMessage = TransactionHistoryManagementWebUI.ErrorMessage;
                            }

                            break;


                        case "CHARGEGROUP":
                            ChargeGroupManagementWebUI ChargeGroupManagementWebUI = new ChargeGroupManagementWebUI();
                            ChargeGroupManagementWebUI.MyPageName = "Default.cshtml";
                            ChargeGroupManagementWebUI.FormAction = Request.QueryString["FormAction"];
                            pageContent = ChargeGroupManagementWebUI.CreateWebForm(myCurrentFrom).ToString();
                            if (IsPost)
                            {

                                ChargeGroupManagementWebUI.FormAction = Request.Form["Operation"].ToString().ToUpper().Trim();
                                ChargeGroupManagementWebUI.DoPostBack();
                                showMessage = ChargeGroupManagementWebUI.ErrorMessage;
                            }

                            break;

                        case "LEDGER":
                            LedgerManagementWebUI LedgerManagementWebUI = new LedgerManagementWebUI();
                            LedgerManagementWebUI.MyPageName = "Default.cshtml";
                            LedgerManagementWebUI.FormAction = Request.QueryString["FormAction"];
                            pageContent = LedgerManagementWebUI.CreateWebForm(myCurrentFrom).ToString();
                            if (IsPost)
                            {

                                LedgerManagementWebUI.FormAction = Request.Form["Operation"].ToString().ToUpper().Trim();
                                LedgerManagementWebUI.DoPostBack();
                                showMessage = LedgerManagementWebUI.ErrorMessage;
                            }

                            break;

                        case "CREDITDEBITNOTEAPPROVAL":
                            CreditDebitNoteApprovalManagementWebUI obj1 = new CreditDebitNoteApprovalManagementWebUI();
                            obj1.MyPageName = "Default.cshtml";
                            obj1.FormAction = Request.QueryString["FormAction"];
                            pageContent = obj1.CreateWebForm(myCurrentFrom).ToString();
                            if (IsPost)
                            {

                                obj1.FormAction = Request.Form["Operation"].ToString().ToUpper().Trim();
                                obj1.DoPostBack();
                                showMessage = obj1.ErrorMessage;
                            }

                            break;

                        case "CASHREGISTER":
                            CashRegisterManagementWebUI cashRegisterManagementWebUI = new CashRegisterManagementWebUI();
                            cashRegisterManagementWebUI.MyPageName = "Default.cshtml";
                            cashRegisterManagementWebUI.FormAction = Request.QueryString["FormAction"];
                            pageContent = cashRegisterManagementWebUI.CreateWebForm(myCurrentFrom).ToString();
                            if (IsPost)
                            {

                                cashRegisterManagementWebUI.FormAction = Request.Form["Operation"].ToString().ToUpper().Trim();
                                cashRegisterManagementWebUI.DoPostBack();
                                showMessage = cashRegisterManagementWebUI.ErrorMessage;
                            }

                            break;
                        case "DIRECTPAYMENT":
                            DirectPaymentManagementWebUI DirectPaymentManagementWebUI = new DirectPaymentManagementWebUI();
                            DirectPaymentManagementWebUI.MyPageName = "Default.cshtml";
                            DirectPaymentManagementWebUI.FormAction = Request.QueryString["FormAction"];
                            pageContent = DirectPaymentManagementWebUI.CreateWebForm(myCurrentFrom).ToString();
                            if (IsPost)
                            {
                                DirectPaymentManagementWebUI.FormAction = Request.Form["Operation"].ToString().ToUpper().Trim();
                                DirectPaymentManagementWebUI.DoPostBack();
                                showMessage = DirectPaymentManagementWebUI.ErrorMessage;
                            }

                            break;
                        //Added By PreetiDeep 3rd March 2017
                        case "VERIFYPAYMENT":
                            VerifyPaymentManagementWebUI verifypaymentManagementWebUI = new VerifyPaymentManagementWebUI();
                            verifypaymentManagementWebUI.MyPageName = "Default.cshtml";
                            verifypaymentManagementWebUI.FormAction = Request.QueryString["FormAction"];
                            pageContent = verifypaymentManagementWebUI.CreateWebForm(myCurrentFrom).ToString();
                            if (IsPost)
                            {

                                verifypaymentManagementWebUI.FormAction = Request.Form["Operation"].ToString().ToUpper().Trim();
                                verifypaymentManagementWebUI.DoPostBack();
                                showMessage = verifypaymentManagementWebUI.ErrorMessage;
                            }

                            break;
                        //Added By PreetiDeep 6rd March 2017
                        case "APPROVEPAYMENT":
                            ApprovePaymentManagementWebUI approvepaymentManagementWebUI = new ApprovePaymentManagementWebUI();
                            approvepaymentManagementWebUI.MyPageName = "Default.cshtml";
                            approvepaymentManagementWebUI.FormAction = Request.QueryString["FormAction"];
                            pageContent = approvepaymentManagementWebUI.CreateWebForm(myCurrentFrom).ToString();
                            if (IsPost)
                            {

                                approvepaymentManagementWebUI.FormAction = Request.Form["Operation"].ToString().ToUpper().Trim();
                                approvepaymentManagementWebUI.DoPostBack();
                                showMessage = approvepaymentManagementWebUI.ErrorMessage;
                            }

                            break;
                        //Added By PreetiDeep 11rd March 2017
                        case "REVERSEPAYMENT":
                            ReversePaymentManagementWebUI reversepaymentManagementWebUI = new ReversePaymentManagementWebUI();
                            reversepaymentManagementWebUI.MyPageName = "Default.cshtml";
                            reversepaymentManagementWebUI.FormAction = Request.QueryString["FormAction"];
                            pageContent = reversepaymentManagementWebUI.CreateWebForm(myCurrentFrom).ToString();
                            if (IsPost)
                            {

                                reversepaymentManagementWebUI.FormAction = Request.Form["Operation"].ToString().ToUpper().Trim();
                                reversepaymentManagementWebUI.DoPostBack();
                                showMessage = reversepaymentManagementWebUI.ErrorMessage;
                            }

                            break;
                        case "INVOICEGROUP":
                            InvoiceGroupManagementWebUI InvoiceGroupManagementWebUI = new InvoiceGroupManagementWebUI();
                            InvoiceGroupManagementWebUI.MyPageName = "Default.cshtml";
                            InvoiceGroupManagementWebUI.FormAction = Request.QueryString["FormAction"];
                            pageContent = InvoiceGroupManagementWebUI.CreateWebForm(myCurrentFrom).ToString();
                            if (IsPost)
                            {
                                InvoiceGroupManagementWebUI.FormAction = Request.Form["Operation"].ToString().ToUpper().Trim();
                                InvoiceGroupManagementWebUI.DoPostBack();
                                showMessage = InvoiceGroupManagementWebUI.ErrorMessage;
                            }
                            break;

                        case "SUMMARYREPORT":
                            SummaryReportManagementWebUI summaryReportManagementWebUI = new SummaryReportManagementWebUI();
                            summaryReportManagementWebUI.MyPageName = "Default.cshtml";
                            summaryReportManagementWebUI.FormAction = Request.QueryString["FormAction"];
                            pageContent = summaryReportManagementWebUI.CreateWebForm(myCurrentFrom).ToString();
                            if (IsPost)
                            {

                                summaryReportManagementWebUI.FormAction = Request.Form["Operation"].ToString().ToUpper().Trim();
                                summaryReportManagementWebUI.DoPostBack();
                                showMessage = summaryReportManagementWebUI.ErrorMessage;
                            }

                            break;
                        case "CREDITLIMITREPORT":
                            CreditLimitReportManagementWebUI CreditLimitReportManagementWebUI = new CreditLimitReportManagementWebUI();
                            CreditLimitReportManagementWebUI.MyPageName = "Default.cshtml";
                            CreditLimitReportManagementWebUI.FormAction = Request.QueryString["FormAction"];
                            pageContent = CreditLimitReportManagementWebUI.CreateWebForm(myCurrentFrom).ToString();
                            if (IsPost)
                            {

                                CreditLimitReportManagementWebUI.FormAction = Request.Form["Operation"].ToString().ToUpper().Trim();
                                CreditLimitReportManagementWebUI.DoPostBack();
                                showMessage = CreditLimitReportManagementWebUI.ErrorMessage;
                            }

                            break;

                    }
                    break;

                //case "MAIL":
                //    switch (Request.QueryString["Apps"].ToUpper().ToString())
                //    {
                //        case "AIRMAIL":
                //            AirMailManagementWebUI AirMailManagementWebUI = new AirMailManagementWebUI();
                //            AirMailManagementWebUI.MyPageName = "Default.cshtml";

                //            if (!IsPost)
                //            {
                //                AirMailManagementWebUI.FormAction = Request.QueryString["FormAction"];
                //                pageContent = AirMailManagementWebUI.CreateWebForm(myCurrentFrom).ToString();
                //            }
                //            else
                //            {

                //                AirMailManagementWebUI.FormAction = Request.Form["Operation"].ToString().ToUpper().Trim();
                //                AirMailManagementWebUI.DoPostBack();
                //                showMessage = AirMailManagementWebUI.ErrorMessage;
                //            }
                //            break;


                //    }
                //    break;
                case "SECURITY":
                    switch (Request.QueryString["Apps"].ToUpper().ToString())
                    {
                        case "GROUPS":
                            GroupsManagementWebUI GroupsManagementWebUI = new GroupsManagementWebUI();
                            GroupsManagementWebUI.MyPageName = "Default.cshtml";
                            GroupsManagementWebUI.FormAction = Request.QueryString["FormAction"];
                            pageContent = GroupsManagementWebUI.CreateWebForm(myCurrentFrom).ToString();
                            if (IsPost)
                            {

                                GroupsManagementWebUI.FormAction = Request.Form["Operation"].ToString().ToUpper().Trim();
                                GroupsManagementWebUI.DoPostBack();
                                showMessage = GroupsManagementWebUI.ErrorMessage;
                            }
                            break;


                    }
                    break;

                case "TOOLS":
                    switch (Request.QueryString["Apps"].ToUpper().ToString())
                    {
                        case "SEAAIRTOOL":
                            SeaAirToolManagementWebUI seaAirToolManagementWebUI = new SeaAirToolManagementWebUI();
                            seaAirToolManagementWebUI.MyPageName = "Default.cshtml";
                            seaAirToolManagementWebUI.FormAction = Request.QueryString["FormAction"];
                            pageContent = seaAirToolManagementWebUI.CreateWebForm(myCurrentFrom).ToString();
                            if (IsPost)
                            {

                                seaAirToolManagementWebUI.FormAction = Request.Form["Operation"].ToString().ToUpper().Trim();
                                seaAirToolManagementWebUI.DoPostBack();
                                showMessage = seaAirToolManagementWebUI.ErrorMessage;
                            }

                            break;


                    }
                    break;

                case "ULD":
                    switch (Request.QueryString["Apps"].ToUpper().ToString())
                    {
                        case "ULDINVENTORY":
                            ULDInventoryManagementWebUI ULDInventoryManagementWebUI = new ULDInventoryManagementWebUI();
                            ULDInventoryManagementWebUI.MyPageName = "Default.cshtml";
                            ULDInventoryManagementWebUI.FormAction = Request.QueryString["FormAction"];
                            pageContent = ULDInventoryManagementWebUI.CreateWebForm(myCurrentFrom).ToString();
                            if (IsPost)
                            {
                                ULDInventoryManagementWebUI.FormAction = Request.Form["Operation"].ToString().ToUpper().Trim();
                                ULDInventoryManagementWebUI.DoPostBack();
                                showMessage = ULDInventoryManagementWebUI.ErrorMessage;
                            }
                            break;
                        /****************************Add by Pankaj Kumar Ishwar on 14-08-2017**********************/
                        case "ULDCHARGE":
                            ULDChargeManagementWebUI ULDChargeManagementWebUI = new ULDChargeManagementWebUI();
                            ULDChargeManagementWebUI.MyPageName = "Default.cshtml";
                            ULDChargeManagementWebUI.FormAction = Request.QueryString["FormAction"];
                            pageContent = ULDChargeManagementWebUI.CreateWebForm(myCurrentFrom).ToString();
                            if (IsPost)
                            {
                                ULDChargeManagementWebUI.FormAction = Request.Form["Operation"].ToString().ToUpper().Trim();
                                ULDChargeManagementWebUI.DoPostBack();
                                showMessage = ULDChargeManagementWebUI.ErrorMessage;
                            }
                            break;
                        case "ULDSLACALENDAR":
                            ULDSLACalendarManagementWebUI ULDSLACalendarManagementWebUI = new ULDSLACalendarManagementWebUI();
                            ULDSLACalendarManagementWebUI.MyPageName = "Default.cshtml";
                            ULDSLACalendarManagementWebUI.FormAction = Request.QueryString["FormAction"];
                            pageContent = ULDSLACalendarManagementWebUI.CreateWebForm(myCurrentFrom).ToString();
                            if (IsPost)
                            {
                                ULDSLACalendarManagementWebUI.FormAction = Request.Form["Operation"].ToString().ToUpper().Trim();
                                ULDSLACalendarManagementWebUI.DoPostBack();
                                showMessage = ULDSLACalendarManagementWebUI.ErrorMessage;
                            }
                            break;
                        /******************************************************************************************/
                        case "ULDTYPE":
                            ULDTypeManagementWebUI ULDTypeManagementWebUI = new ULDTypeManagementWebUI();
                            ULDTypeManagementWebUI.MyPageName = "Default.cshtml";
                            ULDTypeManagementWebUI.FormAction = Request.QueryString["FormAction"];
                            pageContent = ULDTypeManagementWebUI.CreateWebForm(myCurrentFrom).ToString();
                            if (IsPost)
                            {
                                ULDTypeManagementWebUI.FormAction = Request.Form["Operation"].ToString().ToUpper().Trim();
                                ULDTypeManagementWebUI.DoPostBack();
                                showMessage = ULDTypeManagementWebUI.ErrorMessage;
                            }
                            break;
                        case "ULDSTOCK":
                            ULDStockManagementWebUI ULDStockManagementWebUI = new ULDStockManagementWebUI();
                            ULDStockManagementWebUI.MyPageName = "Default.cshtml";
                            ULDStockManagementWebUI.FormAction = Request.QueryString["FormAction"];
                            pageContent = ULDStockManagementWebUI.CreateWebForm(myCurrentFrom).ToString();
                            if (IsPost)
                            {
                                ULDStockManagementWebUI.FormAction = Request.Form["Operation"].ToString().ToUpper().Trim();
                                ULDStockManagementWebUI.DoPostBack();
                                showMessage = ULDStockManagementWebUI.ErrorMessage;
                            }
                            break;
                        //ADDED BY SHIVALI ON 27/04/2018
                        case "ULDSTOCKNONINVENTORY":
                            ULDStockNonInventoryManagementWebUI ULDStockNonInventoryWebManagementUI = new ULDStockNonInventoryManagementWebUI();
                            ULDStockNonInventoryWebManagementUI.MyPageName = "Default.cshtml";
                            ULDStockNonInventoryWebManagementUI.FormAction = Request.QueryString["FormAction"];
                            pageContent = ULDStockNonInventoryWebManagementUI.CreateWebForm(myCurrentFrom).ToString();
                            if (IsPost)
                            {
                                ULDStockNonInventoryWebManagementUI.FormAction = Request.Form["Operation"].ToString().ToUpper().Trim();
                                ULDStockNonInventoryWebManagementUI.DoPostBack();
                                showMessage = ULDStockNonInventoryWebManagementUI.ErrorMessage;
                            }
                            break;
                        case "ULDTRACKING":
                            ULDTrackingManagementWebUI ULDTrackingManagementWebUI = new ULDTrackingManagementWebUI();
                            ULDTrackingManagementWebUI.MyPageName = "Default.cshtml";
                            ULDTrackingManagementWebUI.FormAction = Request.QueryString["FormAction"];
                            pageContent = ULDTrackingManagementWebUI.CreateWebForm(myCurrentFrom).ToString();
                            if (IsPost)
                            {
                                ULDTrackingManagementWebUI.FormAction = Request.Form["Operation"].ToString().ToUpper().Trim();
                                ULDTrackingManagementWebUI.DoPostBack();
                                showMessage = ULDTrackingManagementWebUI.ErrorMessage;
                            }
                            break;
                        case "CITYWISEULDALLOCATION":
                            CityWiseULDAllocationManagementWebUI CityWiseULDAllocationManagementWebUI = new CityWiseULDAllocationManagementWebUI();
                            CityWiseULDAllocationManagementWebUI.MyPageName = "Default.cshtml";
                            CityWiseULDAllocationManagementWebUI.FormAction = Request.QueryString["FormAction"];
                            pageContent = CityWiseULDAllocationManagementWebUI.CreateWebForm(myCurrentFrom).ToString();
                            if (IsPost)
                            {
                                CityWiseULDAllocationManagementWebUI.FormAction = Request.Form["Operation"].ToString().ToUpper().Trim();
                                CityWiseULDAllocationManagementWebUI.DoPostBack();
                                showMessage = CityWiseULDAllocationManagementWebUI.ErrorMessage;
                            }
                            break;

                        case "ULDINCOMPATIBILITY":
                            ULDInCompatibilityManagementWebUI ULDInCompatibilityManagementWebUI = new ULDInCompatibilityManagementWebUI();
                            ULDInCompatibilityManagementWebUI.MyPageName = "Default.cshtml";
                            ULDInCompatibilityManagementWebUI.FormAction = Request.QueryString["FormAction"];
                            pageContent = ULDInCompatibilityManagementWebUI.CreateWebForm(myCurrentFrom).ToString();
                            if (IsPost)
                            {
                                ULDInCompatibilityManagementWebUI.FormAction = Request.Form["Operation"].ToString().ToUpper().Trim();
                                ULDInCompatibilityManagementWebUI.DoPostBack();
                                showMessage = ULDInCompatibilityManagementWebUI.ErrorMessage;
                            }
                            break;
                        case "ULDSTACK":
                            UldStackManagementWebUI uldStackManagementWebUI = new UldStackManagementWebUI();
                            uldStackManagementWebUI.MyPageName = "Default.cshtml";
                            uldStackManagementWebUI.FormAction = Request.QueryString["FormAction"];
                            pageContent = uldStackManagementWebUI.CreateWebForm(myCurrentFrom).ToString();
                            if (IsPost)
                            {
                                uldStackManagementWebUI.FormAction = Request.Form["Operation"].ToString().ToUpper().Trim();
                                uldStackManagementWebUI.DoPostBack();
                                showMessage = uldStackManagementWebUI.ErrorMessage;
                            }

                            break;

                        case "ULDREPAIRABLEITEMS":
                            ULDRepairableItemsManagementWebUI ULDRepairableItemsManagementWebUI = new ULDRepairableItemsManagementWebUI();
                            ULDRepairableItemsManagementWebUI.MyPageName = "Default.cshtml";
                            ULDRepairableItemsManagementWebUI.FormAction = Request.QueryString["FormAction"];
                            pageContent = ULDRepairableItemsManagementWebUI.CreateWebForm(myCurrentFrom).ToString();
                            if (IsPost)
                            {
                                ULDRepairableItemsManagementWebUI.FormAction = Request.Form["Operation"].ToString().ToUpper().Trim();
                                ULDRepairableItemsManagementWebUI.DoPostBack();
                                showMessage = ULDRepairableItemsManagementWebUI.ErrorMessage;
                            }
                            break;
                        case "ULDVENDORPRICELIST":
                            ULDVendorPriceListManagementWebUI VendorPriceList = new ULDVendorPriceListManagementWebUI();
                            VendorPriceList.MyPageName = "Default.cshtml";
                            VendorPriceList.FormAction = Request.QueryString["FormAction"];
                            pageContent = VendorPriceList.CreateWebForm(myCurrentFrom).ToString();
                            if (IsPost)
                            {
                                VendorPriceList.FormAction = Request.Form["Operation"].ToString().ToUpper().Trim();
                                VendorPriceList.DoPostBack();
                                showMessage = VendorPriceList.ErrorMessage;
                            }
                            break;
                        case "ULDINVOICE":
                            ULDInvoiceManagementWebUI ULDInvoiceManagementWebUI = new ULDInvoiceManagementWebUI();
                            ULDInvoiceManagementWebUI.MyPageName = "Default.cshtml";
                            ULDInvoiceManagementWebUI.FormAction = Request.QueryString["FormAction"];
                            pageContent = ULDInvoiceManagementWebUI.CreateWebForm(myCurrentFrom).ToString();
                            if (IsPost)
                            {
                                ULDInvoiceManagementWebUI.FormAction = Request.Form["Operation"].ToString().ToUpper().Trim();
                                ULDInvoiceManagementWebUI.DoPostBack();
                                showMessage = ULDInvoiceManagementWebUI.ErrorMessage;
                            }
                            break;

                        case "REPAIRSLAREPORT":
                            ULDRepairSLAReportManagementWebUI ULDRepairSLAReportManagementUI = new ULDRepairSLAReportManagementWebUI();
                            ULDRepairSLAReportManagementUI.MyPageName = "Default.cshtml";
                            ULDRepairSLAReportManagementUI.FormAction = Request.QueryString["FormAction"];
                            pageContent = ULDRepairSLAReportManagementUI.CreateWebForm(myCurrentFrom).ToString();
                            if (IsPost)
                            {
                                ULDRepairSLAReportManagementUI.FormAction = Request.Form["Operation"].ToString().ToUpper().Trim();
                                ULDRepairSLAReportManagementUI.DoPostBack();
                                showMessage = ULDRepairSLAReportManagementUI.ErrorMessage;
                            }
                            break;


                        case "ULDSUPPORTPROCESSED":
                            ULDSupportProcessedManagementWebUI ULDSupportProcessedManagementWebUI = new ULDSupportProcessedManagementWebUI();
                            ULDSupportProcessedManagementWebUI.MyPageName = "Default.cshtml";
                            ULDSupportProcessedManagementWebUI.FormAction = Request.QueryString["FormAction"];
                            pageContent = ULDSupportProcessedManagementWebUI.CreateWebForm(myCurrentFrom).ToString();
                            //if (IsPost)
                            //{
                            //    ULDInvoiceManagementWebUI.FormAction = Request.Form["Operation"].ToString().ToUpper().Trim();
                            //    ULDInvoiceManagementWebUI.DoPostBack();
                            //    showMessage = ULDInvoiceManagementWebUI.ErrorMessage;
                            //}
                            break;
                        case "DEMURRAGEFREEPERIOD":
                            DemurrageFreePeriodManagementWebUI demurrageFreePeriodManagementWebUI = new DemurrageFreePeriodManagementWebUI();
                            demurrageFreePeriodManagementWebUI.MyPageName = "Default.cshtml";
                            demurrageFreePeriodManagementWebUI.FormAction = Request.QueryString["FormAction"];
                            pageContent = demurrageFreePeriodManagementWebUI.CreateWebForm(myCurrentFrom).ToString();
                            if (IsPost)
                            {
                                demurrageFreePeriodManagementWebUI.FormAction = Request.Form["Operation"].ToString().ToUpper().Trim();
                                demurrageFreePeriodManagementWebUI.DoPostBack();
                                showMessage = demurrageFreePeriodManagementWebUI.ErrorMessage;
                            }

                            break;
                        case "ULDBAGGAGETYPE":
                            ULDBaggageTypeManagementWebUI ULDBaggageTypeManagementWebUI = new ULDBaggageTypeManagementWebUI();
                            ULDBaggageTypeManagementWebUI.MyPageName = "Default.cshtml";
                            ULDBaggageTypeManagementWebUI.FormAction = Request.QueryString["FormAction"];
                            pageContent = ULDBaggageTypeManagementWebUI.CreateWebForm(myCurrentFrom).ToString();
                            if (IsPost)
                            {
                                ULDBaggageTypeManagementWebUI.FormAction = Request.Form["Operation"].ToString().ToUpper().Trim();
                                ULDBaggageTypeManagementWebUI.DoPostBack();
                                showMessage = ULDBaggageTypeManagementWebUI.ErrorMessage;
                            }
                            break;

                        case "ULDSLA":
                            ULDSLAManagementWebUI ULDSLAManagementWebUI = new ULDSLAManagementWebUI();
                            ULDSLAManagementWebUI.MyPageName = "Default.cshtml";
                            ULDSLAManagementWebUI.FormAction = Request.QueryString["FormAction"];
                            pageContent = ULDSLAManagementWebUI.CreateWebForm(myCurrentFrom).ToString();
                            if (IsPost)
                            {
                                ULDSLAManagementWebUI.FormAction = Request.Form["Operation"].ToString().ToUpper().Trim();
                                ULDSLAManagementWebUI.DoPostBack();
                                showMessage = ULDSLAManagementWebUI.ErrorMessage;
                            }
                            break;
                        case "MAINTENANCETYPE":
                            MaintenanceTypeManagementWebUI MaintenanceTypeManagementWebUI = new MaintenanceTypeManagementWebUI();
                            MaintenanceTypeManagementWebUI.MyPageName = "Default.cshtml";
                            MaintenanceTypeManagementWebUI.FormAction = Request.QueryString["FormAction"];
                            pageContent = MaintenanceTypeManagementWebUI.CreateWebForm(myCurrentFrom).ToString();
                            if (IsPost)
                            {
                                MaintenanceTypeManagementWebUI.FormAction = Request.Form["Operation"].ToString().ToUpper().Trim();
                                MaintenanceTypeManagementWebUI.DoPostBack();
                                showMessage = MaintenanceTypeManagementWebUI.ErrorMessage;
                            }
                            break;
                        case "ULDALLOCATIONREPORT":
                            ULDAllocationReportManagementWebUI ULDAllocationReportManagementWebUI = new ULDAllocationReportManagementWebUI();
                            ULDAllocationReportManagementWebUI.MyPageName = "Default.cshtml";
                            ULDAllocationReportManagementWebUI.FormAction = Request.QueryString["FormAction"];
                            pageContent = ULDAllocationReportManagementWebUI.CreateWebForm(myCurrentFrom).ToString();
                            if (IsPost)
                            {
                                ULDAllocationReportManagementWebUI.FormAction = Request.Form["Operation"].ToString().ToUpper().Trim();
                                ULDAllocationReportManagementWebUI.DoPostBack();
                                showMessage = ULDAllocationReportManagementWebUI.ErrorMessage;
                            }
                            break;
                        case "ULDSTOCKREPORTDETAILS":
                            ULDStockReportDetailsManagementWebUI ULDStockReportDetailsManagementWebUI = new ULDStockReportDetailsManagementWebUI();
                            ULDStockReportDetailsManagementWebUI.MyPageName = "Default.cshtml";
                            ULDStockReportDetailsManagementWebUI.FormAction = Request.QueryString["FormAction"];
                            pageContent = ULDStockReportDetailsManagementWebUI.CreateWebForm(myCurrentFrom).ToString();
                            if (IsPost)
                            {
                                ULDStockReportDetailsManagementWebUI.FormAction = Request.Form["Operation"].ToString().ToUpper().Trim();
                                ULDStockReportDetailsManagementWebUI.DoPostBack();
                                showMessage = ULDStockReportDetailsManagementWebUI.ErrorMessage;
                            }
                            break;
                        case "SCMDISCREPANCY":
                            SCMDiscrepancyManagementWebUI SCMDiscrepancyManagementWebUI = new SCMDiscrepancyManagementWebUI();
                            SCMDiscrepancyManagementWebUI.MyPageName = "Default.cshtml";
                            SCMDiscrepancyManagementWebUI.FormAction = Request.QueryString["FormAction"];
                            pageContent = SCMDiscrepancyManagementWebUI.CreateWebForm(myCurrentFrom).ToString();
                            if (IsPost)
                            {
                                SCMDiscrepancyManagementWebUI.FormAction = Request.Form["Operation"].ToString().ToUpper().Trim();
                                SCMDiscrepancyManagementWebUI.DoPostBack();
                                showMessage = SCMDiscrepancyManagementWebUI.ErrorMessage;
                            }
                            break;
                        case "ULDSTATISTIC":
                            ULDStatisticReportsManagementWebUI ULDStatisticReportsManagementWebUI = new ULDStatisticReportsManagementWebUI();
                            ULDStatisticReportsManagementWebUI.MyPageName = "Default.cshtml";
                            ULDStatisticReportsManagementWebUI.FormAction = Request.QueryString["FormAction"];
                            pageContent = ULDStatisticReportsManagementWebUI.CreateWebForm(myCurrentFrom).ToString();
                            if (IsPost)
                            {
                                ULDStatisticReportsManagementWebUI.FormAction = Request.Form["Operation"].ToString().ToUpper().Trim();
                                ULDStatisticReportsManagementWebUI.DoPostBack();
                                showMessage = ULDStatisticReportsManagementWebUI.ErrorMessage;
                            }
                            break;
                    }
                    break;

                case "SPACECONTROL":
                    switch (Request.QueryString["Apps"].ToString().ToUpper())
                    {
                        case "ALLOCATION":
                            AllocationManagementWebUI AllocationManagementWebUI = new AllocationManagementWebUI();
                            AllocationManagementWebUI.MyPageName = "Default.cshtml";
                            AllocationManagementWebUI.FormAction = Request.QueryString["FormAction"];
                            pageContent = AllocationManagementWebUI.CreateWebForm(myCurrentFrom).ToString();
                            if (IsPost)
                            {
                                AllocationManagementWebUI.FormAction = Request.Form["Operation"].ToString().Trim();
                                AllocationManagementWebUI.DoPostBack();
                                showMessage = AllocationManagementWebUI.ErrorMessage;
                            }
                            break;
                        case "ALLOCATIONACCOUNT":
                            AllocationAccountManagementWebUI AllocationAccountManagementWebUI = new AllocationAccountManagementWebUI();
                            AllocationAccountManagementWebUI.MyPageName = "Default.cshtml";
                            AllocationAccountManagementWebUI.FormAction = Request.QueryString["FormAction"];
                            pageContent = AllocationAccountManagementWebUI.CreateWebForm(myCurrentFrom).ToString();
                            if (IsPost)
                            {
                                AllocationAccountManagementWebUI.FormAction = Request.Form["Operation"].ToString().Trim();
                                AllocationAccountManagementWebUI.DoPostBack();
                                showMessage = AllocationAccountManagementWebUI.ErrorMessage;
                            }
                            break;

                        case "AWBQUEUEMANAGEMENT":
                            AWBQueueManagementWebUI awbQueueManagementWebUI = new AWBQueueManagementWebUI();
                            awbQueueManagementWebUI.MyPageName = "Default.cshtml";
                            awbQueueManagementWebUI.FormAction = Request.QueryString["FormAction"];
                            pageContent = awbQueueManagementWebUI.CreateWebForm(myCurrentFrom).ToString();
                            if (IsPost)
                            {
                                awbQueueManagementWebUI.FormAction = Request.Form["Operation"].ToString().Trim();
                                awbQueueManagementWebUI.DoPostBack();
                                showMessage = awbQueueManagementWebUI.ErrorMessage;
                            }
                            break;
                    }
                    break;
                case "ROSTER":
                    switch (Request.QueryString["Apps"].ToUpper().ToString())
                    {
                        case "DESIGNATIONMASTER":
                            DesignationMasterManagementWebUI designationMasterManagementWebUI = new DesignationMasterManagementWebUI();
                            designationMasterManagementWebUI.MyPageName = "Default.cshtml";
                            designationMasterManagementWebUI.FormAction = Request.QueryString["FormAction"];
                            pageContent = designationMasterManagementWebUI.CreateWebForm(myCurrentFrom).ToString();
                            if (IsPost)
                            {
                                designationMasterManagementWebUI.FormAction = Request.Form["Operation"].ToString().ToUpper().Trim();
                                designationMasterManagementWebUI.DoPostBack();
                                showMessage = designationMasterManagementWebUI.ErrorMessage;
                            }
                            break;
                        case "SKILLMASTER":
                            SkillMasterManagementWebUI skillMasterManagementWebUI = new SkillMasterManagementWebUI();
                            skillMasterManagementWebUI.MyPageName = "Default.cshtml";
                            skillMasterManagementWebUI.FormAction = Request.QueryString["FormAction"];
                            pageContent = skillMasterManagementWebUI.CreateWebForm(myCurrentFrom).ToString();
                            if (IsPost)
                            {
                                skillMasterManagementWebUI.FormAction = Request.Form["Operation"].ToString().ToUpper().Trim();
                                skillMasterManagementWebUI.DoPostBack();
                                showMessage = skillMasterManagementWebUI.ErrorMessage;
                            }
                            break;
                        case "DUTYAREA":
                            DutyAreaManagementWebUI dutyAreaManagementWebUI = new DutyAreaManagementWebUI();
                            dutyAreaManagementWebUI.MyPageName = "Default.cshtml";
                            dutyAreaManagementWebUI.FormAction = Request.QueryString["FormAction"];
                            pageContent = dutyAreaManagementWebUI.CreateWebForm(myCurrentFrom).ToString();
                            if (IsPost)
                            {
                                dutyAreaManagementWebUI.FormAction = Request.Form["Operation"].ToString().ToUpper().Trim();
                                dutyAreaManagementWebUI.DoPostBack();
                                showMessage = dutyAreaManagementWebUI.ErrorMessage;
                            }
                            break;
                        case "ROSTERTEAMID":
                            RosterTeamIDManagementWebUI rosterTeamIDManagementWebUI = new RosterTeamIDManagementWebUI();
                            rosterTeamIDManagementWebUI.MyPageName = "Default.cshtml";
                            rosterTeamIDManagementWebUI.FormAction = Request.QueryString["FormAction"];
                            pageContent = rosterTeamIDManagementWebUI.CreateWebForm(myCurrentFrom).ToString();
                            if (IsPost)
                            {
                                rosterTeamIDManagementWebUI.FormAction = Request.Form["Operation"].ToString().ToUpper().Trim();
                                rosterTeamIDManagementWebUI.DoPostBack();
                                showMessage = rosterTeamIDManagementWebUI.ErrorMessage;
                            }
                            break;
                        case "SHIFTMASTER":
                            ShiftMasterManagementWebUI shiftMasterManagementWebUI = new ShiftMasterManagementWebUI();
                            shiftMasterManagementWebUI.MyPageName = "Default.cshtml";
                            shiftMasterManagementWebUI.FormAction = Request.QueryString["FormAction"];
                            pageContent = shiftMasterManagementWebUI.CreateWebForm(myCurrentFrom).ToString();
                            if (IsPost)
                            {
                                shiftMasterManagementWebUI.FormAction = Request.Form["Operation"].ToString().ToUpper().Trim();
                                shiftMasterManagementWebUI.DoPostBack();
                                showMessage = shiftMasterManagementWebUI.ErrorMessage;
                            }
                            break;
                        case "ROSTEREMPLOYEE":
                            RosterEmployeeManagementWebUI objManagementWebUI = new RosterEmployeeManagementWebUI();
                            objManagementWebUI.MyPageName = "Default.cshtml";
                            objManagementWebUI.FormAction = Request.QueryString["FormAction"];
                            pageContent = objManagementWebUI.CreateWebForm(myCurrentFrom).ToString();
                            if (IsPost)
                            {
                                objManagementWebUI.FormAction = Request.Form["Operation"].ToString().ToUpper().Trim();
                                objManagementWebUI.DoPostBack();
                                showMessage = objManagementWebUI.ErrorMessage;
                            }
                            break;
                        case "MANAGETEAM":
                            ManageTeamManagementWebUI objManageTeamManagementWebUI = new ManageTeamManagementWebUI();
                            objManageTeamManagementWebUI.MyPageName = "Default.cshtml";
                            objManageTeamManagementWebUI.FormAction = Request.QueryString["FormAction"];
                            pageContent = objManageTeamManagementWebUI.CreateWebForm(myCurrentFrom).ToString();
                            if (IsPost)
                            {
                                objManageTeamManagementWebUI.FormAction = Request.Form["Operation"].ToString().ToUpper().Trim();
                                objManageTeamManagementWebUI.DoPostBack();
                                showMessage = objManageTeamManagementWebUI.ErrorMessage;
                            }
                            break;
                        case "MANAGEROSTER":
                            ManageRosterManagementWebUI objManageRosterManagementWebUI = new ManageRosterManagementWebUI();
                            objManageRosterManagementWebUI.MyPageName = "Default.cshtml";
                            objManageRosterManagementWebUI.FormAction = Request.QueryString["FormAction"];
                            pageContent = objManageRosterManagementWebUI.CreateWebForm(myCurrentFrom).ToString();
                            if (IsPost)
                            {
                                objManageRosterManagementWebUI.FormAction = Request.Form["Operation"].ToString().ToUpper().Trim();
                                objManageRosterManagementWebUI.DoPostBack();
                                showMessage = objManageRosterManagementWebUI.ErrorMessage;
                            }
                            break;
                        case "RESOURCEALLOCATION":
                            RosterResourceAllocationManagementWebUI objRosterResourceAllocationManagementWebUI = new RosterResourceAllocationManagementWebUI();
                            objRosterResourceAllocationManagementWebUI.MyPageName = "Default.cshtml";
                            objRosterResourceAllocationManagementWebUI.FormAction = Request.QueryString["FormAction"];
                            pageContent = objRosterResourceAllocationManagementWebUI.CreateWebForm(myCurrentFrom).ToString();
                            if (IsPost)
                            {
                                objRosterResourceAllocationManagementWebUI.FormAction = Request.Form["Operation"].ToString().ToUpper().Trim();
                                objRosterResourceAllocationManagementWebUI.DoPostBack();
                                showMessage = objRosterResourceAllocationManagementWebUI.ErrorMessage;
                            }
                            break;


                    }

                    break;

                case "WAREHOUSE":
                    switch (Request.QueryString["Apps"].ToUpper().ToString())
                    {
                        case "LOCATIONSUBTYPE":
                            LocationSubTypeManagementWebUI locationsubtypeManagementWebUI = new LocationSubTypeManagementWebUI();
                            locationsubtypeManagementWebUI.MyPageName = "Default.cshtml";
                            locationsubtypeManagementWebUI.FormAction = Request.QueryString["FormAction"];
                            pageContent = locationsubtypeManagementWebUI.CreateWebForm(myCurrentFrom).ToString();
                            if (IsPost)
                            {
                                locationsubtypeManagementWebUI.FormAction = Request.Form["Operation"].ToString().ToUpper().Trim();
                                locationsubtypeManagementWebUI.DoPostBack();
                                showMessage = locationsubtypeManagementWebUI.ErrorMessage;
                            }
                            break;
                        case "AREA":
                            AreaManagementWebUI areaManagementWebUI = new AreaManagementWebUI();
                            areaManagementWebUI.MyPageName = "Default.cshtml";
                            areaManagementWebUI.FormAction = Request.QueryString["FormAction"];
                            pageContent = areaManagementWebUI.CreateWebForm(myCurrentFrom).ToString();
                            if (IsPost)
                            {
                                areaManagementWebUI.FormAction = Request.Form["Operation"].ToString().ToUpper().Trim();
                                areaManagementWebUI.DoPostBack();
                                showMessage = areaManagementWebUI.ErrorMessage;
                            }
                            break;


                        case "WAREHOUSELOCATION":
                            WarehouseLocationManagementWebUI warehouselocationManagementWebUI = new WarehouseLocationManagementWebUI();
                            warehouselocationManagementWebUI.MyPageName = "Default.cshtml";
                            warehouselocationManagementWebUI.FormAction = Request.QueryString["FormAction"];
                            pageContent = warehouselocationManagementWebUI.CreateWebForm(myCurrentFrom).ToString();
                            if (IsPost)
                            {
                                warehouselocationManagementWebUI.FormAction = Request.Form["Operation"].ToString().ToUpper().Trim();
                                warehouselocationManagementWebUI.DoPostBack();
                                showMessage = warehouselocationManagementWebUI.ErrorMessage;
                            }
                            break;
                        case "LOCATIONSEARCH":
                            LocationSearchManagementWebUI locationsearchManagementWebUI = new LocationSearchManagementWebUI();
                            locationsearchManagementWebUI.MyPageName = "Default.cshtml";
                            locationsearchManagementWebUI.FormAction = Request.QueryString["FormAction"];
                            pageContent = locationsearchManagementWebUI.CreateWebForm(myCurrentFrom).ToString();
                            if (IsPost)
                            {
                                locationsearchManagementWebUI.FormAction = Request.Form["Operation"].ToString().ToUpper().Trim();
                                locationsearchManagementWebUI.DoPostBack();
                                showMessage = locationsearchManagementWebUI.ErrorMessage;
                            }
                            break;

                        case "WAREHOUSESETUP":
                            WarehouseSetupManagementWebUI warehouseSetupManagementWebUI = new WarehouseSetupManagementWebUI();
                            warehouseSetupManagementWebUI.MyPageName = "Default.cshtml";
                            warehouseSetupManagementWebUI.FormAction = Request.QueryString["FormAction"];
                            pageContent = warehouseSetupManagementWebUI.CreateWebForm(myCurrentFrom).ToString();
                            if (IsPost)
                            {
                                warehouseSetupManagementWebUI.FormAction = Request.Form["Operation"].ToString().ToUpper().Trim();
                                warehouseSetupManagementWebUI.DoPostBack();
                                showMessage = warehouseSetupManagementWebUI.ErrorMessage;
                            }
                            break;
                        case "LOCATIONTYPE":
                            LocationTypeManagementWebUI locationTypeManagementWebUI = new LocationTypeManagementWebUI();
                            locationTypeManagementWebUI.MyPageName = "Default.cshtml";
                            locationTypeManagementWebUI.FormAction = Request.QueryString["FormAction"];
                            pageContent = locationTypeManagementWebUI.CreateWebForm(myCurrentFrom).ToString();
                            if (IsPost)
                            {
                                locationTypeManagementWebUI.FormAction = Request.Form["Operation"].ToString().ToUpper().Trim();
                                locationTypeManagementWebUI.DoPostBack();
                                showMessage = locationTypeManagementWebUI.ErrorMessage;
                            }
                            break;
                    }
                    break;


                case "PERMISSIONS":
                    switch (Request.QueryString["Apps"].ToUpper().ToString())
                    {
                        case "PROCESSDEPENDENCY":
                            ProcessDependencyManagementWebUI processDependencyManagementWebUI = new ProcessDependencyManagementWebUI();
                            processDependencyManagementWebUI.MyPageName = "Default.cshtml";
                            processDependencyManagementWebUI.FormAction = Request.QueryString["FormAction"];
                            pageContent = processDependencyManagementWebUI.CreateWebForm(myCurrentFrom).ToString();
                            if (IsPost)
                            {
                                processDependencyManagementWebUI.FormAction = Request.Form["Operation"].ToString().ToUpper().Trim();
                                processDependencyManagementWebUI.DoPostBack();
                                showMessage = processDependencyManagementWebUI.ErrorMessage;
                            }
                            break;

                        case "USERS":
                            UsersManagementWebUI userManagementWebUI = new UsersManagementWebUI();
                            userManagementWebUI.MyPageName = "Default.cshtml";
                            userManagementWebUI.FormAction = Request.QueryString["FormAction"];
                            pageContent = userManagementWebUI.CreateWebForm(myCurrentFrom).ToString();
                            if (IsPost)
                            {
                                userManagementWebUI.FormAction = Request.Form["Operation"].ToString().ToUpper().Trim();
                                userManagementWebUI.DoPostBack();
                                showMessage = userManagementWebUI.ErrorMessage;
                            }
                            break;
                        case "USERSTATUS":
                            UserStatusManagementWebUI UserStatusManagementWebUI = new UserStatusManagementWebUI();
                            UserStatusManagementWebUI.MyPageName = "Default.cshtml";
                            UserStatusManagementWebUI.FormAction = Request.QueryString["FormAction"];
                            pageContent = UserStatusManagementWebUI.CreateWebForm(myCurrentFrom).ToString();
                            if (IsPost)
                            {
                                UserStatusManagementWebUI.FormAction = Request.Form["Operation"].ToString().ToUpper().Trim();
                                UserStatusManagementWebUI.DoPostBack();
                                showMessage = UserStatusManagementWebUI.ErrorMessage;
                            }
                            break;

                        case "HOLDSHPT":
                            HoldShptManagementWebUI HoldShptManagementWebUI = new HoldShptManagementWebUI();
                            //UserStatusManagementWebUI UserStatusManagementWebUI = new UserStatusManagementWebUI();
                            HoldShptManagementWebUI.MyPageName = "Default.cshtml";
                            HoldShptManagementWebUI.FormAction = Request.QueryString["FormAction"];
                            pageContent = HoldShptManagementWebUI.CreateWebForm(myCurrentFrom).ToString();
                            if (IsPost)
                            {
                                HoldShptManagementWebUI.FormAction = Request.Form["Operation"].ToString().ToUpper().Trim();
                                HoldShptManagementWebUI.DoPostBack();
                                showMessage = HoldShptManagementWebUI.ErrorMessage;
                            }
                            break;
                        case "SYSTEMSETTINGS":
                            SystemSettingsManagementWebUI systemSettingManagementWebUI = new SystemSettingsManagementWebUI();
                            systemSettingManagementWebUI.MyPageName = "Default.cshtml";
                            systemSettingManagementWebUI.FormAction = Request.QueryString["FormAction"];
                            pageContent = systemSettingManagementWebUI.CreateWebForm(myCurrentFrom).ToString();
                            if (IsPost)
                            {
                                systemSettingManagementWebUI.FormAction = Request.Form["Operation"].ToString().ToUpper().Trim();
                                systemSettingManagementWebUI.DoPostBack();
                                showMessage = systemSettingManagementWebUI.ErrorMessage;
                            }
                            break;

                        case "ALERTEVENTS":
                            AlertEventsManagementWebUI alertEventsManagementWebUI = new AlertEventsManagementWebUI();
                            alertEventsManagementWebUI.MyPageName = "Default.cshtml";
                            alertEventsManagementWebUI.FormAction = Request.QueryString["FormAction"];
                            pageContent = alertEventsManagementWebUI.CreateWebForm(myCurrentFrom).ToString();
                            if (IsPost)
                            {
                                alertEventsManagementWebUI.FormAction = Request.Form["Operation"].ToString().ToUpper().Trim();
                                alertEventsManagementWebUI.DoPostBack();
                                showMessage = alertEventsManagementWebUI.ErrorMessage;
                            }
                            break;
                        case "CHANGEPASSWORD":
                            ChangePasswordManagementWebUI ChangePasswordManagementWebUI = new ChangePasswordManagementWebUI();
                            ChangePasswordManagementWebUI.MyPageName = "Default.cshtml";
                            ChangePasswordManagementWebUI.FormAction = Request.QueryString["FormAction"];
                            pageContent = ChangePasswordManagementWebUI.CreateWebForm(myCurrentFrom).ToString();
                            if (IsPost)
                            {
                                ChangePasswordManagementWebUI.FormAction = Request.Form["Operation"].ToString().ToUpper().Trim();
                                ChangePasswordManagementWebUI.DoPostBack();
                                showMessage = ChangePasswordManagementWebUI.ErrorMessage;
                            }
                            break;
                        case "ALLOTMENT":
                            AllotmentManagementWebUI allotmentManagementWebUI = new AllotmentManagementWebUI();
                            allotmentManagementWebUI.MyPageName = "Default.cshtml";
                            allotmentManagementWebUI.FormAction = Request.QueryString["FormAction"];
                            pageContent = allotmentManagementWebUI.CreateWebForm(myCurrentFrom).ToString();
                            if (IsPost)
                            {
                                allotmentManagementWebUI.FormAction = Request.Form["Operation"].ToString().ToUpper().Trim();
                                allotmentManagementWebUI.DoPostBack();
                                showMessage = allotmentManagementWebUI.ErrorMessage;
                            }
                            break;
                        case "WINDOWSERVICESREPORT":
                            WindowServicesReportManagementWebUI WindowServicesReportManagementWebUI = new WindowServicesReportManagementWebUI();
                            WindowServicesReportManagementWebUI.MyPageName = "Default.cshtml";
                            WindowServicesReportManagementWebUI.FormAction = Request.QueryString["FormAction"];
                            pageContent = WindowServicesReportManagementWebUI.CreateWebForm(myCurrentFrom).ToString();
                            if (IsPost)
                            {
                                WindowServicesReportManagementWebUI.FormAction = Request.Form["Operation"].ToString().ToUpper().Trim();
                                WindowServicesReportManagementWebUI.DoPostBack();
                                showMessage = WindowServicesReportManagementWebUI.ErrorMessage;
                            }
                            break;
                        case "SYSTEMSETTING":
                            SystemSettingManagementWebUI systemSetting1ManagementWebUI = new SystemSettingManagementWebUI();
                            systemSetting1ManagementWebUI.MyPageName = "Default.cshtml";
                            systemSetting1ManagementWebUI.FormAction = Request.QueryString["FormAction"];
                            pageContent = systemSetting1ManagementWebUI.CreateWebForm(myCurrentFrom).ToString();
                            if (IsPost)
                            {
                                systemSetting1ManagementWebUI.FormAction = Request.Form["Operation"].ToString().ToUpper().Trim();
                                systemSetting1ManagementWebUI.DoPostBack();
                                showMessage = systemSetting1ManagementWebUI.ErrorMessage;
                            }
                            break;
                        case "SERVICECONFIG":
                            ServiceConfigManagementWebUI serviceconfig = new ServiceConfigManagementWebUI();
                            serviceconfig.MyPageName = "Default.cshtml";
                            serviceconfig.FormAction = Request.QueryString["FormAction"];
                            pageContent = serviceconfig.CreateWebForm(myCurrentFrom).ToString();
                            if (IsPost)
                            {
                                serviceconfig.FormAction = Request.Form["Operation"].ToString().ToUpper().Trim();
                                serviceconfig.DoPostBack();
                                showMessage = serviceconfig.ErrorMessage;
                            }
                            break;
                        case "DEFAULTPARAMETER":
                            DefaultParameterManagementWebUI DefaultParameter = new DefaultParameterManagementWebUI();
                            DefaultParameter.MyPageName = "Default.cshtml";
                            DefaultParameter.FormAction = Request.QueryString["FormAction"];
                            pageContent = DefaultParameter.CreateWebForm(myCurrentFrom).ToString();
                            if (IsPost)
                            {
                                DefaultParameter.FormAction = Request.Form["Operation"].ToString().ToUpper().Trim();
                                DefaultParameter.DoPostBack();
                                showMessage = DefaultParameter.ErrorMessage;
                            }
                            break;
                        case "LOGINSECURITY":
                            LoginSecurityManagementWebUI LoginSecurity = new LoginSecurityManagementWebUI();
                            LoginSecurity.MyPageName = "Default.cshtml";
                            LoginSecurity.FormAction = Request.QueryString["FormAction"];
                            pageContent = LoginSecurity.CreateWebForm(myCurrentFrom).ToString();
                            if (IsPost)
                            {
                                LoginSecurity.FormAction = Request.Form["Operation"].ToString().ToUpper().Trim();
                                LoginSecurity.DoPostBack();
                                showMessage = LoginSecurity.ErrorMessage;
                            }
                            break;
                        /*------------Add By Pankaj Kumar Ishwar------------*/
                        case "RELEASENOTE":
                            ReleaseNoteManagementWebUI ReleaseNote = new ReleaseNoteManagementWebUI();
                            ReleaseNote.MyPageName = "Default.cshtml";
                            ReleaseNote.FormAction = Request.QueryString["FormAction"];
                            pageContent = ReleaseNote.CreateWebForm(myCurrentFrom).ToString();
                            if (IsPost)
                            {
                                ReleaseNote.FormAction = Request.Form["Operation"].ToString().ToUpper().Trim();
                                ReleaseNote.DoPostBack();
                                showMessage = ReleaseNote.ErrorMessage;
                            }
                            break;
                        /*------------Add By SUSHANT KUMAR NAYAK ------------*/
                        case "EMAILALERT":
                            EmailAlertManagementWebUI EmailAlertManagementWebUI = new EmailAlertManagementWebUI();
                            EmailAlertManagementWebUI.MyPageName = "Default.cshtml";
                            EmailAlertManagementWebUI.FormAction = Request.QueryString["FormAction"];
                            pageContent = EmailAlertManagementWebUI.CreateWebForm(myCurrentFrom).ToString();
                            if (IsPost)
                            {
                                EmailAlertManagementWebUI.FormAction = Request.Form["Operation"].ToString().ToUpper().Trim();
                                EmailAlertManagementWebUI.DoPostBack();
                                showMessage = EmailAlertManagementWebUI.ErrorMessage;
                            }
                            break;
                        /*------------Add By Devendra singh  ------------*/
                        case "USERTYPE":
                            UserTypeManagementWebUI UserTypeManagementWebUI = new UserTypeManagementWebUI();
                            UserTypeManagementWebUI.MyPageName = "Default.cshtml";
                            UserTypeManagementWebUI.FormAction = Request.QueryString["FormAction"];
                            pageContent = UserTypeManagementWebUI.CreateWebForm(myCurrentFrom).ToString();
                            if (IsPost)
                            {
                                UserTypeManagementWebUI.FormAction = Request.Form["Operation"].ToString().ToUpper().Trim();
                                UserTypeManagementWebUI.DoPostBack();
                                showMessage = UserTypeManagementWebUI.ErrorMessage;
                            }
                            break;
                        case "BANNER":
                            BannerManagementWebUI BannerType = new BannerManagementWebUI();
                            BannerType.MyPageName = "Default.cshtml";
                            BannerType.FormAction = Request.QueryString["FormAction"];
                            pageContent = BannerType.CreateWebForm(myCurrentFrom).ToString();
                            if (IsPost)
                            {
                                BannerType.FormAction = Request.Form["Operation"].ToString().ToUpper().Trim();
                                BannerType.DoPostBack();
                                showMessage = BannerType.ErrorMessage;
                            }
                            break;
                        case "ALERTEVENTTYPE":
                            AlertEventTypeManagementWebUI AlertEventType = new AlertEventTypeManagementWebUI();
                            AlertEventType.MyPageName = "Default.cshtml";
                            AlertEventType.FormAction = Request.QueryString["FormAction"];
                            pageContent = AlertEventType.CreateWebForm(myCurrentFrom).ToString();
                            if (IsPost)
                            {
                                AlertEventType.FormAction = Request.Form["Operation"].ToString().ToUpper().Trim();
                                AlertEventType.DoPostBack();
                                showMessage = AlertEventType.ErrorMessage;
                            }
                            break;
                    }
                    break;
                case "IRREGULARITY":
                    switch (Request.QueryString["Apps"].ToUpper().ToString())
                    {
                        case "IRREGULARITYSEVERITY":
                            IrregularitySeverityManagementWebUI irregularitySeverityManagementWebUI = new IrregularitySeverityManagementWebUI();
                            irregularitySeverityManagementWebUI.MyPageName = "Default.cshtml";
                            irregularitySeverityManagementWebUI.FormAction = Request.QueryString["FormAction"];
                            pageContent = irregularitySeverityManagementWebUI.CreateWebForm(myCurrentFrom).ToString();
                            if (IsPost)
                            {
                                irregularitySeverityManagementWebUI.FormAction = Request.Form["Operation"].ToString().ToUpper().Trim();
                                irregularitySeverityManagementWebUI.DoPostBack();
                                showMessage = irregularitySeverityManagementWebUI.ErrorMessage;
                            }
                            break;
                        case "IRREGULARITYINCIDENT":
                            IrregularityIncidentManagementWebUI irregularityIncidentManagementWebUI = new IrregularityIncidentManagementWebUI();
                            irregularityIncidentManagementWebUI.MyPageName = "Default.cshtml";
                            irregularityIncidentManagementWebUI.FormAction = Request.QueryString["FormAction"];
                            pageContent = irregularityIncidentManagementWebUI.CreateWebForm(myCurrentFrom).ToString();
                            if (IsPost)
                            {
                                irregularityIncidentManagementWebUI.FormAction = Request.Form["Operation"].ToString().ToUpper().Trim();
                                irregularityIncidentManagementWebUI.DoPostBack();
                                showMessage = irregularityIncidentManagementWebUI.ErrorMessage;
                            }
                            break;
                        case "IRREGULARITYNONDELIVERYREASON":
                            IrregularityNonDeliveryReasonManagementWebUI irregularityNonDeliveryReasonManagementWebUI = new IrregularityNonDeliveryReasonManagementWebUI();
                            irregularityNonDeliveryReasonManagementWebUI.MyPageName = "Default.cshtml";
                            irregularityNonDeliveryReasonManagementWebUI.FormAction = Request.QueryString["FormAction"];
                            pageContent = irregularityNonDeliveryReasonManagementWebUI.CreateWebForm(myCurrentFrom).ToString();
                            if (IsPost)
                            {
                                irregularityNonDeliveryReasonManagementWebUI.FormAction = Request.Form["Operation"].ToString().ToUpper().Trim();
                                irregularityNonDeliveryReasonManagementWebUI.DoPostBack();
                                showMessage = irregularityNonDeliveryReasonManagementWebUI.ErrorMessage;
                            }
                            break;


                        case "IRREGULARITYDAMAGE":
                            IrregularityDamageManagementWebUI irregularityDamageManagementWebUI = new IrregularityDamageManagementWebUI();
                            irregularityDamageManagementWebUI.MyPageName = "Default.cshtml";
                            irregularityDamageManagementWebUI.FormAction = Request.QueryString["FormAction"];
                            pageContent = irregularityDamageManagementWebUI.CreateWebForm(myCurrentFrom).ToString();
                            if (IsPost)
                            {
                                irregularityDamageManagementWebUI.FormAction = Request.Form["Operation"].ToString().ToUpper().Trim();
                                irregularityDamageManagementWebUI.DoPostBack();
                                showMessage = irregularityDamageManagementWebUI.ErrorMessage;
                            }
                            break;
                        case "IRREGULARITYPACKING":
                            IrregularityPackingManagementWebUI irregularityPackingManagementWebUI = new IrregularityPackingManagementWebUI();
                            irregularityPackingManagementWebUI.MyPageName = "Default.cshtml";
                            irregularityPackingManagementWebUI.FormAction = Request.QueryString["FormAction"];
                            pageContent = irregularityPackingManagementWebUI.CreateWebForm(myCurrentFrom).ToString();
                            if (IsPost)
                            {
                                irregularityPackingManagementWebUI.FormAction = Request.Form["Operation"].ToString().ToUpper().Trim();
                                irregularityPackingManagementWebUI.DoPostBack();
                                showMessage = irregularityPackingManagementWebUI.ErrorMessage;
                            }
                            break;
                        case "IRREGULARITYRECUPERATION":
                            IrregularityRecuperationManagementWebUI irregularityRecuperationManagementWebUI = new IrregularityRecuperationManagementWebUI();
                            irregularityRecuperationManagementWebUI.MyPageName = "Default.cshtml";
                            irregularityRecuperationManagementWebUI.FormAction = Request.QueryString["FormAction"];
                            pageContent = irregularityRecuperationManagementWebUI.CreateWebForm(myCurrentFrom).ToString();
                            if (IsPost)
                            {
                                irregularityRecuperationManagementWebUI.FormAction = Request.Form["Operation"].ToString().ToUpper().Trim();
                                irregularityRecuperationManagementWebUI.DoPostBack();
                                showMessage = irregularityRecuperationManagementWebUI.ErrorMessage;
                            }
                            break;
                        case "IRREGULARITYEVENT":
                            IrregularityEventManagementWebUI irregularityEventManagementWebUI = new IrregularityEventManagementWebUI();
                            irregularityEventManagementWebUI.MyPageName = "Default.cshtml";
                            irregularityEventManagementWebUI.FormAction = Request.QueryString["FormAction"];
                            pageContent = irregularityEventManagementWebUI.CreateWebForm(myCurrentFrom).ToString();
                            if (IsPost)
                            {
                                irregularityEventManagementWebUI.FormAction = Request.Form["Operation"].ToString().ToUpper().Trim();
                                irregularityEventManagementWebUI.DoPostBack();
                                showMessage = irregularityEventManagementWebUI.ErrorMessage;
                            }
                            break;

                        case "IRREGULARITY":
                            IrregularityManagementWebUI irregularityManagementWebUI = new IrregularityManagementWebUI();
                            irregularityManagementWebUI.MyPageName = "Default.cshtml";
                            irregularityManagementWebUI.FormAction = Request.QueryString["FormAction"];
                            pageContent = irregularityManagementWebUI.CreateWebForm(myCurrentFrom).ToString();
                            if (IsPost)
                            {
                                irregularityManagementWebUI.FormAction = Request.Form["Operation"].ToString().ToUpper().Trim();
                                irregularityManagementWebUI.DoPostBack();
                                showMessage = irregularityManagementWebUI.ErrorMessage;
                            }
                            break;
                        case "IRREGULARITYDISPOSALADVICE":
                            IrregularityDisposalAdviceManagementWebUI irregularityDisposalAdviceManagementWebUI = new IrregularityDisposalAdviceManagementWebUI();
                            irregularityDisposalAdviceManagementWebUI.MyPageName = "Default.cshtml";
                            irregularityDisposalAdviceManagementWebUI.FormAction = Request.QueryString["FormAction"];
                            pageContent = irregularityDisposalAdviceManagementWebUI.CreateWebForm(myCurrentFrom).ToString();
                            if (IsPost)
                            {
                                irregularityDisposalAdviceManagementWebUI.FormAction = Request.Form["Operation"].ToString().ToUpper().Trim();
                                irregularityDisposalAdviceManagementWebUI.DoPostBack();
                                showMessage = irregularityDisposalAdviceManagementWebUI.ErrorMessage;
                            }
                            break;
                        case "IRREGULARITYSTATUS":
                            IrregularityStatusManagementWebUI irregularityStatusManagementWebUI = new IrregularityStatusManagementWebUI();
                            irregularityStatusManagementWebUI.MyPageName = "Default.cshtml";
                            irregularityStatusManagementWebUI.FormAction = Request.QueryString["FormAction"];
                            pageContent = irregularityStatusManagementWebUI.CreateWebForm(myCurrentFrom).ToString();
                            if (IsPost)
                            {
                                irregularityStatusManagementWebUI.FormAction = Request.Form["Operation"].ToString().ToUpper().Trim();
                                irregularityStatusManagementWebUI.DoPostBack();
                                showMessage = irregularityStatusManagementWebUI.ErrorMessage;
                            }
                            break;

                        case "APPLICATIONENTITY":
                            ApplicationEnityManagementWebUI applicationenitymanagementWebUI = new ApplicationEnityManagementWebUI();
                            applicationenitymanagementWebUI.MyPageName = "Default.cshtml";
                            applicationenitymanagementWebUI.FormAction = Request.QueryString["FormAction"];
                            pageContent = applicationenitymanagementWebUI.CreateWebForm(myCurrentFrom).ToString();
                            if (IsPost)
                            {
                                applicationenitymanagementWebUI.FormAction = Request.Form["Operation"].ToString().ToUpper().Trim();
                                applicationenitymanagementWebUI.DoPostBack();
                                showMessage = applicationenitymanagementWebUI.ErrorMessage;
                            }
                            break;
                    }
                    break;

                case "INVENTORY":
                    switch (Request.QueryString["Apps"].ToUpper().ToString())
                    {
                        case "INVENTORYVEHTYPE":
                            InventoryVehTypeManagementWebUI inventoryVehTypeManagementWebUI = new InventoryVehTypeManagementWebUI();
                            inventoryVehTypeManagementWebUI.MyPageName = "Default.cshtml";
                            inventoryVehTypeManagementWebUI.FormAction = Request.QueryString["FormAction"];
                            pageContent = inventoryVehTypeManagementWebUI.CreateWebForm(myCurrentFrom).ToString();
                            if (IsPost)
                            {
                                inventoryVehTypeManagementWebUI.FormAction = Request.Form["Operation"].ToString().ToUpper().Trim();
                                inventoryVehTypeManagementWebUI.DoPostBack();
                                showMessage = inventoryVehTypeManagementWebUI.ErrorMessage;
                            }
                            break;
                        case "INVENTORYITEM":
                            InventoryItemManagementWebUI inventoryItemManagementWebUI = new InventoryItemManagementWebUI();
                            inventoryItemManagementWebUI.MyPageName = "Default.cshtml";
                            inventoryItemManagementWebUI.FormAction = Request.QueryString["FormAction"];
                            pageContent = inventoryItemManagementWebUI.CreateWebForm(myCurrentFrom).ToString();
                            if (IsPost)
                            {
                                inventoryItemManagementWebUI.FormAction = Request.Form["Operation"].ToString().ToUpper().Trim();
                                inventoryItemManagementWebUI.DoPostBack();
                                showMessage = inventoryItemManagementWebUI.ErrorMessage;
                            }
                            break;
                        case "INVVEHICLE":
                            InvVehicleManagementWebUI invVehicleManagementWebUI = new InvVehicleManagementWebUI();
                            invVehicleManagementWebUI.MyPageName = "Default.cshtml";
                            invVehicleManagementWebUI.FormAction = Request.QueryString["FormAction"];
                            pageContent = invVehicleManagementWebUI.CreateWebForm(myCurrentFrom).ToString();
                            if (IsPost)
                            {
                                invVehicleManagementWebUI.FormAction = Request.Form["Operation"].ToString().ToUpper().Trim();
                                invVehicleManagementWebUI.DoPostBack();
                                showMessage = invVehicleManagementWebUI.ErrorMessage;
                            }
                            break;

                        case "INVVEHICLESERVICE":
                            InvVehicleServiceManagementWebUI invVehicleServiceManagementWebUI = new InvVehicleServiceManagementWebUI();
                            invVehicleServiceManagementWebUI.MyPageName = "Default.cshtml";
                            invVehicleServiceManagementWebUI.FormAction = Request.QueryString["FormAction"];
                            pageContent = invVehicleServiceManagementWebUI.CreateWebForm(myCurrentFrom).ToString();
                            if (IsPost)
                            {
                                invVehicleServiceManagementWebUI.FormAction = Request.Form["Operation"].ToString().ToUpper().Trim();
                                invVehicleServiceManagementWebUI.DoPostBack();
                                showMessage = invVehicleServiceManagementWebUI.ErrorMessage;
                            }
                            break;
                        case "CONSUMABLESTOCK":
                            ConsumableStockManagementWebUI consumableStockManagementWebUI = new ConsumableStockManagementWebUI();
                            consumableStockManagementWebUI.MyPageName = "Default.cshtml";
                            consumableStockManagementWebUI.FormAction = Request.QueryString["FormAction"];
                            pageContent = consumableStockManagementWebUI.CreateWebForm(myCurrentFrom).ToString();
                            if (IsPost)
                            {
                                consumableStockManagementWebUI.FormAction = Request.Form["Operation"].ToString().ToUpper().Trim();
                                consumableStockManagementWebUI.DoPostBack();
                                showMessage = consumableStockManagementWebUI.ErrorMessage;
                            }
                            break;
                        case "CONSUMABLE":
                            ConsumableManagementWebUI consumableManagementWebUI = new ConsumableManagementWebUI();
                            consumableManagementWebUI.MyPageName = "Default.cshtml";
                            consumableManagementWebUI.FormAction = Request.QueryString["FormAction"];
                            pageContent = consumableManagementWebUI.CreateWebForm(myCurrentFrom).ToString();
                            if (IsPost)
                            {
                                consumableManagementWebUI.FormAction = Request.Form["Operation"].ToString().ToUpper().Trim();
                                consumableManagementWebUI.DoPostBack();
                                showMessage = consumableManagementWebUI.ErrorMessage;
                            }
                            break;
                        case "ISSUECONSUMABLES":
                            IssueConsumablesManagementWebUI issueConsumablesManagementWebUI = new IssueConsumablesManagementWebUI();
                            issueConsumablesManagementWebUI.MyPageName = "Default.cshtml";
                            issueConsumablesManagementWebUI.FormAction = Request.QueryString["FormAction"];
                            pageContent = issueConsumablesManagementWebUI.CreateWebForm(myCurrentFrom).ToString();
                            if (IsPost)
                            {
                                issueConsumablesManagementWebUI.FormAction = Request.Form["Operation"].ToString().ToUpper().Trim();
                                issueConsumablesManagementWebUI.DoPostBack();
                                showMessage = issueConsumablesManagementWebUI.ErrorMessage;
                            }
                            break;
                        case "RETURNCONSUMABLE":
                            ReturnConsumableManagementWebUI returnConsumableManagementWebUI = new ReturnConsumableManagementWebUI();
                            returnConsumableManagementWebUI.MyPageName = "Default.cshtml";
                            returnConsumableManagementWebUI.FormAction = Request.QueryString["FormAction"];
                            pageContent = returnConsumableManagementWebUI.CreateWebForm(myCurrentFrom).ToString();
                            if (IsPost)
                            {
                                returnConsumableManagementWebUI.FormAction = Request.Form["Operation"].ToString().ToUpper().Trim();
                                returnConsumableManagementWebUI.DoPostBack();
                                showMessage = returnConsumableManagementWebUI.ErrorMessage;
                            }
                            break;

                        case "INVENTORYSTOCKLIST":
                            InventoryStockListManagementWebUI InventoryStockListManagementWebUI = new InventoryStockListManagementWebUI();
                            InventoryStockListManagementWebUI.MyPageName = "Default.cshtml";
                            InventoryStockListManagementWebUI.FormAction = Request.QueryString["FormAction"];
                            pageContent = InventoryStockListManagementWebUI.CreateWebForm(myCurrentFrom).ToString();
                            if (IsPost)
                            {
                                InventoryStockListManagementWebUI.FormAction = Request.Form["Operation"].ToString().ToUpper().Trim();
                                InventoryStockListManagementWebUI.DoPostBack();
                                showMessage = InventoryStockListManagementWebUI.ErrorMessage;
                            }
                            break;

                    }
                    break;

                case "EDI":
                    switch (Request.QueryString["Apps"].ToUpper().ToString())
                    {
                        case "EVENTMASTER":
                            EventMasterManagementWebUI eventMasterManagementWebUI = new EventMasterManagementWebUI();
                            eventMasterManagementWebUI.MyPageName = "Default.cshtml";
                            eventMasterManagementWebUI.FormAction = Request.QueryString["FormAction"];
                            pageContent = eventMasterManagementWebUI.CreateWebForm(myCurrentFrom).ToString();
                            if (IsPost)
                            {
                                eventMasterManagementWebUI.FormAction = Request.Form["Operation"].ToString().ToUpper().Trim();
                                eventMasterManagementWebUI.DoPostBack();
                                showMessage = eventMasterManagementWebUI.ErrorMessage;
                            }
                            break;

                        case "MESSAGETYPEMASTER":
                            MessageTypeMasterManagementWebUI messageTypeMasterManagementWebUI = new MessageTypeMasterManagementWebUI();
                            messageTypeMasterManagementWebUI.MyPageName = "Default.cshtml";
                            messageTypeMasterManagementWebUI.FormAction = Request.QueryString["FormAction"];
                            pageContent = messageTypeMasterManagementWebUI.CreateWebForm(myCurrentFrom).ToString();
                            if (IsPost)
                            {
                                messageTypeMasterManagementWebUI.FormAction = Request.Form["Operation"].ToString().ToUpper().Trim();
                                messageTypeMasterManagementWebUI.DoPostBack();
                                showMessage = messageTypeMasterManagementWebUI.ErrorMessage;
                            }
                            break;

                        case "EVENTMESSAGETRANS":
                            EventMessageTransManagementWebUI eventMessageTransManagementWebUI = new EventMessageTransManagementWebUI();
                            eventMessageTransManagementWebUI.MyPageName = "Default.cshtml";
                            eventMessageTransManagementWebUI.FormAction = Request.QueryString["FormAction"];
                            pageContent = eventMessageTransManagementWebUI.CreateWebForm(myCurrentFrom).ToString();
                            if (IsPost)
                            {
                                eventMessageTransManagementWebUI.FormAction = Request.Form["Operation"].ToString().ToUpper().Trim();
                                eventMessageTransManagementWebUI.DoPostBack();
                                showMessage = eventMessageTransManagementWebUI.ErrorMessage;
                            }
                            break;


                        case "RECIPIENTMSGCONFIG":
                            RecipientMsgConfigManagementWebUI recipientMsgConfigManagementWebUI = new RecipientMsgConfigManagementWebUI();
                            recipientMsgConfigManagementWebUI.MyPageName = "Default.cshtml";
                            recipientMsgConfigManagementWebUI.FormAction = Request.QueryString["FormAction"];
                            pageContent = recipientMsgConfigManagementWebUI.CreateWebForm(myCurrentFrom).ToString();
                            if (IsPost)
                            {
                                recipientMsgConfigManagementWebUI.FormAction = Request.Form["Operation"].ToString().ToUpper().Trim();
                                recipientMsgConfigManagementWebUI.DoPostBack();
                                showMessage = recipientMsgConfigManagementWebUI.ErrorMessage;
                            }
                            break;

                        case "TELEXTYPE":
                            TelexTypeManagementWebUI telexTypeManagementWebUI = new TelexTypeManagementWebUI();
                            telexTypeManagementWebUI.MyPageName = "Default.cshtml";
                            telexTypeManagementWebUI.FormAction = Request.QueryString["FormAction"];
                            pageContent = telexTypeManagementWebUI.CreateWebForm(myCurrentFrom).ToString();
                            if (IsPost)
                            {
                                telexTypeManagementWebUI.FormAction = Request.Form["Operation"].ToString().ToUpper().Trim();
                                telexTypeManagementWebUI.DoPostBack();
                                showMessage = telexTypeManagementWebUI.ErrorMessage;
                            }
                            break;
                        case "MOP":
                            MOPManagementWebUI mOPManagementWebUI = new MOPManagementWebUI();
                            mOPManagementWebUI.MyPageName = "Default.cshtml";
                            mOPManagementWebUI.FormAction = Request.QueryString["FormAction"];
                            pageContent = mOPManagementWebUI.CreateWebForm(myCurrentFrom).ToString();
                            if (IsPost)
                            {
                                mOPManagementWebUI.FormAction = Request.Form["Operation"].ToString().ToUpper().Trim();
                                mOPManagementWebUI.DoPostBack();
                                showMessage = mOPManagementWebUI.ErrorMessage;
                            }
                            break;

                    }
                    break;
                case "CRA":
                    switch (Request.QueryString["Apps"].ToUpper().ToString())
                    {
                        case "CRAINVOICELIST":
                            CRAInvoiceListManagementWebUI obj = new CRAInvoiceListManagementWebUI();
                            obj.MyPageName = "Default.cshtml";
                            obj.FormAction = Request.QueryString["FormAction"];
                            pageContent = obj.CreateWebForm(myCurrentFrom).ToString();
                            if (IsPost)
                            {
                                obj.FormAction = Request.Form["Operation"].ToString().ToUpper().Trim();
                                obj.DoPostBack();
                                showMessage = obj.ErrorMessage;
                            }
                            break;
                    }
                    break;

                    //case "IMPORT":
                    //    switch (Request.QueryString["Apps"].ToUpper().ToString())
                    //    {
                    //        case "TRANSITFLIGHTARRIVAL":
                    //            TransitFlightArrivalManagementWebUI TransitFlightArrivalManagementWebUI = new TransitFlightArrivalManagementWebUI();
                    //            TransitFlightArrivalManagementWebUI.MyPageName = "Default.cshtml";

                    //            if (!IsPost)
                    //            {
                    //                TransitFlightArrivalManagementWebUI.FormAction = Request.QueryString["FormAction"];
                    //                pageContent = TransitFlightArrivalManagementWebUI.CreateWebForm(myCurrentFrom).ToString();
                    //            }
                    //            else
                    //            {
                    //                TransitFlightArrivalManagementWebUI.FormAction = Request.Form["Operation"].ToString().ToUpper().Trim();
                    //                TransitFlightArrivalManagementWebUI.DoPostBack();
                    //                showMessage = TransitFlightArrivalManagementWebUI.ErrorMessage;
                    //            }
                    //            break;
                    //    }
                    //    break;
            }
            //AuthenticationError:
            if (!string.IsNullOrEmpty(showMessage))
            {

                if (showMessage.Contains("->"))
                {
                    <script type="text/javascript">
                        var msgContent =@Html.Raw("'"+showMessage+"'")
                           ShowMessage('error', 'Failed!', "'" + msgContent + "'");
                    </script>    }
                else
                {

                    <script type="text/javascript">
                        var msgContent =@Html.Raw("'"+showMessage+"'")
                            ShowMessage('warning', 'Need your Kind Attention!', msgContent);
                    </script>    }
            }
            if (HttpContext.Current.Session["MsgKey"] != null && !IsPost)
            {
                CargoFlash.Cargo.WebUI.ApplicationWebUI ap = new CargoFlash.Cargo.WebUI.ApplicationWebUI();
                showMessage = ap.ReadServerMessages(Convert.ToInt16(HttpContext.Current.Session["MsgKey"]), Request.QueryString["Apps"]);
                HttpContext.Current.Session["MsgKey"] = null;
                <script type="text/javascript">
                    $(function () {
                        var msgContent = @Html.Raw("'" + showMessage + "'")
                          ShowMessage('success', 'Success!', msgContent);
                        if (sessionStorage.getItem("auditlog") != null) {
                            var auditLog = JSON.parse(sessionStorage.getItem("auditlog"));
                            SaveAppendGridAuditLog(auditLog.KeyColumn, auditLog.KeyValue, auditLog.keySNo, auditLog.arrVal, auditLog.FormAction, auditLog.TerminalSNo, auditLog.TerminalName)
                        }
                    });
                </script>}
        }
    }
}

<hgroup class="title">

    <h1>@Page.Title</h1>
</hgroup>

<section id="loginForm">
    @{
        if (Request.QueryString["Module"] == null)
        {

            <div style="text-align:center;width:100%">
			<img src="~/Images/homelogo.jpg" style="width: 900px;height: 500px;margin-top: 70px;;opacity: 0.6;border-radius: 20px;"/>
			</div>
        }
        else
        {
            <form method="post" name="aspnetForm" id="aspnetForm">

                @Html.Raw(@pageContent)

            </form>
        }
    }
</section>
@*@section headerScripts{
    @if (!string.IsNullOrEmpty(Request.QueryString["Module"]) && !string.IsNullOrEmpty(Request.QueryString["Apps"]))
    {
        switch (Request.QueryString["Module"].ToUpper().ToString())
        {
            case "SHIPMENT"://MANAGE as since all are in the manage list
                          /*as it will also reflect in  the admin xml*/
                switch (Request.QueryString["Apps"].ToUpper().ToString())
                {
                    case "BUILDUP":
                        @System.Web.Optimization.Scripts.Render("~/JScript/BuildUpPage");

                        break;
                }
                break;

        }
    }
    }*@


@section Scripts {
    @{

        var dttemp = ((CargoFlash.Cargo.Model.UserLogin)Session["UserDetail"]).SysSetting["JSVersion"];
        if (!string.IsNullOrEmpty(Request.QueryString["Module"]) && !string.IsNullOrEmpty(Request.QueryString["Apps"]))
        {
            switch (Request.QueryString["Module"].ToUpper().ToString())
            {
                case "MASTER"://MANAGE as since all are in the manage list
                              /*as it will also reflect in  the admin xml*/
                    switch (Request.QueryString["Apps"].ToUpper().ToString())
                    {
                        case "LOGINCOLORCODE":
                            @System.Web.Optimization.Scripts.Render("~/bundles/LoginColorCode");
                            break;
                        case "EXCHANGERATECONFIGURATION":
                            @System.Web.Optimization.Scripts.Render("~/bundles/ExchangeRateConfiguration");
                            break;

                        case "BTL":
                            @System.Web.Optimization.Scripts.Render("~/bundles/BTL");
                            break;

                        //Added By tarun kumar on 10 Jan 2017 Task #63
                        case "AIRLINEHUB":
                            @System.Web.Optimization.Scripts.Render("~/bundles/AirlineHub");
                            break;
                        case "AIRLINE":
                            @System.Web.Optimization.Scripts.Render("~/bundles/Airline");
                            break;
                        case "CHECKLISTTYPE":
                            @System.Web.Optimization.Scripts.Render("~/bundles/CheckListType");
                            break;
                        case "AIRLINECHECKLIST":
                            @System.Web.Optimization.Scripts.Render("~/bundles/AirlineCheckList");
                            break;
                        case "TERMINAL":
                            @System.Web.Optimization.Scripts.Render("~/bundles/Terminal");
                            break;
                        case "REGISTRYCONTROL":
                            ;
                            @System.Web.Optimization.Scripts.Render("~/bundles/RegistryControl");
                            break;
                        case "TASKAREA":
                            @System.Web.Optimization.Scripts.Render("~/bundles/TaskArea");
                            break;
                        case "SCHEDULE":
                            @System.Web.Optimization.Scripts.Render("~/bundles/Schedue");
                            break;
                        case "COMMODITYGROUP":
                            @System.Web.Optimization.Scripts.Render("~/bundles/CommodityGroup");
                            break;
                        case "COUNTRY":
                            @System.Web.Optimization.Scripts.Render("~/bundles/Country");
                            break;
                        case "UNLOCKEDPAGE":
                            @System.Web.Optimization.Scripts.Render("~/bundles/UnLockedPage");
                            break;
                        case "SLA":
                            @System.Web.Optimization.Scripts.Render("~/bundles/SLA");
                            break;
                        case "ACCOUNT":
                            @System.Web.Optimization.Scripts.Render("~/bundles/Account");
                            break;
                        case "ACCOUNTTYPE":
                            @System.Web.Optimization.Scripts.Render("~/bundles/AccountType");
                            break;

                        case "AIRPORT":
                            @System.Web.Optimization.Scripts.Render("~/bundles/Airport");
                            break;
                        case "CUSTOMER":
                            @System.Web.Optimization.Scripts.Render("~/bundles/Customer");
                            break;
                        case "CURRENCY":
                            @System.Web.Optimization.Scripts.Render("~/bundles/Currency");
                            break;
                        case "OFFICE":
                            @System.Web.Optimization.Scripts.Render("~/bundles/Office");
                            break;
                        case "OFFICETARGET":
                            @System.Web.Optimization.Scripts.Render("~/bundles/OfficeTarget");
                            break;
                        case "CITYCONNECTIONTIME":
                            @System.Web.Optimization.Scripts.Render("~/bundles/CityConnectionTime");
                            break;
                        case "CONNECTIONTYPE":
                            @System.Web.Optimization.Scripts.Render("~/bundles/ConnectionTime");
                            break;
                        case "CITYCONNECTIONTIMEPRIORITY":
                            @System.Web.Optimization.Scripts.Render("~/bundles/CityConnectionTimePriority");
                            break;

                        case "CITY":
                            @System.Web.Optimization.Scripts.Render("~/bundles/City");
                            break;
                        case "EDOX":
                            @System.Web.Optimization.Scripts.Render("~/bundles/EDox");
                            break;
                        case "HOLDTYPE":
                            @System.Web.Optimization.Scripts.Render("~/bundles/HoldType");
                            break;
                        case "DOCUMENTMASTER":
                            @System.Web.Optimization.Scripts.Render("~/bundles/DocumentMaster");
                            break;

                        case "SPHCDOCUMENT":
                            @System.Web.Optimization.Scripts.Render("~/bundles/SPHCDocument");
                            break;
                        case "EDIMASTER":
                            @System.Web.Optimization.Scripts.Render("~/bundles/EDIMaster");
                            break;

                        case "COMMODITY":
                            @System.Web.Optimization.Scripts.Render("~/bundles/Commodity");
                            break;
                        case "FLIGHTTYPE":
                            @System.Web.Optimization.Scripts.Render("~/bundles/FlightType");
                            break;

                        case "SPHCCLASS":
                            @System.Web.Optimization.Scripts.Render("~/bundles/SPHCClass");
                            break;
                        case "SLABMASTER":
                            @System.Web.Optimization.Scripts.Render("~/bundles/SlabMaster");
                            break;
                        case "ACCOUNTTARGET":
                            @System.Web.Optimization.Scripts.Render("~/bundles/AccountTarget");
                            break;

                        case "AIRCRAFT":
                            @System.Web.Optimization.Scripts.Render("~/bundles/AirCraft");
                            break;

                        case "AIRCRAFTDIMENSIONMATRIX":
                            @System.Web.Optimization.Scripts.Render("~/bundles/AircraftDimensionMatrix");
                            break;

                        case "AIRCRAFTCAPACITY":
                            @System.Web.Optimization.Scripts.Render("~/bundles/AirCraftCapacity");
                            break;
                        case "CONTACTS":
                            @System.Web.Optimization.Scripts.Render("~/bundles/Contacts");
                            break;
                        case "PRODUCT":
                            @System.Web.Optimization.Scripts.Render("~/bundles/Product");
                            break;

                        case "DEPARTMENT":
                            @System.Web.Optimization.Scripts.Render("~/bundles/Department");
                            break;
                        case "COMMODITYDENSITYGROUP":
                            @System.Web.Optimization.Scripts.Render("~/bundles/CommodityDensityGroup");
                            break;
                        case "SPHCGROUP":
                            @System.Web.Optimization.Scripts.Render("~/bundles/SPHCGroup");
                            break;
                        case "ACCOUNTGROUP":
                            @System.Web.Optimization.Scripts.Render("~/bundles/AccountGroup");
                            break;
                        case "COMMODITYPACKAGE":
                            @System.Web.Optimization.Scripts.Render("~/bundles/CommodityPackage");
                            break;

                        case "PAGECREATION":
                            @System.Web.Optimization.Scripts.Render("~/bundles/PageCreation");
                            break;
                        case "TIMEZONE":
                            @System.Web.Optimization.Scripts.Render("~/bundles/TimeZone");
                            break;
                        case "PRIORITY":
                            @System.Web.Optimization.Scripts.Render("~/bundles/Priority");
                            break;
                        case "SPECIALHANDLINGCODE":
                            @System.Web.Optimization.Scripts.Render("~/bundles/SpecialHandlingCode");
                            break;
                        case "EMBARGO":
                            @System.Web.Optimization.Scripts.Render("~/bundles/Embargo");
                            break;
                        case "EDIINBOUNDANDOUTBOUND":
                            @System.Web.Optimization.Scripts.Render("~/bundles/EdiInboundAndOutbound");
                            break;
                        case "TAX":
                            @System.Web.Optimization.Scripts.Render("~/bundles/Tax");
                            break;
                        case "EXCELUPLOAD":
                            @System.Web.Optimization.Scripts.Render("~/bundles/ExcelUpload");
                            break;
                        case "CREDITLIMITUPDATE":
                            @System.Web.Optimization.Scripts.Render("~/bundles/CreditLimitUpdate");
                            break;
                        case "WEIGHINGSCALE":
                            @System.Web.Optimization.Scripts.Render("~/bundles/WeighingScale");
                            break;
                        case "TRUCKTYPE":
                            @System.Web.Optimization.Scripts.Render("~/bundles/TruckType");
                            break;
                        //Added By ARMAN ALI on 04 Jan 2017 Task # 31
                        case "ROUTE":
                            @System.Web.Optimization.Scripts.Render("~/bundles/Route");
                            break;
                        case "DISTANCE":
                            @System.Web.Optimization.Scripts.Render("~/bundles/Distance");
                            break;
                        case "RATECARD":
                            @System.Web.Optimization.Scripts.Render("~/bundles/RateCard");
                            break;

                        case "PENALTYPARAMETERS":
                            @System.Web.Optimization.Scripts.Render("~/bundles/PenaltyParameters");
                            break;

                        case "RATETYPEPRIORITY":
                            @System.Web.Optimization.Scripts.Render("~/bundles/RateTypePriority");
                            break;

                        //Added By Vsingh 10 Jan 2017 Task # 57
                        case "ZONE":
                            @System.Web.Optimization.Scripts.Render("~/bundles/Zone");
                            break;
                        //Added By Vsingh 10 Jan 2017 Task # 57
                        case "XRAYMACHINE":
                            @System.Web.Optimization.Scripts.Render("~/bundles/XRayMachine");
                            break;
                        //Added By sakhtar Task # 57
                        case "RATETYPE":
                            @System.Web.Optimization.Scripts.Render("~/bundles/RateType");
                            break;

                        //Added By Vkumar on 30 Dec 2016 Task # 17
                        case "COMMISSION":
                            @System.Web.Optimization.Scripts.Render("~/bundles/Commission");
                            break;
                        //Added By Vkumar on 30 Dec 2016 Task # 17

                        //Added By Vkumar on 11 Jan 2017 Task # 55
                        case "REGION":
                            @System.Web.Optimization.Scripts.Render("~/bundles/Region");
                            break;
                        //Added By Vkumar on 11 Jan 2017 Task # 55

                        case "MESSAGETEST":
                            @System.Web.Optimization.Scripts.Render("~/bundles/MessageTest");
                            break;
                        case "RATEPRIORITYMASTER":
                            @System.Web.Optimization.Scripts.Render("~/bundles/RatePriorityMaster");
                            break;

                        case "TRUCKMASTER":
                            @System.Web.Optimization.Scripts.Render("~/bundles/TruckMaster");
                            break;
                        case "DRIVERMASTER":
                            @System.Web.Optimization.Scripts.Render("~/bundles/DriverMaster");
                            break;
                    }
                    break;
                case "SCHEDULE":
                    switch (Request.QueryString["Apps"].ToUpper().ToString())
                    {
                        case "SCHEDULE":
                            @System.Web.Optimization.Scripts.Render("~/bundles/Schedule");
                            break;
                        case "FLIGHTOPEN":
                            @System.Web.Optimization.Scripts.Render("~/bundles/flightopen");
                            break;
                        case "VIEWEDITFLIGHT":
                            @System.Web.Optimization.Scripts.Render("~/bundles/ViewEditFlight");
                            break;

                        case "SSIMUPLOAD":
                            @System.Web.Optimization.Scripts.Render("~/bundles/SSIMUpload");
                            break;
                        case "SASSSIMUPLOAD":
                            @System.Web.Optimization.Scripts.Render("~/bundles/SASSSIMUpload");
                            break;
                    }
                    break;
                case "REPORT":
                    switch (Request.QueryString["Apps"].ToUpper().ToString())
                    {
                        case "WORKORDER":
                            @System.Web.Optimization.Scripts.Render("~/bundles/WorkOrder");

                            break;
                        case "OPERATION":

                            @System.Web.Optimization.Scripts.Render("~/bundles/Operation");
                            break;
                        case "IMPOPERATION":
                            @System.Web.Optimization.Scripts.Render("~/bundles/ImpOperation");

                            break;
                        case "CARGORANKING":
                            @System.Web.Optimization.Scripts.Render("~/bundles/CargoRanking");
                            break;
                        case "CONSUME":

                            @System.Web.Optimization.Scripts.Render("~/bundles/Consume");
                            break;
                        case "ULDINVENTORYD":
                            @System.Web.Optimization.Scripts.Render("~/bundles/ReportULDInventory");
                            break;

                        case "BALANCESTOCK":

                            @System.Web.Optimization.Scripts.Render("~/bundles/BalanceStock");
                            break;
                        case "COMMONEXPORTIMPORTREPORT":
                            @System.Web.Optimization.Scripts.Render("~/bundles/CommonExportImportReport");
                            break;
                        case "UNCLEAREDSHIPMENT":

                            @System.Web.Optimization.Scripts.Render("~/bundles/UnclearedShipment");
                            break;
                        case "EXPORTDEPARTURE":


                            @System.Web.Optimization.Scripts.Render("~/bundles/ExportDeparture");
                            break;
                        case "MOVEMENTREGISTER":

                            @System.Web.Optimization.Scripts.Render("~/bundles/MovementRegister");
                            break;
                        case "IMPORTSTATUS":
                            @System.Web.Optimization.Scripts.Render("~/bundles/ImportStatus");
                            break;


                        case "PETTY":
                            @System.Web.Optimization.Scripts.Render("~/bundles/Petty");
                            break;
                        case "DELIVERYPENDING":

                            @System.Web.Optimization.Scripts.Render("~/bundles/DeliveryPending");
                            break;

                        case "ULDOUT":
                            @System.Web.Optimization.Scripts.Render("~/bundles/ULDOut");
                            break;
                        case "EXPORTIMPORT":

                            @System.Web.Optimization.Scripts.Render("~/bundles/ExportImport");
                            break;
                        case "UWSPENDING":

                            @System.Web.Optimization.Scripts.Render("~/bundles/UWSPending");
                            break;
                        case "EXPORTCSR":
                            @System.Web.Optimization.Scripts.Render("~/bundles/ExportCSR");
                            break;
                        case "IMPORTCSR":

                            @System.Web.Optimization.Scripts.Render("~/bundles/ImportCSR");



                            break;
                        case "CARGORANKINGEI":
                            @System.Web.Optimization.Scripts.Render("~/bundles/CargoRankingEI");
                            break;
                        case "CONSIGNEESUMMARY":
                            @System.Web.Optimization.Scripts.Render("~/bundles/ConsigneeSummary");
                            break;
                        case "TARIFFHISTORY":

                            @System.Web.Optimization.Scripts.Render("~/bundles/TariffHistory");
                            break;

                        case "HANDEDOVER":
                            @System.Web.Optimization.Scripts.Render("~/bundles/HandedOver");
                            break;
                        case "FLIGHTSTATUS":
                            @System.Web.Optimization.Scripts.Render("~/bundles/FlightStatus");
                            break;
                        case "IMPORTCARGO":
                            @System.Web.Optimization.Scripts.Render("~/bundles/ImportCargo");
                            break;
                        case "ULDHISTORY":
                            @System.Web.Optimization.Scripts.Render("~/bundles/ULDHistory");
                            break;
                        case "ULDMOVEMENTHISTORY":
                            @System.Web.Optimization.Scripts.Render("~/bundles/ULDMovementHistory");
                            break;
                        case "ULDMONITORING":
                            @System.Web.Optimization.Scripts.Render("~/bundles/ULDMonitoring");
                            break;
                        case "SLA":
                            @System.Web.Optimization.Scripts.Render("~/bundles/SLA");

                            break;
                        case "HANDLING":

                            @System.Web.Optimization.Scripts.Render("~/bundles/Handling");

                            break;
                        case "ESS_DAILYREPORT":

                            @System.Web.Optimization.Scripts.Render("~/bundles/ESS_DAILYREPORT");
                            break;
                        case "DAILYFINALDELIVERYREPORT":
                            @System.Web.Optimization.Scripts.Render("~/bundles/DailyFinalDeliveryReport");
                            break;
                        case "ESS":

                            @System.Web.Optimization.Scripts.Render("~/bundles/ESS");
                            break;
                        case "CREDITLIMIT":
                            @System.Web.Optimization.Scripts.Render("~/bundles/CreditLimit");
                            break;
                        case "CREDITLIMITTRANSACTIONREPORT":
                            @System.Web.Optimization.Scripts.Render("~/bundles/CreditLimitTransactionReport");
                            break;

                        case "SEAAIR":
                            @System.Web.Optimization.Scripts.Render("~/bundles/SeaAir");

                            break;
                        case "CARGOAIRLINEVOLUME":
                            @System.Web.Optimization.Scripts.Render("~/bundles/CargoAirlineVolume");
                            break;
                        case "EXPORTFLIGHTMONITORING":
                            @System.Web.Optimization.Scripts.Render("~/bundles/ExportFlightMonitoring");
                            break;
                        case "IMPORTFLIGHTMONITORING":
                            @System.Web.Optimization.Scripts.Render("~/bundles/ImportFlightMonitoring");
                            break;
                        case "BUILTUPREPORT":
                            @System.Web.Optimization.Scripts.Render("~/bundles/Builtupreport");
                            break;
                        case "NONEXECUTEDBOOKING":
                            @System.Web.Optimization.Scripts.Render("~/bundles/NonExecutedBooking");
                            break;
                    }
                    break;
                case "MAIL":
                    switch (Request.QueryString["Apps"].ToUpper().ToString())
                    {
                        case "AIRMAIL":
                            @System.Web.Optimization.Scripts.Render("~/bundles/AirMail");
                            break;
                        case "APPSPREMANIFEST":
                            @System.Web.Optimization.Scripts.Render("~/bundles/AirMailManifest");
                            break;
                    }
                    break;
                case "BUILDUP":
                    switch (Request.QueryString["Apps"].ToUpper().ToString())
                    {
                        case "AGENTBUILDUP":
                            @System.Web.Optimization.Scripts.Render("~/bundles/AgentBuildUp");
                            break;
                        case "AGENTBUILDUPWEIGHING":
                            @System.Web.Optimization.Scripts.Render("~/bundles/AgentBuildUpWeighing");
                            break;

                    }
                    break;
                case "PERMISSIONS":
                    switch (Request.QueryString["Apps"].ToUpper().ToString())
                    {
                        case "PROCESSDEPENDENCY":
                            @System.Web.Optimization.Scripts.Render("~/bundles/ProcessDependency");
                            break;
                        case "USERS":
                            @System.Web.Optimization.Scripts.Render("~/bundles/Users");
                            break;
                        case "USERSTATUS":
                            @System.Web.Optimization.Scripts.Render("~/bundles/UserStatus");

                            break;
                        case "WINDOWSERVICESREPORT":
                            @System.Web.Optimization.Scripts.Render("~/bundles/WindowServicesReport");
                            break;

                        case "HOLDSHPT":
                            @System.Web.Optimization.Scripts.Render("~/bundles/HoldShpt");
                            break;

                        case "ALERTEVENTS":
                            @System.Web.Optimization.Scripts.Render("~/bundles/AlertEvents");
                            break;
                        case "CHANGEPASSWORD":
                            @System.Web.Optimization.Scripts.Render("~/bundles/ChangePassword");
                            break;
                        case "ALLOTMENT":
                            @System.Web.Optimization.Scripts.Render("~/bundles/Allotment");
                            break;
                        /*---------Add By Pankaj Kumar Ishwar---------*/
                        case "RELEASENOTE":
                            @System.Web.Optimization.Scripts.Render("~/bundles/ReleaseNote");
                            break;
                        /*---------Add By SUSHANT KUMAR NAYAK 22-01-2018 ---------*/
                        case "EMAILALERT":
                            @System.Web.Optimization.Scripts.Render("~/bundles/EmailAlert");
                            break;
                        /*---------Add By devendra ---------*/
                        case "USERTYPE":
                            @System.Web.Optimization.Scripts.Render("~/bundles/UserType");
                            break;
                        /*---------Add By Indra ---------*/
                        case "BANNER":
                            @System.Web.Optimization.Scripts.Render("~/bundles/Banner");
                            break;   
                        /*---------Add By devendra ---------*/
                        @*case "ALERTEVENTTYPE":
                            @System.Web.Optimization.Scripts.Render("~/bundles/AlertEventType");
                            break;*@
                    }
                    break;
                case "SHIPMENT":
                    switch (Request.QueryString["Apps"].ToUpper().ToString())
                    {
                        case "SHORTACCEPTANCE":
                            @System.Web.Optimization.Scripts.Render("~/bundles/ShortAcceptance");
                            break;
                        case "RESERVATIONBOOKING":
                            @System.Web.Optimization.Scripts.Render("~/bundles/ReservationBooking");
                            break;
                        case "SHORTBOOKING":
                            @System.Web.Optimization.Scripts.Render("~/bundles/ShortBooking");
                            break;
                        case "XRAYEXEMPTION":
                            @System.Web.Optimization.Scripts.Render("~/bundles/XrayExemption");
                            break;
                        case "BOOKING":
                            @System.Web.Optimization.Scripts.Render("~/bundles/Booking");
                            break;
                        case "FLIGHTTRANSFER":
                            @System.Web.Optimization.Scripts.Render("~/bundles/FlightTransfer");
                            break;
                        case "AWBSWAPPING":
                            @System.Web.Optimization.Scripts.Render("~/bundles/AWBSwapping");
                            break;
                        case "UNKBOOKING":
                            @System.Web.Optimization.Scripts.Render("~/bundles/UNKBooking");
                            break;

                        case "WALKINGRATE":
                            @System.Web.Optimization.Scripts.Render("~/bundles/WalkingRate");
                            break;
                        case "BACKLOGCARGO":
                            @System.Web.Optimization.Scripts.Render("~/bundles/BackLogCargo");
                            break;
                        case "ASSIGNTEAM":
                            @System.Web.Optimization.Scripts.Render("~/bundles/AssignTeam");
                            break;
                        case "ULDBREAKDOWN":
                            @System.Web.Optimization.Scripts.Render("~/bundles/ULDBreakdown");
                            break;
                        case "RESERVATION":
                            @System.Web.Optimization.Scripts.Render("~/bundles/Reservationindex");
                            break;
                        case "ACCEPTANCE":
                            @System.Web.Optimization.Scripts.Render("~/bundles/Acceptence");
                            break;
                        case "FBL":
                            @System.Web.Optimization.Scripts.Render("~/bundles/FBL");
                            break;
                        case "CCA":
                            @System.Web.Optimization.Scripts.Render("~/bundles/CCA");
                            break;
                        case "HOUSEACCEPTANCE":
                            @System.Web.Optimization.Scripts.Render("~/bundles/HouseIndex");
                            break;
                        case "SLINFO":
                            @System.Web.Optimization.Scripts.Render("~/bundles/SLInfo");
                            break;
                        case "SLICANCELLATION":
                            @System.Web.Optimization.Scripts.Render("~/bundles/SLICancellation");
                            break;
                        case "UCMDISCREPANCYREPORT":
                            @System.Web.Optimization.Scripts.Render("~/bundles/UCMDiscrepancyReport");
                            break;

                        case "UWSINFO":
                            @System.Web.Optimization.Scripts.Render("~/bundles/UWSInfo");
                            break;
                        case "FLIGHTCONTROL":
                            @System.Web.Optimization.Scripts.Render("~/bundles/FlightControl");
                            @*@System.Web.Optimization.Scripts.Render("~/JScript/FlightControl/FlightControl");*@
        break;

    case "GATEPASS":
        @*@System.Web.Optimization.Scripts.Render("~/JScript/GatePass");*@
                            @System.Web.Optimization.Scripts.Render("~/bundles/GatePass");

                            break;
                        case "AMENDFLIGHTSTATUS":
                            @System.Web.Optimization.Scripts.Render("~/bundles/AmendFlightShipment");
                            break;
                        case "GROUPBOOKING":
                            @System.Web.Optimization.Scripts.Render("~/bundles/GroupBooking");
                            break;
                        case "BUILDUP":
                            @System.Web.Optimization.Scripts.Render("~/bundles/Buildup");
                            break;
                        case "READYTOUNLOADING":
                            @System.Web.Optimization.Scripts.Render("~/bundles/ReadyToUnloading");
                            break;
                        case "PAYMENT":
                            @System.Web.Optimization.Scripts.Render("~/bundles/ShipmentPayment");
                            break;
                        case "FWB":
                            @System.Web.Optimization.Scripts.Render("~/bundles/FWB");
                            break;
                        case "TRACKING":
                            @System.Web.Optimization.Scripts.Render("~/bundles/Tracking");
                            break;
                        case "ULDOUT":
                            @System.Web.Optimization.Scripts.Render("~/bundles/ExportUldOut");
                            break;
                        case "LUC":
                            @System.Web.Optimization.Scripts.Render("~/bundles/LUC");
                            break;
                        case "LUCIN":
                            @System.Web.Optimization.Scripts.Render("~/bundles/LUCIN");
                            break;
                        case "UWSPRINT":
                            @System.Web.Optimization.Scripts.Render("~/bundles/UwsPrint");
                            break;
                        case "UCM":
                            @System.Web.Optimization.Scripts.Render("~/bundles/UCM");
                            break;
                        case "UCMINOUTALERT":
                            @System.Web.Optimization.Scripts.Render("~/bundles/UCMINOUTALERT");
                            break;
                        case "FHLEXPORT":
                            @System.Web.Optimization.Scripts.Render("~/bundles/FHLExport");
                            break;
                        case "RETURNTOSHIPPER":
                            @System.Web.Optimization.Scripts.Render("~/bundles/ReturntoShipper");
                            break;
                        case "AWBTRACKING":
                            if (showMessage != "You do not have permission to access this page.")
                            {
                                @System.Web.Optimization.Scripts.Render("~/bundles/AWBTracking");
                            }
                            break;
                        case "RUSHHANDLINGAPPROVAL":
                            @System.Web.Optimization.Scripts.Render("~/bundles/RushHandlingApproval");
                            break;
                        case "BACKDATEBOOKING":
                            @System.Web.Optimization.Scripts.Render("~/bundles/BackDateBooking");
                            break;
                        case "MARINEINSURANCE":
                            @System.Web.Optimization.Scripts.Render("~/bundles/MarineInsurance");
                            break;
                    }
                    break;



                //Added By Rahul Kumar Singh 13-05-2017 For ActivityLog

                case "AUDITLOG":
                    switch (Request.QueryString["Apps"].ToUpper().ToString())
                    {
                        case "ACTIVITYLOG":
                            @System.Web.Optimization.Scripts.Render("~/bundles/ActivityLog.js");
                            break;



                    }
                    break;





                /// Modify By Sushant
                case "RATE":
                    switch (Request.QueryString["Apps"].ToUpper().ToString())
                    {
                        case "RATE":
                            @System.Web.Optimization.Scripts.Render("~/bundles/Rate");
                            break;
                        case "RATEHEAVYWEIGHTSURCHARGE":
                            @System.Web.Optimization.Scripts.Render("~/bundles/RateHeavyWeightSurcharge");
                            break;
                        case "DUECARRIER":
                            @System.Web.Optimization.Scripts.Render("~/bundles/DueCarrier");
                            break;
                        case "RATESURCHARGESPHC":
                            @System.Web.Optimization.Scripts.Render("~/bundles/RateSurChargeSPHC");
                            break;
                        case "RATESURCHARGECOMMODITY":
                            @System.Web.Optimization.Scripts.Render("~/bundles/RateSurchargeCommodity");
                            break;
                        case "RATEAIRLINEMASTER":
                            @System.Web.Optimization.Scripts.Render("~/bundles/RateAirlineMaster");
                            break;

                        case "RATEEXCHANGEDUECARRIER":
                            @System.Web.Optimization.Scripts.Render("~/bundles/RateExchangeDueCarrier");
                            break;

                        case "RATEGLOBALDUECARRIER":
                            @System.Web.Optimization.Scripts.Render("~/bundles/RateGlobalDueCarrier");
                            break;
                        case "EXCHANGERATE":
                            @System.Web.Optimization.Scripts.Render("~/bundles/ExchangeRate");
                            break;
                        case "RATESEARCH":
                            @System.Web.Optimization.Scripts.Render("~/bundles/RateSearch");
                            break;
                        case "RATESURCHARGE":
                            @System.Web.Optimization.Scripts.Render("~/bundles/RateSurcharge");
                            break;
                        //Added By Vsingh 19 Jan 2017 Task #
                        case "SPOTRATE":
                            @System.Web.Optimization.Scripts.Render("~/bundles/SpotRate");
                            break;
                        //Added By Vsingh 19 Jan 2017 Task #
                        //Added By Vkumar 19 Jan 2017 Task # 72
                        case "OTHERCHARGES":
                            @System.Web.Optimization.Scripts.Render("~/bundles/OtherCharges");
                            break;

                        case "OTHERCHARGESHISTORY":
                            @System.Web.Optimization.Scripts.Render("~/bundles/OtherChargesHistory");
                            break;
                            @*@System.Web.Optimization.Scripts.Render("~/bundles/OtherCharges");
                                break;*@
    case "RATEDETAILSHISTORY":
        @System.Web.Optimization.Scripts.Render("~/bundles/RateDetailsHistory");
        break;
    case "AGENTGROUP":
        @System.Web.Optimization.Scripts.Render("~/bundles/AgentGroup");
                            break;

                        case "TAXRATE":
                            @System.Web.Optimization.Scripts.Render("~/bundles/TaxRate");
                            break;
                        case "TAXLOGS":
                            @System.Web.Optimization.Scripts.Render("~/bundles/TaxLogs");
                            break;
                        case "MANAGECLASSRATE":
                            @System.Web.Optimization.Scripts.Render("~/bundles/ManageClassRate");
                            break;

                        case "MANAGETACTRATE":
                            @System.Web.Optimization.Scripts.Render("~/bundles/ManageTactRate");
                            break;
                        case "SEARCHTACTRATE":
                            @System.Web.Optimization.Scripts.Render("~/bundles/SearchTactRate");
                            break;
                            //Added By Shahbaz Akhtar 1 Feb 2017
                            //Ends
                    }
                    break;
                case "STOCK":
                    switch (Request.QueryString["Apps"].ToUpper().ToString())
                    {
                        case "STOCKMANAGEMENT":
                            @System.Web.Optimization.Scripts.Render("~/bundles/StockManagement");
                            break;
                        case "RETURNTOOFFICE":
                            @System.Web.Optimization.Scripts.Render("~/bundles/ReturnToOffice");
                            break;
                        case "RETURNFROMACCOUNT":
                            @System.Web.Optimization.Scripts.Render("~/bundles/ReturnFromAccount");
                            break;
                        case "STOCKVALIDATE":
                            @System.Web.Optimization.Scripts.Render("~/bundles/StockValidate");
                            break;
                        case "STOCKAWB":
                            @System.Web.Optimization.Scripts.Render("~/bundles/StockAWB");
                            break;
                        case "AWBSTOCK":
                            @System.Web.Optimization.Scripts.Render("~/bundles/AWBStock");

                            break;
                        case "AWBLOST":
                            @System.Web.Optimization.Scripts.Render("~/bundles/AWBLost");
                            break;
                        case "AWBVOID":
                            @System.Web.Optimization.Scripts.Render("~/bundles/AWBVoid");
                            break;
                        case "AWBBLACKLISTED":
                            @System.Web.Optimization.Scripts.Render("~/bundles/AWBBlacklisted");
                            break;
                        case "AWBRESERVED":
                            @System.Web.Optimization.Scripts.Render("~/bundles/AWBReserved");
                            break;
                        case "ISSUEDISTRIBUTEDSTOCKTOSUBBRANCH":
                            @System.Web.Optimization.Scripts.Render("~/bundles/IssueDistributedStocktoSubBranch");
                            break;
                    }
                    break;

                case "SPACECONTROL":
                    switch (Request.QueryString["Apps"].ToUpper().ToString())
                    {
                        case "ALLOCATION":
                            @System.Web.Optimization.Scripts.Render("~/bundles/SpaceAllocation");
                            break;
                        case "ALLOCATIONACCOUNT":
                            @System.Web.Optimization.Scripts.Render("~/bundles/SpaceAllocationAccount");
                            break;
                        case "AWBQUEUEMANAGEMENT":
                            @System.Web.Optimization.Scripts.Render("~/bundles/AWBQueueManagement");
                            break;
                        case "FREIGHTBOOKINGLIST":
                            @System.Web.Optimization.Scripts.Render("~/bundles/FreightBookingList");
                            break;
                    }
                    break;

                case "ACCOUNTS":
                    switch (Request.QueryString["Apps"].ToUpper().ToString())
                    {
                        case "PAYMENT":
                            @System.Web.Optimization.Scripts.Render("~/bundles/AccountsPayment");
                            break;
                        case "CREDITDEBITNOTE":
                            @System.Web.Optimization.Scripts.Render("~/bundles/CreditDebitNote");
                            break;
                        case "CREDITDEBITNOTEAPPROVAL":
                            @System.Web.Optimization.Scripts.Render("~/bundles/CreditDebitNoteApproval");
                            break;
                        case "CHARGEGROUP":
                            @System.Web.Optimization.Scripts.Render("~/bundles/ChargeGroup");
                            break;
                        case "LEDGER":

                            @System.Web.Optimization.Scripts.Render("~/bundles/Ledger");
                            break;
                        case "TRANSACTIONHISTORY":

                            @System.Web.Optimization.Scripts.Render("~/bundles/TransactionHistory");
                            break;

                        case "NOTOC":
                            @System.Web.Optimization.Scripts.Render("~/bundles/NOTOC");
                            break;
                        case "CASHREGISTER":
                            @System.Web.Optimization.Scripts.Render("~/bundles/CashRegister");

                            @*<script>
                                    var isAccountClosed = '@Session["IsAccountClosed"]';
                                </script>*@break;
    case "DIRECTPAYMENT":
        @System.Web.Optimization.Scripts.Render("~/bundles/DirectPayment");
                            break;
                        case "VERIFYPAYMENT":
                            @System.Web.Optimization.Scripts.Render("~/bundles/VerifyPayment");
                            break;
                        case "APPROVEPAYMENT":
                            @System.Web.Optimization.Scripts.Render("~/bundles/ApprovePayment");
                            break;
                        case "REVERSEPAYMENT":
                            @System.Web.Optimization.Scripts.Render("~/bundles/ReversePayment");
                            break;
                        case "INVOICEGROUP":
                            @System.Web.Optimization.Scripts.Render("~/bundles/InvoiceGroup");
                            break;

                        case "SUMMARYREPORT":
                            @System.Web.Optimization.Scripts.Render("~/bundles/SummaryReport");
                            break;
                        // Added by Arman Ali  05 Apr 2017
                        case "CREDITLIMITREPORT":
                            @System.Web.Optimization.Scripts.Render("~/bundles/CreditLimitReport");
                            break;
                    }
                    break;
                case "ULD":
                    switch (Request.QueryString["Apps"].ToUpper().ToString())
                    {
                        case "ULDINVENTORY":
                            @System.Web.Optimization.Scripts.Render("~/bundles/ULDULDInventory");
                            break;
                        case "ULDTYPE":
                            @System.Web.Optimization.Scripts.Render("~/bundles/ULDType");
                            break;
                        case "ULDSTOCK":
                            @System.Web.Optimization.Scripts.Render("~/bundles/ULDStock");
                            break;
                        case "ULDSTOCKNONINVENTORY":
                            @System.Web.Optimization.Scripts.Render("~/bundles/ULDStockNonInventory");
                            break;
                        case "CITYWISEULDALLOCATION":
                            @System.Web.Optimization.Scripts.Render("~/bundles/CityWiseULDAllocation");
                            break;
                        case "ULDTRACKING":
                            @System.Web.Optimization.Scripts.Render("~/bundles/ULDTracking");
                            break;
                        case "ULDINCOMPATIBILITY":
                            @System.Web.Optimization.Scripts.Render("~/bundles/UldInCompatibility");
                            break;
                        case "ULDSTACK":
                            @System.Web.Optimization.Scripts.Render("~/bundles/UldStack");
                            break;
                        case "ULDREPAIR":
                            @System.Web.Optimization.Scripts.Render("~/bundles/ULDRepair");
                            break;
                        case "ULDVENDORPRICELIST":
                            @System.Web.Optimization.Scripts.Render("~/bundles/VendorPriceList");
                            break;
                        /****************************Add by Pankaj Kumar Ishwar on 14-08-2017**********************/
                        case "ULDCHARGE":
                            @System.Web.Optimization.Scripts.Render("~/bundles/ULDCharge");
                            break;
                        case "ULDSLACALENDAR":
                            @System.Web.Optimization.Scripts.Render("~/bundles/ULDSLACalendar");
                            break;

                        case "ULDINVOICE":
                            @System.Web.Optimization.Scripts.Render("~/bundles/ULDInvoice");
                            break;
                        //Added by devendra singh

                        case "ULDSLA":
                            @System.Web.Optimization.Scripts.Render("~/bundles/ULDSLA");
                            break;
                        case "MAINTENANCETYPE":
                            @System.Web.Optimization.Scripts.Render("~/bundles/MaintenanceType");
                            break;
                        case "ULDALLOCATIONREPORT":
                            @System.Web.Optimization.Scripts.Render("~/bundles/ULDAllocationReport");
                            break;
                        case "ULDREPORTS":
                            @System.Web.Optimization.Scripts.Render("~/bundles/ULDReports");
                            break;
                        case "ULDSUPPORTREQUEST":
                            @System.Web.Optimization.Scripts.Render("~/bundles/ULDSupportRequest");
                            break;
                        case "ULDSUPPORTASSIGNED":
                            @System.Web.Optimization.Scripts.Render("~/bundles/ULDSupportAssigned");
                            break;
                        case "ULDSUPPORTPROCESSED":
                            @System.Web.Optimization.Scripts.Render("~/bundles/ULDSupportProcessed");
                            break;
                        case "DEMURRAGEFREEPERIOD":
                            @System.Web.Optimization.Scripts.Render("~/bundles/DemurrageFreePeriod");
                            break;
                        case "REPAIRSLAREPORT":
                            @System.Web.Optimization.Scripts.Render("~/bundles/ULDRepairSLAReport"); break;
                        case "ULDSTOCKREPORTDETAILS":
                            @System.Web.Optimization.Scripts.Render("~/bundles/ULDStockReportDetails"); break;
                        case "SCMDISCREPANCY":
                            @System.Web.Optimization.Scripts.Render("~/bundles/SCMDiscrepancy"); break;
                        case "ULDSTATISTIC":
                            @System.Web.Optimization.Scripts.Render("~/bundles/ULDStatisticReports");
                            break;

                    }

                    break;
                case "WAREHOUSE":
                    switch (Request.QueryString["Apps"].ToUpper().ToString())
                    {
                        case "LOCATIONSUBTYPE":
                            @System.Web.Optimization.Scripts.Render("~/bundles/LocationSubType");
                            break;
                        case "WAREHOUSELOCATION":

                            @System.Web.Optimization.Scripts.Render("~/bundles/WarehouseLocation");
                            break;
                        case "AREA":

                            @System.Web.Optimization.Scripts.Render("~/bundles/Area");
                            break;
                        case "WAREHOUSEPLANNING":

                            @System.Web.Optimization.Scripts.Render("~/bundles/WarehousePlanning");
                            break;
                        case "WAREHOUSESETUP":

                            @System.Web.Optimization.Scripts.Render("~/bundles/WarehouseSetup");
                            break;
                        case "LOCATIONSEARCH":
                            @System.Web.Optimization.Scripts.Render("~/bundles/LocationSearch");
                            break;
                        case "LOCATIONTYPE":
                            @System.Web.Optimization.Scripts.Render("~/bundles/LocationType");
                            break;
                    }
                    break;

                case "IRREGULARITY":
                    switch (Request.QueryString["Apps"].ToUpper().ToString())
                    {
                        case "IRREGULARITYSEVERITY":
                            @System.Web.Optimization.Scripts.Render("~/bundles/IrregularitySeverity");
                            break;
                        case "IRREGULARITYDAMAGE":

                            @System.Web.Optimization.Scripts.Render("~/bundles/IrregularityDamage");
                            break;
                        case "IRREGULARITYNONDELIVERYREASON":

                            @System.Web.Optimization.Scripts.Render("~/bundles/IrregularityNonDeliveryReason");
                            break;
                        case "IRREGULARITYPACKING":
                            @System.Web.Optimization.Scripts.Render("~/bundles/IrregularityPacking");
                            break;
                        case "IRREGULARITY":
                            @System.Web.Optimization.Scripts.Render("~/bundles/Irregularity");
                            break;
                        case "IRREGULARITYEVENT":
                            @System.Web.Optimization.Scripts.Render("~/bundles/IrregularityEvent");
                            break;
                        case "IRREGULARITYRECUPERATION":
                            @System.Web.Optimization.Scripts.Render("~/bundles/IrregularityRecuperation");
                            break;
                        case "IRREGULARITYDISPOSALADVICE":
                            @System.Web.Optimization.Scripts.Render("~/bundles/IrregularityDisposalAdvice");
                            break;
                        case "IRREGULARITYSTATUS":
                            @System.Web.Optimization.Scripts.Render("~/bundles/IrregularityStatus");
                            break;
                        case "SPECIALCARGO":
                            @System.Web.Optimization.Scripts.Render("~/bundles/SpecialCargo");
                            break;
                        case "IRREGULARITYINCIDENT":
                            @System.Web.Optimization.Scripts.Render("~/bundles/IrregularityIncident");
                            break;

                        case "COMPLAINT":
                            @System.Web.Optimization.Scripts.Render("~/bundles/Complaint");
                            break;

                            @System.Web.Optimization.Scripts.Render("~/Scripts/maketrans");
                            break;

                        case "APPLICATIONENTITY":
                            @System.Web.Optimization.Scripts.Render("~/bundles/ApplicationEntity");
                            break;

                        case "CLAIM":
                            @System.Web.Optimization.Scripts.Render("~/bundles/Claim");
                            break;
                        case "IRREGULARITYAWBREPORT":
                            @System.Web.Optimization.Scripts.Render("~/bundles/IrregularityAWBReport");
                            break;
                        case "CARGOCLAIMREPORT":
                            @System.Web.Optimization.Scripts.Render("~/bundles/CargoClaimReport");
                            break;
                        case "IRREGULARITYFLIGHTREPORT":
                            @System.Web.Optimization.Scripts.Render("~/bundles/IrregularityFlightReport");
                            break;
                        case "CLAIMREPORT":
                            @System.Web.Optimization.Scripts.Render("~/bundles/ClaimReport");
                            break;
                        case "COMPLAINREPORT":
                            @System.Web.Optimization.Scripts.Render("~/bundles/ComplainReport");
                            break;
                        case "CLAIMCOMPLAINTTRACKING":
                            @System.Web.Optimization.Scripts.Render("~/bundles/ClaimComplaintTracking");
                            break;
                    }
                    break;

                case "INVENTORY":
                    switch (Request.QueryString["Apps"].ToUpper().ToString())
                    {
                        case "INVENTORYVEHTYPE":
                            @System.Web.Optimization.Scripts.Render("~/bundles/InventoryVehType");
                            break;
                        case "INVENTORYITEM":
                            @System.Web.Optimization.Scripts.Render("~/bundles/InventoryItem");
                            break;

                        case "INVVEHICLE":
                            @System.Web.Optimization.Scripts.Render("~/bundles/InvVehicle");
                            break;

                        case "INVVEHICLESERVICE":
                            @System.Web.Optimization.Scripts.Render("~/bundles/InvVehicleService");
                            break;

                        case "CONSUMABLESTOCK":
                            @System.Web.Optimization.Scripts.Render("~/bundles/ConsumableStock");
                            break;
                        case "CONSUMABLE":
                            @System.Web.Optimization.Scripts.Render("~/bundles/Consumable");
                            break;

                        case "ISSUECONSUMABLES":
                            @System.Web.Optimization.Scripts.Render("~/bundles/IssueConsumables");
                            break;
                        case "RETURNCONSUMABLE":
                            @System.Web.Optimization.Scripts.Render("~/bundles/ReturnConsumable");
                            break;
                        case "INVENTORYSTOCKLIST":
                            @System.Web.Optimization.Scripts.Render("~/bundles/InventoryStockList");
                            break;
                    }

                    break;
                case "SECURITY":
                    switch (Request.QueryString["Apps"].ToUpper().ToString())
                    {
                        case "GROUPS":
                            @System.Web.Optimization.Scripts.Render("~/bundles/Group");
                            break;
                    }
                    break;

                case "TOOLS":
                    switch (Request.QueryString["Apps"].ToUpper().ToString())
                    {
                        case "SEAAIRTOOL":
                            @System.Web.Optimization.Scripts.Render("~/bundles/SeaAirTool");
                            break;
                    }
                    break;

                case "ROSTER":
                    switch (Request.QueryString["Apps"].ToUpper().ToString())
                    {
                        case "ROSTERTEAMID":
                            @System.Web.Optimization.Scripts.Render("~/JScript/Roster/RosterTeamID.js?ver=" + dttemp);
                            break;
                        case "SHIFTMASTER":
                            @System.Web.Optimization.Scripts.Render("~/JScript/Roster/ShiftMaster.js?ver=" + dttemp);
                            break;

                        case "ROSTEREMPLOYEE":
                            @System.Web.Optimization.Scripts.Render("~/JScript/Roster/RosterEmployee.js?ver=" + dttemp);
                            break;
                        case "MANAGETEAM":
                            @System.Web.Optimization.Scripts.Render("~/JScript/Roster/ManageTeam.js?ver=" + dttemp);
                            break;
                        case "MANAGEROSTER":
                            @System.Web.Optimization.Scripts.Render("~/JScript/Roster/ManageRoster.js?ver=" + dttemp);
                            break;
                        case "RESOURCEALLOCATION":
                            @System.Web.Optimization.Scripts.Render("~/JScript/Roster/RosterResourceAllocation.js?ver=" + dttemp);
                            break;
                        case "DUTYAREA":
                            @System.Web.Optimization.Scripts.Render("~/JScript/Roster/DutyArea.js?ver=" + dttemp);
                            break;
                    }
                    break;
                case "TARIFF":
                    switch (Request.QueryString["Apps"].ToUpper().ToString())
                    {
                        case "ROUNDOFFCURRENCY":
                            @System.Web.Optimization.Scripts.Render("~/bundles/RoundOffCurrency");

                            break;
                        case "BASISOFCHARGE":
                            @System.Web.Optimization.Scripts.Render("~/bundles/BasisOfCharge");
                            break;
                        case "ESSCHARGES":
                            @System.Web.Optimization.Scripts.Render("~/bundles/ESSCharges");
                            break;
                        case "MANAGETARIFF":
                            @System.Web.Optimization.Scripts.Render("~/bundles/ManageTariff");
                            break;
                        case "HANDLINGCHARGES":
                            @System.Web.Optimization.Scripts.Render("~/bundles/HandlingCharges");
                            @System.Web.Optimization.Scripts.Render("~/Scripts/maketrans");

                            break;
                        case "HOLIDAYLIST":
                            @System.Web.Optimization.Scripts.Render("~/bundles/HolidayList");
                            break;
                        case "GENERATEINVOICE":
                            @System.Web.Optimization.Scripts.Render("~/bundles/GenerateInvoice");
                            break;

                        case "TARIFFSEARCH":
                            @System.Web.Optimization.Scripts.Render("~/bundles/TariffSearch");
                            break;
                    }
                    break;
                case "IMPORT":
                    switch (Request.QueryString["Apps"].ToUpper().ToString())
                    {
                        case "INBOUNDFLIGHT":
                            @System.Web.Optimization.Scripts.Render("~/bundles/InboundFlight");
                            break;
                        case "DELIVERYORDER":
                            @System.Web.Optimization.Scripts.Render("~/bundles/DeliveryOrder");
                            break;
                        case "FLIGHTARRIVAL":
                            @System.Web.Optimization.Scripts.Render("~/bundles/FlightArrival");
                            break;
                        case "RECEIVEDCONSUMABLE":
                            @System.Web.Optimization.Scripts.Render("~/bundles/ReceivedConsumable");
                            break;

                        case "FWBIMPORT":
                            @System.Web.Optimization.Scripts.Render("~/bundles/FWBImport");
                            break;

                        case "IMPORTFWB":
                            @System.Web.Optimization.Scripts.Render("~/bundles/ImportFWBMaster");
                            //@System.Web.Optimization.Scripts.Render("~/bundles/ImportFWB");
                            break;

                        case "TRANSITMONITORING":
                            @System.Web.Optimization.Scripts.Render("~/bundles/TransitMonitoring");
                            break;
                        case "CTM":
                            @System.Web.Optimization.Scripts.Render("~/bundles/CTM");
                            break;
                        case "TRANSITFWB":
                            @System.Web.Optimization.Scripts.Render("~/bundles/TransitFWB");
                            break;

                        case "IMPORTRFS":
                            @System.Web.Optimization.Scripts.Render("~/bundles/ImportRFS");
                            break;
                    }
                    break;

                case "EXPORT":
                    switch (Request.QueryString["Apps"].ToUpper().ToString())
                    {

                        case "RAMPOFFLOAD":
                            @System.Web.Optimization.Scripts.Render("~/bundles/RampOffload");
                            break;

                    }
                    break;


                case "EDI":
                    switch (Request.QueryString["Apps"].ToUpper().ToString())
                    {
                        case "EVENTMASTER":
                            @System.Web.Optimization.Scripts.Render("~/bundles/EventMaster");
                            break;
                        case "MESSAGETYPEMASTER":
                            @System.Web.Optimization.Scripts.Render("~/bundles/MessageTypeMaster");

                            break;

                        case "EVENTMESSAGETRANS":
                            @System.Web.Optimization.Scripts.Render("~/bundles/EventMessageTrans");
                            break;


                        case "RECIPIENTMSGCONFIG":
                            @System.Web.Optimization.Scripts.Render("~/bundles/RecipientMsgConfig");
                            break;

                        case "TELEXTYPE":
                            @System.Web.Optimization.Scripts.Render("~/bundles/TelexType");
                            break;
                        case "MOP":
                            @System.Web.Optimization.Scripts.Render("~/bundles/MOP");
                            break;

                    }
                    break;

                case "RFS":
                    switch (Request.QueryString["Apps"].ToUpper().ToString())
                    {
                        case "RFS":
                            @System.Web.Optimization.Scripts.Render("~/bundles/RFS");
                            break;
                    }
                    break;
                case "DASHBOARD":
                    switch (Request.QueryString["Apps"].ToUpper().ToString())
                    {
                        case "DASHBOARD":
                            @System.Web.Optimization.Scripts.Render("~/bundles/Dashboard");
                            break;
                        case "MAINDASHBOARD":
                            @*<script type="text/javascript">
                                    $(function () {
                                      $("body").append("<iframe width='100%' height='100%' src='HtmlFiles/Dashboard/MainDashboard.html'></iframe>");
                                    });
                                </script>*@
                            @System.Web.Optimization.Scripts.Render("~/bundles/Dashboard");
                            break;
                    }
                    break;
                //== Added by arman Date 2017-07-22
                case "CRA":
                    switch (Request.QueryString["Apps"].ToUpper().ToString())
                    {
                        case "CRAINVOICELIST":
                            @System.Web.Optimization.Scripts.Render("~/bundles/CRAInvoiceList");
                            break;
                    }
                    break;
                    //=========end
            }
        }

    }
}
