@* Remove this section if you are using bundling *@
<script type="text/javascript" src="~/Scripts/Login.js"></script>
<script src='https://www.google.com/recaptcha/api.js'></script>

<link type="text/css" rel="stylesheet" href="~/Styles/CfiMessage.css" />
<script type="text/javascript" src="~/Scripts/CfiMessage.js"></script>
<script type="text/javascript" src="~/Scripts/commono.js"></script>

<style>
    .short {
        font-weight: bold;
        color: #FF0000;
        font-size: 11px;
    }

    .weak {
        font-weight: bold;
        color: orange;
        font-size: 11px;
    }

    .good {
        font-weight: bold;
        color: #2D98F3;
        font-size: 11px;
    }

    .strong {
        font-weight: bold;
        color: limegreen;
        font-size: 11px;
    }


    .divshort {
        color: #FF0000;
        width: 25%;
        border: solid;
        background-color: #FF0000;
    }

    .divweak {
        color: orange;
        width: 50%;
        border: solid;
        background-color: orange;
    }

    .divgood {
        color: #2D98F3;
        width: 75%;
        border: solid;
        background-color: #2D98F3;
    }

    .divstrong {
        color: limegreen;
        width: 97%;
        border: solid;
        background-color: limegreen;
    }
</style>
@{
    Layout = "~/_SiteLayout.cshtml";
    Page.Title = "Log in";

    if (Request.Cookies["UserName"] != null && Request.Cookies["Password"] != null)
    {
        @Html.Hidden("HdnUName", Request.Cookies["UserName"].Value)
        @Html.Hidden("HdnPass", Request.Cookies["Password"].Value)
    }
  

    // Initialize general page variables
    var email = ""; var CaptchaCode = "";
    var password = "";
    var rememberMe = false;
    var browser = "";
    //var ip = "";
    var SessionID = "";

    CargoFlash.Cargo.DataService.Common.CommonService CS = new CargoFlash.Cargo.DataService.Common.CommonService();
    Int32 ISCaptcha = Convert.ToInt32(CS.GetSystemSetting("ISCaptcha"));

    var hostname = "";
    var returnUrl = Request.QueryString["ReturnUrl"];
    if (returnUrl.IsEmpty())
    {
        // Some external login providers always require a return URL value

        returnUrl = Href("~/");
    }
    var islogout = Request.QueryString["islogout"];
    if (!string.IsNullOrEmpty(islogout))
    {
        CargoFlash.Cargo.DataService.LoginService loginservice = new CargoFlash.Cargo.DataService.LoginService();
        bool isLogout = loginservice.LogoutSession(((CargoFlash.Cargo.Model.UserLogin)Session["UserDetail"]));
        if (isLogout)
        {
            Session.Clear();
            Session.Abandon();
            Session["UserDetail"] = null;
            if (Request.Cookies["UserDetail"] != null)
            {
                HttpCookie myCookie = new HttpCookie("UserDetail");
                myCookie.Expires = DateTime.Now.AddDays(-1);
                myCookie.Value = "0";
                Response.Cookies.Add(myCookie);
                Response.Cookies.Remove("UserDetail");
            }
            Response.Redirect("~/Account/Login.cshtml");
        }
    }


    // If this is a POST request, validate and process data
    if (IsPost)
    {
        // Setup validation
        if (string.IsNullOrEmpty(Request["email"]))
        {
            Validation.AddFormError("User ID is required.");
        }
        if (string.IsNullOrEmpty(Request["Password"]))
        {
            Validation.AddFormError("Password is required.");
        }

        if (ISCaptcha == 2)
        {
            if (string.IsNullOrEmpty(Request["CaptchaCode"]))
            {
                Validation.AddFormError("Captcha is required.");
            }
        }
        Validation.Add("password",
            Validator.StringLength(
                maxLength: Int32.MaxValue));
        //,
        //minLength: 5,
        //errorMessage: "Invalid UserID and Password."));

        if (Session["UserDetail"] != null)
        {
            Response.Redirect("~/Index.cshtml");
        }

        if (Validation.IsValid())
        {
            try
            {
                email = Request.Form["email"];
                password = Request.Form["password"];
                rememberMe = Request.Form["rememberMe"].AsBool();
                browser = Request.Browser.Type;
                hostname = Dns.GetHostName();
                SessionID = HttpContext.Current.Session.SessionID;

                if (ISCaptcha == 2)
                {
                    CaptchaCode = Request.Form["CaptchaCode"];
                }
                else if (ISCaptcha == 3)
                {
                    CaptchaCode = Request["g-recaptcha-response"];
                }



                CargoFlash.Cargo.Model.UserLogin userLogin = new CargoFlash.Cargo.Model.UserLogin();
                CargoFlash.Cargo.DataService.LoginService loginservice = new CargoFlash.Cargo.DataService.LoginService();

                string ip = loginservice.GetIPAddress();

                AntiForgery.Validate();

                try
                {
                    userLogin = loginservice.GetLoginRecord(email, password, ip, hostname, browser, SessionID, CaptchaCode);
                    loginservice.RememberMe(rememberMe, email, password);

                    if (Request.Cookies["UserDetail"] == null)
                    {
                        HttpCookie myCookie = new HttpCookie("UserDetail");
                        myCookie.Value = userLogin.SysSetting["SessionTimeout"];
                        myCookie.Expires = DateTime.Now.AddDays(1);
                        Response.Cookies.Add(myCookie);
                    }
                    Session["UserDetail"] = userLogin;
                    Response.Redirect("~/Index.cshtml");
                }
                catch (System.ServiceModel.FaultException ex)
                {
                    Validation.AddFormError(ex.Message);
                    if (ex.Message =="Your password has been expired kindly proceed with change password")
                    {
                        @Html.Hidden("HdnPasswordExpire", "true");
                        @Html.Hidden("HdnUserEmail", email);
                    }
                }
            }
            catch (Exception ex)
            {
                string strerror = ex.Message;
                Validation.AddFormError(strerror);
            }
        }
    }
}


<hgroup class="title"></hgroup>

<section id="loginForm">
    @*<h2>User Authentication</h2>*@
    <form method="post" autocomplete="off">

        @AntiForgery.GetHtml()
        @* If one or more validation errors exist, show an error *@
        <div id="validationMessage" style="display:none;">
            @Html.ValidationSummary("", excludeFieldErrors: true, htmlAttributes: null)
        </div>
       @* @Html.ValidationSummary("", excludeFieldErrors: true, htmlAttributes: null)*@
        <label for="message" id="message" class="error-label"></label>
        <fieldset >
            <legend>Log in to Your Account</legend>
            <ol>
			<li style="
    text-align: center;
"><img src="../../Images/vs.jpg" style="text-align: center;
    height: 110px;
    width: 260px;
"></li>
                <li class="email">
                    <label for="email" @if (!ModelState.IsValidField("email")) { <text> class="error-label" </text>      }>User ID</label>
                    <input type="text" id="email" name="email" autocomplete="off" value="@email" @Validation.For("email") />
                    @* Write any user name validation errors to the page *@
                    @Html.ValidationMessage("email")
                </li>
                <li class="password">
                    <label for="password" @if (!ModelState.IsValidField("password")) { <text> class="error-label" </text>                             }>Password</label>
                    <input type="password" id="password" autocomplete="off" name="password" @Validation.For("password") />
                    @Html.ValidationMessage("password")
                </li>
                @*<li class="password">
                    <label for="password" @if (!ModelState.IsValidField("password")) { <text> class="error-label" </text>      }>Password</label>
                    <input type="password" id="password" autocomplete="off" name="password" @Validation.For("password") />
                    @*uncoment this id="ForgetPassword" line, it will on all functionality for ForgetPassword *@
                    @*<label id="ForgetPassword" onclick="ForgetPassword();" style="font-size: 12px; text-decoration: underline; cursor: pointer !important; text-align:left;">Forgot my Password?</label>*@

                    @* Write any password validation errors to the page
                    @Html.ValidationMessage("password")
                </li>*@
                @*Added by arman ali 2017-10-24*@
@if (ISCaptcha == 2)
{
    <li>
        <label for="CaptchaCode" @if (!ModelState.IsValidField("CaptchaCode")) { <text> class="error-label" </text> }>Captcha</label>
        <input type="text" id="CaptchaCode" name="CaptchaCode" style="margin-bottom: 4px;" autocomplete="off" value="@CaptchaCode" @Validation.For("CaptchaCode") />
        @Html.ValidationMessage("CaptchaCode")
    </li>
    <li>
        <img src="~/Handler/CaptchaHandler.ashx" id="imgCaptcha" />
        <a href="#" onclick="RefreshCaptcha();">Refresh</a>
    </li>
}
else if (ISCaptcha == 3)
{
    <li>
        <div class="g-recaptcha" data-sitekey="6LdYXhUUAAAAALCN4_9-F0tmH64kjpI88z79b8N1"></div>
    </li>
}
//commented by arman ali 2017-10-24            
    @*<li>
                        <label for="CaptchaCode" @if (!ModelState.IsValidField("CaptchaCode")){ <text> class="error-label" </text>    }>Enter below code</label>
                        <input type="text" id="CaptchaCode" name="CaptchaCode" autocomplete="off" value="@CaptchaCode" @Validation.For("CaptchaCode") />
                         @Html.ValidationMessage("CaptchaCode")
                    </li>
                @if (ISCaptcha == 1)
                {
                    <li>
                        <div class="g-recaptcha" data-sitekey="6LdYXhUUAAAAALCN4_9-F0tmH64kjpI88z79b8N1"></div>
                    </li>
                }*@
                @*<li>
                        <img src="~/Handler/CaptchaHandler.ashx" id="imgCaptcha" />
                        <a href="#" onclick="RefreshCaptcha();">Refresh</a>
                    </li>*@
                <li class="remember-me">
                    <input type="checkbox" id="rememberMe" name="rememberMe" value="true" checked="@rememberMe" />
                    <label class="checkbox" for="rememberMe">Remember me?</label>
                </li>
            </ol>
            <input type="submit" value="Log In" id="LogInBtn" />  
            @*Updated by indra pratp singh*@
           <br/>
            <a id="fgp" style="color: #000000;font-weight:bold;text-decoration:underline; cursor: pointer;font-style: oblique;" onclick="return ForgetPassword();">Forgot password</a>
            <br />
            <br />
            <a target="_blank" href="../Tracking/AWBTracking" class="Button"><Span>Air Waybill Tracking</Span></a>
            
        </fieldset>

    </form>
    @*<p>
            <a style="color:#FFFFFF" href="~/Account/Register">Don't have a Account?</a><br />
            <a style="color:#FFFFFF" href="~/Account/ForgotPassword">Forgotten your password?</a>
        </p>*@
</section>
<script>
    //Added By Amit Yadav
    var iFramed = (window.location != window.parent.location) ? true : false;
    if (iFramed == true) {
        window.parent.location.href = "Login.cshtml";
    }
    //added by Pankaj
    //added by arman
    $(document).ready(function () {
        //$('div[id="body"] table tr td:eq(1)').find('img').attr('src', '');
        $('div p:contains(© 2017 -Cargoflash)').remove();

    });
    // end
    function ForgetPassword() {
        $("#popForgetPassword").remove();
        $("#LogInBtn").after('<div id="popForgetPassword" title="Forget Password" style="font-family: Arial; font-size:10px;"></div>');
        $("#popForgetPassword").append('<table style="margin: 0px auto;"><tr><td><label style="margin-top: 5%;" name="mUserName">User ID</label></td></tr><tr><td><input type="text" style="margin-bottom: 2%;    padding: 6px 10px;    box-sizing: border-box;    border: 1px solid #4CAF50;  border-radius: 4px;" id="UserName" maxlength="30" onblur="requiredfn(this.id)" /></td></tr><tr><td><label name="mEmailID">Email Address</label></td></tr><tr><td><input type="text" style="margin-bottom: 2%;    padding: 6px 10px;    box-sizing: border-box;    border: 1px solid #4CAF50;  border-radius: 4px;" id="EmailID" maxlength="75" onblur="requiredfn(this.id)" /></tr></td><tr><td><label id="mValidateMessage" style="color:red;"></label></td></tr></table>');
        $("#popForgetPassword").dialog(
        {
            autoResize: true,
            maxWidth: 350,
            maxHeight: 275,

            width: 350,
            height: 275,
            modal: true,
            title: 'Forgot Password',
            draggable: false,
            resizable: false,
            buttons: {
                "Reset": function () {
                    var userName = $('#UserName').val();
                    var EmailID = $('#EmailID').val();
                    resetPassword(userName, EmailID);
                    //$(this).dialog("close");
                },
                Cancel: function () {
                    $(this).dialog("close");
                }
            },
            close: function () {
                $(this).dialog("close");
            }
        });
    }
   

    function ValidateEMail(email) {
        var regex = /^([\w-\.]+)@@((\[[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\.)|(([\w-]+\.)+))([a-zA-Z]{2,4}|[0-9]{1,3})(\]?)$/;
        return regex.test(email);
    }
    
    $(function () {
        if ($('.validation-summary-errors').length > 0 && $(".validation-summary-errors li:first").html() != "null" && $(".validation-summary-errors li:first").html() != "")
            InvokeMsg["warning"]($(".validation-summary-errors").html(), "");
    });



    </script>
