using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Web.UI;
using System.Data;
using System.Net;
using System.IO;
using System.Reflection;
using System.Runtime.Serialization;
using CargoFlash.SoftwareFactory.WebUI;
using CargoFlash.SoftwareFactory.WebUI.Adapters;
using CargoFlash.SoftwareFactory.WebUI.Controls;
using CargoFlash.Cargo.Model.Master;
using System.Collections;
using CargoFlash.Cargo.Model.CRA;

namespace CargoFlash.Cargo.WebUI.CRA
{
   public class CRAInvoiceListManagementWebUI : BaseWebUISecureObject
    {
        public CRAInvoiceListManagementWebUI(Page PageContext)
        {
            try
            {
                if (this.SetCurrentPageContext(PageContext))
                {
                    this.ErrorNumber = 0;
                    this.ErrorMessage = "";
                }
                this.MyPageName = "Default.aspx";
                this.MyModuleID = "CRA";
                this.MyAppID = "CRAInvoiceList";
                this.MyPrimaryID = "Invoice_Summary_ID";
            }
            catch (Exception ex)
            {
                ApplicationWebUI applicationWebUI = new ApplicationWebUI();
                applicationWebUI.InsertExceptionIntoDatabase(true, ex, this.GetType());
                ErrorMessage = applicationWebUI.ErrorMessage;

            }
        }

        public CRAInvoiceListManagementWebUI()
        {
            try
            {
                this.MyModuleID = "CRA";
                this.MyAppID = "CRAInvoiceList";
                this.MyPrimaryID = "Invoice_Summary_ID";
            }
            catch (Exception ex)
            {
                ApplicationWebUI applicationWebUI = new ApplicationWebUI();
                applicationWebUI.InsertExceptionIntoDatabase(true, ex, this.GetType());
                ErrorMessage = applicationWebUI.ErrorMessage;
            }

        }
          private void CreateGrid(StringBuilder Container)
        {
            try
            {
                using (Grid g = new Grid())
                {
                    g.PrimaryID = this.MyPrimaryID;
                    g.PageName = this.MyPageName;
                    g.ModuleName = this.MyModuleID;
                    g.AppsName = this.MyAppID;
                    g.CommandButtonNewText = "New CRA-Invoice List";
                    g.FormCaptionText = "CRA-Invoice List";
                    g.ServiceModuleName = this.MyModuleID;
                    g.NewURL = MyPageName + "?" + GetWebURLString("New", false);
                 //   g.SuccessGrid = "OnSuccessGrid";
                    g.Column = new List<GridColumn>();
                 //   g.Column.Add(new GridColumn { Field = "Invoice_Summary_ID", Title = "Invoice_Summary_ID", DataType = GridDataType.String.ToString() });
                    g.Column.Add(new GridColumn { Field = "Invc_No", Title = "Invc. No.", DataType = GridDataType.String.ToString() });
                    g.Column.Add(new GridColumn { Field = "Invc_Curr", Title = "Invoice_Currency", DataType = GridDataType.String.ToString() });
                    g.Column.Add(new GridColumn { Field = "Party_Name", Title = "PARTY NAME", DataType = GridDataType.String.ToString() });
                    g.Column.Add(new GridColumn { Field = "Party_type", Title = "PARTY TYPE", DataType = GridDataType.String.ToString() });
                    g.Column.Add(new GridColumn { Field = "Invoice_Type", Title = "INVOICE TYPE", DataType = GridDataType.String.ToString() });
                    g.Column.Add(new GridColumn { Field = "Total_Amount", Title = "TOTAL AMOUNT", DataType = GridDataType.String.ToString() });
                    g.Column.Add(new GridColumn { Field = "Generated_By", Title = "GENERATED BY", DataType = GridDataType.Date.ToString() });
                    g.Column.Add(new GridColumn { Field = "Verified_by", Title = "VERIFIED BY", DataType = GridDataType.Date.ToString() });
                    g.Column.Add(new GridColumn { Field = "Printed_by", Title = "PRINTED BY	", DataType = GridDataType.String.ToString() });
                    g.Column.Add(new GridColumn { Field = "Status", Title = "STATUS", DataType = GridDataType.String.ToString() });
                    g.Column.Add(new GridColumn { Field = "Draft_Informed", Title = "DRAFT INFORMED", DataType = GridDataType.String.ToString() });
                    g.Column.Add(new GridColumn { Field = "Final_Informed", Title = "FINAL INFORMED", DataType = GridDataType.String.ToString() });
              //      g.Column.Add(new GridColumn { Field = "IsExcelUpload", Title = "Is ExcelUpload", DataType = GridDataType.String.ToString() });
                    g.InstantiateIn(Container);
                }
            }
            catch (Exception ex)
            {
                ApplicationWebUI applicationWebUI = new ApplicationWebUI();
                applicationWebUI.InsertExceptionIntoDatabase(true, ex, this.GetType());

            }
        }

          public StringBuilder CreateWebForm(StringBuilder container)
          {
              try
              {
                  if (System.Web.HttpContext.Current.Request.QueryString["FormAction"] != null)
                  {
                      //Set the display Mode form the URL QuesyString.
                      this.DisplayMode = "FORMACTION." + this.FormAction.ToString().ToUpper().Trim();
                      //Match the display Mode of the form.
                      switch (this.DisplayMode)
                      {
                          case DisplayModeIndexView:
                              CreateGrid(container);
                              break;
                          //case DisplayModeDuplicate:
                          //    BuildFormView(this.DisplayMode, container);
                          //    break;
                          //case DisplayModeReadView:
                          //    BuildFormView(this.DisplayMode, container);
                          //    break;
                          //case DisplayModeEdit:
                          //    BuildFormView(this.DisplayMode, container);
                          //    break;
                          //case DisplayModeNew:
                          //    BuildFormView(this.DisplayMode, container);
                          //    break;
                          //case DisplayModeDelete:
                          //    BuildFormView(this.DisplayMode, container);
                          //    break;
                          default:
                              break;

                      }
                  }
              }
              catch (Exception ex)
              {
                  ApplicationWebUI applicationWebUI = new ApplicationWebUI();
                  applicationWebUI.InsertExceptionIntoDatabase(true, ex, this.GetType());

              }
              return container;
          }
    }

}


